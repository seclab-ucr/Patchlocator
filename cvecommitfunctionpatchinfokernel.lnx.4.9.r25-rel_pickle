(dp0
S'CVE-2018-20856'
p1
(dp2
S'7bb76790999d_sdm845-perf'
p3
(dp4
(S'block/blk-core.c'
p5
S'blk_init_allocated_queue'
p6
I822
tp7
(dp8
S'func_range'
p9
(I822
I869
tp10
sS'arg_cnt'
p11
I3
sS'type'
p12
S'aft'
p13
sS'add'
p14
(dp15
(I867
I867
tp16
(lp17
S'\tq->fq = NULL;'
p18
asssssS'CVE-2019-10625'
p19
(dp20
S'7bb76790999d_sdm845-perf'
p21
(dp22
(S'drivers/char/diag/diag_dci.c'
p23
S'extract_dci_pkt_rsp'
p24
I990
tp25
(dp26
S'del'
p27
(dp28
(I1072
I1073
tp29
(lp30
S'\t * the rsp is the rsp length (write_len) + DCI_PKT_RSP_TYPE header (int)'
p31
aS'\t * + field for length (int) + delete_flag (uint8_t)'
p32
as(I1077
I1079
tp33
(lp34
S'\t\trsp_buf->capacity += 9 + rsp_len;'
p35
aS'\t\ttemp_buf = krealloc(rsp_buf->data, rsp_buf->capacity,'
p36
aS'\t\t\t\t    GFP_KERNEL);'
p37
as(I1098
I1100
tp38
(lp39
S'\tmemcpy(rsp_buf->data + rsp_buf->data_len, &pkt_rsp_header,'
p40
aS'\t\tsizeof(struct diag_dci_pkt_rsp_header_t));'
p41
aS'\trsp_buf->data_len += sizeof(struct diag_dci_pkt_rsp_header_t);'
p42
as(I1075
I1075
tp43
(lp44
S'\tif ((rsp_buf->data_len + 9 + rsp_len) > rsp_buf->capacity) {'
p45
assg9
(I990
I1114
tp46
sg11
I4
sg12
g13
sg14
(dp47
(I1072
I1073
tp48
(lp49
S'\t * the rsp is the rsp length (write_len) + dci response packet header'
p50
aS'\t * length (sizeof(struct diag_dci_pkt_rsp_header_t))'
p51
as(I1098
I1099
tp52
(lp53
S'\tmemcpy(rsp_buf->data + rsp_buf->data_len, &pkt_rsp_header, header_len);'
p54
aS'\trsp_buf->data_len += header_len;'
p55
as(I1003
I1003
tp56
(lp57
S'\tint header_len = sizeof(struct diag_dci_pkt_rsp_header_t);'
p58
as(I1085
I1088
tp59
(lp60
S'\t\trsp_buf->capacity += header_len + rsp_len;'
p61
aS'\t\tif (rsp_buf->capacity > rsp_buf->data_len)'
p62
aS'\t\t\tmemcpy(temp_buf, rsp_buf->data, rsp_buf->data_len);'
p63
aS'\t\tvfree(rsp_buf->data);'
p64
as(I1077
I1077
tp65
(lp66
S'\t\ttemp_buf = vzalloc(rsp_buf->capacity + header_len + rsp_len);'
p67
as(I1075
I1075
tp68
(lp69
S'\tif ((rsp_buf->data_len + header_len + rsp_len) > rsp_buf->capacity) {'
p70
asssssS'CVE-2019-14104'
p71
(dp72
S'f5bee8dc8d4a_sdm845-perf'
p73
(dp74
(S'drivers/media/platform/msm/camera/cam_core/cam_context.c'
p75
S'cam_context_handle_stop_dev'
p76
I382
tp77
(dp78
g27
(dp79
(I387
I387
tp80
(lp81
S'\tif (!ctx->state_machine) {'
p82
assg9
(I382
I408
tp83
sg11
I2
sg12
g13
sg14
(dp84
(I387
I387
tp85
(lp86
S'\tif (!ctx || !ctx->state_machine) {'
p87
asss(g75
S'cam_context_handle_start_dev'
p88
I353
tp89
(dp90
g27
(dp91
(I358
I358
tp92
(lp93
S'\tif (!ctx->state_machine) {'
p94
assg9
(I353
I380
tp95
sg11
I2
sg12
g13
sg14
(dp96
(I358
I358
tp97
(lp98
S'\tif (!ctx || !ctx->state_machine) {'
p99
asssssS'CVE-2019-2182'
p100
(dp101
S'a77c16d4981b_sdm845-perf'
p102
(dp103
(S'arch/arm64/mm/mmu.c'
p104
S'pud_set_huge'
p105
I838
tp106
(dp107
g27
(dp108
(I850
I850
tp109
(lp110
S'\tset_pud(pud, __pud(phys | PUD_TYPE_SECT | pgprot_val(mk_sect_prot(prot))));'
p111
assg9
(I838
I852
tp112
sg11
I3
sg12
g13
sg14
(dp113
(I840
I848
tp114
(lp115
S'\tpgprot_t sect_prot = __pgprot(PUD_TYPE_SECT |'
p116
aS'\t\t\t\t\tpgprot_val(mk_sect_prot(prot)));'
p117
aS'\tpud_t new_pud = pfn_pud(__phys_to_pfn(phys), sect_prot);'
p118
aS''
p119
aS'\t/* Only allow permission changes for now */'
p120
aS'\tif (!pgattr_change_is_safe(READ_ONCE(pud_val(*pud)),'
p121
aS'\t\t\t\t   pud_val(new_pud)))'
p122
aS'\t\treturn 0;'
p123
ag119
as(I850
I850
tp124
(lp125
S'\tset_pud(pud, new_pud);'
p126
asss(g104
S'pmd_set_huge'
p127
I854
tp128
(dp129
g27
(dp130
(I866
I866
tp131
(lp132
S'\tset_pmd(pmd, __pmd(phys | PMD_TYPE_SECT | pgprot_val(mk_sect_prot(prot))));'
p133
assg9
(I854
I868
tp134
sg11
I3
sg12
g13
sg14
(dp135
(I856
I864
tp136
(lp137
S'\tpgprot_t sect_prot = __pgprot(PMD_TYPE_SECT |'
p138
aS'\t\t\t\t\tpgprot_val(mk_sect_prot(prot)));'
p139
aS'\tpmd_t new_pmd = pfn_pmd(__phys_to_pfn(phys), sect_prot);'
p140
ag119
aS'\t/* Only allow permission changes for now */'
p141
aS'\tif (!pgattr_change_is_safe(READ_ONCE(pmd_val(*pmd)),'
p142
aS'\t\t\t\t   pmd_val(new_pmd)))'
p143
aS'\t\treturn 0;'
p144
ag119
as(I866
I866
tp145
(lp146
S'\tset_pmd(pmd, new_pmd);'
p147
assssS'146de2055790_sdm845-perf'
p148
(dp149
(g104
g127
I868
tp150
(dp151
g27
(dp152
(I868
I868
tp153
(lp154
S'int pmd_set_huge(pmd_t *pmd, phys_addr_t phys, pgprot_t prot)'
p155
as(I880
I880
tp156
(lp157
S'\tset_pmd(pmd, __pmd(phys | PMD_TYPE_SECT | pgprot_val(mk_sect_prot(prot))));'
p158
assg9
(I868
I882
tp159
sg11
I3
sg12
g13
sg14
(dp160
(I868
I868
tp161
(lp162
S'int pmd_set_huge(pmd_t *pmdp, phys_addr_t phys, pgprot_t prot)'
p163
as(I880
I880
tp164
(lp165
S'\tset_pmd(pmdp, new_pmd);'
p166
as(I870
I878
tp167
(lp168
S'\tpgprot_t sect_prot = __pgprot(PMD_TYPE_SECT |'
p169
aS'\t\t\t\t\tpgprot_val(mk_sect_prot(prot)));'
p170
aS'\tpmd_t new_pmd = pfn_pmd(__phys_to_pfn(phys), sect_prot);'
p171
ag119
aS'\t/* Only allow permission changes for now */'
p172
aS'\tif (!pgattr_change_is_safe(READ_ONCE(pmd_val(*pmdp)),'
p173
aS'\t\t\t\t   pmd_val(new_pmd)))'
p174
aS'\t\treturn 0;'
p175
ag119
asss(g104
g105
I852
tp176
(dp177
g27
(dp178
(I852
I852
tp179
(lp180
S'int pud_set_huge(pud_t *pud, phys_addr_t phys, pgprot_t prot)'
p181
as(I864
I864
tp182
(lp183
S'\tset_pud(pud, __pud(phys | PUD_TYPE_SECT | pgprot_val(mk_sect_prot(prot))));'
p184
assg9
(I852
I866
tp185
sg11
I3
sg12
g13
sg14
(dp186
(I864
I864
tp187
(lp188
S'\tset_pud(pudp, new_pud);'
p189
as(I852
I852
tp190
(lp191
S'int pud_set_huge(pud_t *pudp, phys_addr_t phys, pgprot_t prot)'
p192
as(I854
I862
tp193
(lp194
S'\tpgprot_t sect_prot = __pgprot(PUD_TYPE_SECT |'
p195
aS'\t\t\t\t\tpgprot_val(mk_sect_prot(prot)));'
p196
aS'\tpud_t new_pud = pfn_pud(__phys_to_pfn(phys), sect_prot);'
p197
ag119
aS'\t/* Only allow permission changes for now */'
p198
aS'\tif (!pgattr_change_is_safe(READ_ONCE(pud_val(*pudp)),'
p199
aS'\t\t\t\t   pud_val(new_pud)))'
p200
aS'\t\treturn 0;'
p201
ag119
assssS'f853c3dbe3a6_sdm845-perf'
p202
(dp203
(g104
g127
I835
tp204
(dp205
g9
(I835
I844
tp206
sg11
I3
sg12
g13
sg14
(dp207
(I837
I840
tp208
(lp209
S"\t/* ioremap_page_range doesn't honour BBM */"
p210
aS'\tif (pmd_present(READ_ONCE(*pmd)))'
p211
aS'\t\treturn 0;'
p212
ag119
asss(g104
g105
I824
tp213
(dp214
g9
(I824
I833
tp215
sg11
I3
sg12
g13
sg14
(dp216
(I826
I829
tp217
(lp218
S"\t/* ioremap_page_range doesn't honour BBM */"
p219
aS'\tif (pud_present(READ_ONCE(*pud)))'
p220
aS'\t\treturn 0;'
p221
ag119
asssssS'CVE-2019-2263'
p222
(dp223
S'6c6aaf4e8330_sdm845-perf'
p224
(dp225
(S'drivers/char/diag/diagchar_core.c'
p226
S'diagchar_read'
p227
I3311
tp228
(dp229
g27
(dp230
(I3571
I3571
tp231
(lp232
S'\t\t\tif (!entry->in_service)'
p233
as(I3568
I3568
tp234
(lp235
S'\t\t\tif (entry->client->tgid != current->tgid)'
p236
as(I3339
I3339
tp237
(lp238
S'\twait_event_interruptible(driver->wait_q, driver->data_ready[index]);'
p239
as(I3450
I3450
tp240
(lp241
S'\t\t\tif (ret == -EFAULT)'
p242
as(I3436
I3436
tp243
(lp244
g119
as(I3433
I3433
tp245
(lp246
S'\t\tif (ret == -EFAULT)'
p247
as(I3385
I3385
tp248
(lp249
S'\t\t\tif (ret == -EFAULT)'
p250
as(I3561
I3562
tp251
(lp252
S'\t\tmutex_lock(&driver->dci_mutex);'
p253
aS'\t\t/* Copy the type of data being passed */'
p254
as(I3560
I3560
tp255
(lp256
S'\tmutex_unlock(&driver->diagchar_mutex);'
p257
as(I3467
I3467
tp258
(lp259
S'\t\tif (ret == -EFAULT)'
p260
as(I3442
I3442
tp261
(lp262
S'\t\t\tif (ret == -EFAULT)'
p263
as(I3413
I3413
tp264
(lp265
S'\t\tif (ret == -EFAULT)'
p266
assg9
(I3311
I3636
tp267
sg11
I4
sg12
g13
sg14
(dp268
(I3388
I3388
tp269
(lp270
S'\t\t\t}'
p271
as(I3379
I3379
tp272
(lp273
S'\t\tmutex_lock(&driver->md_session_lock);'
p274
as(I3436
I3436
tp275
(lp276
S'\t\t}'
p277
as(I3513
I3513
tp278
(lp279
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p280
as(I3351
I3351
tp281
(lp282
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p283
as(I3592
I3593
tp284
(lp285
S'\t\t\t\tput_task_struct(task_s);'
p286
aS'\t\t\t\tput_pid(pid_struct);'
p287
as(I3618
I3619
tp288
(lp289
S'\t\t\tput_task_struct(task_s);'
p290
aS'\t\t\tput_pid(pid_struct);'
p291
as(I3445
I3445
tp292
(lp293
S'\t\t\t}'
p294
as(I3600
I3601
tp295
(lp296
S'\t\t\t\tput_task_struct(task_s);'
p297
aS'\t\t\t\tput_pid(pid_struct);'
p298
as(I3322
I3323
tp299
(lp300
S'\tstruct pid *pid_struct = NULL;'
p301
aS'\tstruct task_struct *task_s = NULL;'
p302
as(I3325
I3325
tp303
(lp304
S'\tmutex_lock(&driver->diagchar_mutex);'
p305
as(I3339
I3340
tp306
(lp307
S'\twait_event_interruptible(driver->wait_q,'
p308
aS'\t\t\tatomic_read(&driver->data_ready_notif[index]) > 0);'
p309
as(I3430
I3430
tp310
(lp311
S'\t\tmutex_lock(&driver->md_session_lock);'
p312
as(I3562
I3564
tp313
(lp314
S'\t\tmutex_unlock(&driver->diagchar_mutex);'
p315
aS'\t\t/* Copy the type of data being passed */'
p316
aS'\t\tmutex_lock(&driver->dci_mutex);'
p317
as(I3464
I3464
tp318
(lp319
S'\t\tmutex_lock(&driver->md_session_lock);'
p320
as(I3624
I3624
tp321
(lp322
S'\tmutex_unlock(&driver->diagchar_mutex);'
p323
as(I3470
I3470
tp324
(lp325
S'\t\t}'
p326
as(I3457
I3457
tp327
(lp328
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p329
as(I3390
I3390
tp330
(lp331
S'\t\tmutex_unlock(&driver->md_session_lock);'
p332
as(I3474
I3474
tp333
(lp334
S'\t\tmutex_unlock(&driver->md_session_lock);'
p335
as(I3610
I3610
tp336
(lp337
S'\t\t\tatomic_dec(&driver->data_ready_notif[index]);'
p338
as(I3613
I3614
tp339
(lp340
S'\t\t\t\tput_task_struct(task_s);'
p341
aS'\t\t\t\tput_pid(pid_struct);'
p342
as(I3374
I3374
tp343
(lp344
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p345
as(I3495
I3495
tp346
(lp347
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p348
as(I3571
I3576
tp349
(lp350
S'\t\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p351
aS'\t\t\tif (!task_s) {'
p352
aS'\t\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p353
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p354
aS'\t\t\t\tentry->tgid);'
p355
aS'\t\t\t\tput_pid(pid_struct);'
p356
as(I3416
I3416
tp357
(lp358
S'\t\t}'
p359
as(I3442
I3443
tp360
(lp361
S'\t\t\tif (ret == -EFAULT) {'
p362
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p363
as(I3450
I3451
tp364
(lp365
S'\t\t\tif (ret == -EFAULT) {'
p366
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p367
as(I3467
I3468
tp368
(lp369
S'\t\tif (ret == -EFAULT) {'
p370
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p371
as(I3455
I3455
tp372
(lp373
S'\t\tmutex_unlock(&driver->md_session_lock);'
p374
as(I3419
I3419
tp375
(lp376
S'\t\tmutex_unlock(&driver->md_session_lock);'
p377
as(I3568
I3569
tp378
(lp379
S'\t\t\tpid_struct = find_get_pid(entry->tgid);'
p380
aS'\t\t\tif (!pid_struct)'
p381
as(I3453
I3453
tp382
(lp383
S'\t\t\t}'
p384
as(I3555
I3555
tp385
(lp386
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p387
as(I3478
I3478
tp388
(lp389
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p390
as(I3357
I3357
tp391
(lp392
S'\t\tmutex_lock(&driver->md_session_lock);'
p393
as(I3535
I3535
tp394
(lp395
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p396
as(I3401
I3401
tp397
(lp398
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p399
as(I3329
I3329
tp400
(lp401
S'\tmutex_unlock(&driver->diagchar_mutex);'
p402
as(I3385
I3386
tp403
(lp404
S'\t\t\tif (ret == -EFAULT) {'
p405
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p406
as(I3413
I3414
tp407
(lp408
S'\t\tif (ret == -EFAULT) {'
p409
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p410
as(I3368
I3368
tp411
(lp412
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p413
as(I3423
I3423
tp414
(lp415
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p416
as(I3410
I3410
tp417
(lp418
S'\t\tmutex_lock(&driver->md_session_lock);'
p419
as(I3433
I3434
tp420
(lp421
S'\t\tif (ret == -EFAULT) {'
p422
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p423
as(I3578
I3590
tp424
(lp425
S'\t\t\t}'
p426
aS'\t\t\tif (task_s == entry->client) {'
p427
aS'\t\t\t\tif (entry->client->tgid != current->tgid) {'
p428
aS'\t\t\t\t\tput_task_struct(task_s);'
p429
aS'\t\t\t\t\tput_pid(pid_struct);'
p430
aS'\t\t\t\t\tcontinue;'
p431
aS'\t\t\t\t}'
p432
aS'\t\t\t}'
p433
aS'\t\t\tif (!entry->in_service) {'
p434
aS'\t\t\t\tput_task_struct(task_s);'
p435
aS'\t\t\t\tput_pid(pid_struct);'
p436
aS'\t\t\t\tcontinue;'
p437
aS'\t\t\t}'
p438
as(I3361
I3361
tp439
(lp440
S'\t\tmutex_unlock(&driver->md_session_lock);'
p441
assssS'10171d1032b7_sdm845-perf'
p442
(dp443
(g226
g227
I3142
tp444
(dp445
g27
(dp446
(I3168
I3168
tp447
(lp448
S'\twait_event_interruptible(driver->wait_q, driver->data_ready[index]);'
p449
as(I3389
I3389
tp450
(lp451
S'\tmutex_unlock(&driver->diagchar_mutex);'
p452
as(I3242
I3242
tp453
(lp454
S'\t\tif (ret == -EFAULT)'
p455
as(I3214
I3214
tp456
(lp457
S'\t\t\tif (ret == -EFAULT)'
p458
as(I3271
I3271
tp459
(lp460
S'\t\t\tif (ret == -EFAULT)'
p461
as(I3279
I3279
tp462
(lp463
S'\t\t\tif (ret == -EFAULT)'
p464
as(I3296
I3296
tp465
(lp466
S'\t\tif (ret == -EFAULT)'
p467
as(I3390
I3391
tp468
(lp469
S'\t\tmutex_lock(&driver->dci_mutex);'
p470
aS'\t\t/* Copy the type of data being passed */'
p471
as(I3262
I3262
tp472
(lp473
S'\t\tif (ret == -EFAULT)'
p474
as(I3265
I3265
tp475
(lp476
g119
assg9
(I3142
I3438
tp477
sg11
I4
sg12
g13
sg14
(dp478
(I3242
I3243
tp479
(lp480
S'\t\tif (ret == -EFAULT) {'
p481
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p482
as(I3219
I3219
tp483
(lp484
S'\t\tmutex_unlock(&driver->md_session_lock);'
p485
as(I3284
I3284
tp486
(lp487
S'\t\tmutex_unlock(&driver->md_session_lock);'
p488
as(I3252
I3252
tp489
(lp490
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p491
as(I3384
I3384
tp492
(lp493
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p494
as(I3245
I3245
tp495
(lp496
S'\t\t}'
p497
as(I3180
I3180
tp498
(lp499
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p500
as(I3426
I3426
tp501
(lp502
S'\tmutex_unlock(&driver->diagchar_mutex);'
p503
as(I3307
I3307
tp504
(lp505
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p506
as(I3296
I3297
tp507
(lp508
S'\t\tif (ret == -EFAULT) {'
p509
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p510
as(I3203
I3203
tp511
(lp512
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p513
as(I3324
I3324
tp514
(lp515
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p516
as(I3286
I3286
tp517
(lp518
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p519
as(I3186
I3186
tp520
(lp521
S'\t\tmutex_lock(&driver->md_session_lock);'
p522
as(I3230
I3230
tp523
(lp524
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p525
as(I3265
I3265
tp526
(lp527
S'\t\t}'
p528
as(I3293
I3293
tp529
(lp530
S'\t\tmutex_lock(&driver->md_session_lock);'
p531
as(I3168
I3169
tp532
(lp533
S'\twait_event_interruptible(driver->wait_q,'
p534
aS'\t\t\tatomic_read(&driver->data_ready_notif[index]) > 0);'
p535
as(I3248
I3248
tp536
(lp537
S'\t\tmutex_unlock(&driver->md_session_lock);'
p538
as(I3190
I3190
tp539
(lp540
S'\t\tmutex_unlock(&driver->md_session_lock);'
p541
as(I3282
I3282
tp542
(lp543
S'\t\t\t}'
p544
as(I3239
I3239
tp545
(lp546
S'\t\tmutex_lock(&driver->md_session_lock);'
p547
as(I3303
I3303
tp548
(lp549
S'\t\tmutex_unlock(&driver->md_session_lock);'
p550
as(I3416
I3416
tp551
(lp552
S'\t\t\tatomic_dec(&driver->data_ready_notif[index]);'
p553
as(I3262
I3263
tp554
(lp555
S'\t\tif (ret == -EFAULT) {'
p556
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p557
as(I3342
I3342
tp558
(lp559
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p560
as(I3259
I3259
tp561
(lp562
S'\t\tmutex_lock(&driver->md_session_lock);'
p563
as(I3158
I3158
tp564
(lp565
S'\tmutex_unlock(&driver->diagchar_mutex);'
p566
as(I3197
I3197
tp567
(lp568
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p569
as(I3299
I3299
tp570
(lp571
S'\t\t}'
p572
as(I3274
I3274
tp573
(lp574
S'\t\t\t}'
p575
as(I3271
I3272
tp576
(lp577
S'\t\t\tif (ret == -EFAULT) {'
p578
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p579
as(I3364
I3364
tp580
(lp581
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p582
as(I3208
I3208
tp583
(lp584
S'\t\tmutex_lock(&driver->md_session_lock);'
p585
as(I3154
I3154
tp586
(lp587
S'\tmutex_lock(&driver->diagchar_mutex);'
p588
as(I3214
I3215
tp589
(lp590
S'\t\t\tif (ret == -EFAULT) {'
p591
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p592
as(I3279
I3280
tp593
(lp594
S'\t\t\tif (ret == -EFAULT) {'
p595
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p596
as(I3217
I3217
tp597
(lp598
S'\t\t\t}'
p599
as(I3391
I3393
tp600
(lp601
S'\t\tmutex_unlock(&driver->diagchar_mutex);'
p602
aS'\t\t/* Copy the type of data being passed */'
p603
aS'\t\tmutex_lock(&driver->dci_mutex);'
p604
assssS'd5d55ba074e6_sdm845-perf'
p605
(dp606
(g226
g227
I3132
tp607
(dp608
g27
(dp609
(I3362
I3362
tp610
(lp611
S'\tmutex_unlock(&driver->diagchar_mutex);'
p612
as(I3363
I3364
tp613
(lp614
S'\t\tmutex_lock(&driver->dci_mutex);'
p615
aS'\t\t/* Copy the type of data being passed */'
p616
as(I3158
I3158
tp617
(lp618
S'\twait_event_interruptible(driver->wait_q, driver->data_ready[index]);'
p619
assg9
(I3132
I3411
tp620
sg11
I4
sg12
g13
sg14
(dp621
(I3187
I3187
tp622
(lp623
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p624
as(I3144
I3144
tp625
(lp626
S'\tmutex_lock(&driver->diagchar_mutex);'
p627
as(I3280
I3280
tp628
(lp629
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p630
as(I3158
I3159
tp631
(lp632
S'\twait_event_interruptible(driver->wait_q,'
p633
aS'\t\t\tatomic_read(&driver->data_ready_notif[index]) > 0);'
p634
as(I3364
I3366
tp635
(lp636
S'\t\tmutex_unlock(&driver->diagchar_mutex);'
p637
aS'\t\t/* Copy the type of data being passed */'
p638
aS'\t\tmutex_lock(&driver->dci_mutex);'
p639
as(I3176
I3176
tp640
(lp641
S'\t\tmutex_lock(&driver->md_session_lock);'
p642
as(I3357
I3357
tp643
(lp644
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p645
as(I3170
I3170
tp646
(lp647
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p648
as(I3148
I3148
tp649
(lp650
S'\tmutex_unlock(&driver->diagchar_mutex);'
p651
as(I3399
I3399
tp652
(lp653
S'\tmutex_unlock(&driver->diagchar_mutex);'
p654
as(I3263
I3263
tp655
(lp656
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p657
as(I3193
I3193
tp658
(lp659
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p660
as(I3218
I3218
tp661
(lp662
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p663
as(I3200
I3200
tp664
(lp665
S'\t\tmutex_unlock(&driver->md_session_lock);'
p666
as(I3337
I3337
tp667
(lp668
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p669
as(I3198
I3198
tp670
(lp671
S'\t\tmutex_lock(&driver->md_session_lock);'
p672
as(I3389
I3389
tp673
(lp674
S'\t\t\tatomic_dec(&driver->data_ready_notif[index]);'
p675
as(I3236
I3236
tp676
(lp677
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p678
as(I3178
I3178
tp679
(lp680
S'\t\tmutex_unlock(&driver->md_session_lock);'
p681
as(I3297
I3297
tp682
(lp683
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p684
as(I3315
I3315
tp685
(lp686
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p687
assssS'f332617ebb03_sdm845-perf'
p688
(dp689
(g226
g227
I3274
tp690
(dp691
g27
(dp692
(I3430
I3430
tp693
(lp694
S'\t\tif (ret == -EFAULT)'
p695
as(I3348
I3348
tp696
(lp697
S'\t\t\tif (ret == -EFAULT)'
p698
as(I3523
I3523
tp699
(lp700
S'\tmutex_unlock(&driver->diagchar_mutex);'
p701
as(I3302
I3302
tp702
(lp703
S'\twait_event_interruptible(driver->wait_q, driver->data_ready[index]);'
p704
as(I3524
I3525
tp705
(lp706
S'\t\tmutex_lock(&driver->dci_mutex);'
p707
aS'\t\t/* Copy the type of data being passed */'
p708
as(I3396
I3396
tp709
(lp710
S'\t\tif (ret == -EFAULT)'
p711
as(I3399
I3399
tp712
(lp713
g119
as(I3376
I3376
tp714
(lp715
S'\t\tif (ret == -EFAULT)'
p716
as(I3405
I3405
tp717
(lp718
S'\t\t\tif (ret == -EFAULT)'
p719
as(I3531
I3531
tp720
(lp721
S'\t\t\tif (entry->client->tgid != current->tgid)'
p722
as(I3413
I3413
tp723
(lp724
S'\t\t\tif (ret == -EFAULT)'
p725
assg9
(I3274
I3583
tp726
sg11
I4
sg12
g13
sg14
(dp727
(I3408
I3408
tp728
(lp729
S'\t\t\t}'
p730
as(I3437
I3437
tp731
(lp732
S'\t\tmutex_unlock(&driver->md_session_lock);'
p733
as(I3386
I3386
tp734
(lp735
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p736
as(I3476
I3476
tp737
(lp738
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p739
as(I3399
I3399
tp740
(lp741
S'\t\t}'
p742
as(I3433
I3433
tp743
(lp744
S'\t\t}'
p745
as(I3320
I3320
tp746
(lp747
S'\t\tmutex_lock(&driver->md_session_lock);'
p748
as(I3571
I3571
tp749
(lp750
S'\tmutex_unlock(&driver->diagchar_mutex);'
p751
as(I3331
I3331
tp752
(lp753
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p754
as(I3348
I3349
tp755
(lp756
S'\t\t\tif (ret == -EFAULT) {'
p757
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p758
as(I3324
I3324
tp759
(lp760
S'\t\tmutex_unlock(&driver->md_session_lock);'
p761
as(I3337
I3337
tp762
(lp763
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p764
as(I3498
I3498
tp765
(lp766
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p767
as(I3342
I3342
tp768
(lp769
S'\t\tmutex_lock(&driver->md_session_lock);'
p770
as(I3531
I3538
tp771
(lp772
S'\t\t\tpid_struct = find_get_pid(entry->tgid);'
p773
aS'\t\t\tif (!pid_struct)'
p774
aS'\t\t\t\tcontinue;'
p775
aS'\t\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p776
aS'\t\t\tif (!task_s) {'
p777
aS'\t\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p778
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p779
aS'\t\t\t\tentry->tgid);'
p780
as(I3393
I3393
tp781
(lp782
S'\t\tmutex_lock(&driver->md_session_lock);'
p783
as(I3525
I3527
tp784
(lp785
S'\t\tmutex_unlock(&driver->diagchar_mutex);'
p786
aS'\t\t/* Copy the type of data being passed */'
p787
aS'\t\tmutex_lock(&driver->dci_mutex);'
p788
as(I3364
I3364
tp789
(lp790
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p791
as(I3379
I3379
tp792
(lp793
S'\t\t}'
p794
as(I3418
I3418
tp795
(lp796
S'\t\tmutex_unlock(&driver->md_session_lock);'
p797
as(I3396
I3397
tp798
(lp799
S'\t\tif (ret == -EFAULT) {'
p800
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p801
as(I3518
I3518
tp802
(lp803
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p804
as(I3353
I3353
tp805
(lp806
S'\t\tmutex_unlock(&driver->md_session_lock);'
p807
as(I3416
I3416
tp808
(lp809
S'\t\t\t}'
p810
as(I3430
I3431
tp811
(lp812
S'\t\tif (ret == -EFAULT) {'
p813
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p814
as(I3351
I3351
tp815
(lp816
S'\t\t\t}'
p817
as(I3458
I3458
tp818
(lp819
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p820
as(I3376
I3377
tp821
(lp822
S'\t\tif (ret == -EFAULT) {'
p823
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p824
as(I3540
I3543
tp825
(lp826
S'\t\t\t}'
p827
aS'\t\t\tif (task_s == entry->client)'
p828
aS'\t\t\t\tif (entry->client->tgid != current->tgid)'
p829
aS'\t\t\t\t\tcontinue;'
p830
as(I3302
I3303
tp831
(lp832
S'\twait_event_interruptible(driver->wait_q,'
p833
aS'\t\t\tatomic_read(&driver->data_ready_notif[index]) > 0);'
p834
as(I3427
I3427
tp835
(lp836
S'\t\tmutex_lock(&driver->md_session_lock);'
p837
as(I3382
I3382
tp838
(lp839
S'\t\tmutex_unlock(&driver->md_session_lock);'
p840
as(I3405
I3406
tp841
(lp842
S'\t\t\tif (ret == -EFAULT) {'
p843
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p844
as(I3292
I3292
tp845
(lp846
S'\tmutex_unlock(&driver->diagchar_mutex);'
p847
as(I3561
I3561
tp848
(lp849
S'\t\t\tatomic_dec(&driver->data_ready_notif[index]);'
p850
as(I3441
I3441
tp851
(lp852
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p853
as(I3285
I3286
tp854
(lp855
S'\tstruct pid *pid_struct = NULL;'
p856
aS'\tstruct task_struct *task_s = NULL;'
p857
as(I3288
I3288
tp858
(lp859
S'\tmutex_lock(&driver->diagchar_mutex);'
p860
as(I3314
I3314
tp861
(lp862
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p863
as(I3420
I3420
tp864
(lp865
S'\t\tatomic_dec(&driver->data_ready_notif[index]);'
p866
as(I3373
I3373
tp867
(lp868
S'\t\tmutex_lock(&driver->md_session_lock);'
p869
as(I3413
I3414
tp870
(lp871
S'\t\t\tif (ret == -EFAULT) {'
p872
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p873
asssssS'CVE-2019-10620'
p874
(dp875
S'0dee62a0f3d9_sdm845-perf'
p876
(dp877
(S'drivers/gpu/drm/msm/sde_dbg.c'
p878
S'sde_evtlog_dump_read'
p879
I2777
tp880
(dp881
g9
(I2777
I2798
tp882
sg11
I4
sg12
g13
sg14
(dp883
(I2788
I2792
tp884
(lp885
S'\tif (len < 0 || len > count) {'
p886
aS'\t\tpr_err("len is more than user buffer size");'
p887
aS'\t\treturn 0;'
p888
aS'\t}'
p889
ag119
asssssS'CVE-2019-14072'
p890
(dp891
S'7dca8885b04d_sdm845-perf'
p892
(dp893
(S'drivers/gpu/msm/kgsl.c'
p894
S'kgsl_ioctl_gpu_sparse_command'
p895
I3922
tp896
(dp897
g9
(I3922
I4008
tp898
sg11
I3
sg12
g13
sg14
(dp899
(I3933
I3935
tp900
(lp901
S'\tif (!(device->flags & KGSL_FLAG_SPARSE))'
p902
aS'\t\treturn -ENOTSUPP;'
p903
ag119
asss(g894
S'kgsl_ioctl_sparse_phys_alloc'
p904
I3336
tp905
(dp906
g9
(I3336
I3423
tp907
sg11
I3
sg12
g13
sg14
(dp908
(I3340
I3340
tp909
(lp910
S'\tstruct kgsl_device *device = dev_priv->device;'
p911
as(I3347
I3349
tp912
(lp913
S'\tif (!(device->flags & KGSL_FLAG_SPARSE))'
p914
aS'\t\treturn -ENOTSUPP;'
p915
ag119
asss(g894
S'kgsl_ioctl_sparse_bind'
p916
I3862
tp917
(dp918
g9
(I3862
I3920
tp919
sg11
I3
sg12
g13
sg14
(dp920
(I3875
I3877
tp921
(lp922
S'\tif (!(device->flags & KGSL_FLAG_SPARSE))'
p923
aS'\t\treturn -ENOTSUPP;'
p924
ag119
as(I3866
I3866
tp925
(lp926
S'\tstruct kgsl_device *device = dev_priv->device;'
p927
asss(g894
S'kgsl_ioctl_sparse_virt_free'
p928
I3509
tp929
(dp930
g9
(I3509
I3543
tp931
sg11
I3
sg12
g13
sg14
(dp932
(I3517
I3519
tp933
(lp934
S'\tif (!(device->flags & KGSL_FLAG_SPARSE))'
p935
aS'\t\treturn -ENOTSUPP;'
p936
ag119
as(I3513
I3513
tp937
(lp938
S'\tstruct kgsl_device *device = dev_priv->device;'
p939
asss(g894
S'kgsl_ioctl_sparse_virt_alloc'
p940
I3461
tp941
(dp942
g9
(I3461
I3507
tp943
sg11
I3
sg12
g13
sg14
(dp944
(I3465
I3465
tp945
(lp946
S'\tstruct kgsl_device *device = dev_priv->device;'
p947
as(I3470
I3472
tp948
(lp949
S'\tif (!(device->flags & KGSL_FLAG_SPARSE))'
p950
aS'\t\treturn -ENOTSUPP;'
p951
ag119
asss(g894
S'kgsl_ioctl_sparse_phys_free'
p952
I3425
tp953
(dp954
g9
(I3425
I3459
tp955
sg11
I3
sg12
g13
sg14
(dp956
(I3433
I3435
tp957
(lp958
S'\tif (!(device->flags & KGSL_FLAG_SPARSE))'
p959
aS'\t\treturn -ENOTSUPP;'
p960
ag119
as(I3429
I3429
tp961
(lp962
S'\tstruct kgsl_device *device = dev_priv->device;'
p963
asss(g894
S'kgsl_device_platform_probe'
p964
I4678
tp965
(dp966
g9
(I4678
I4841
tp967
sg11
I1
sg12
g13
sg14
(dp968
(I4691
I4693
tp969
(lp970
S'\t/* Disable the sparse ioctl invocation as they are not used */'
p971
aS'\tdevice->flags &= ~KGSL_FLAG_SPARSE;'
p972
ag119
asssssS'CVE-2019-10584'
p973
(dp974
S'33ef3ba97d39_sdm845-perf'
p975
(dp976
(S'drivers/media/platform/msm/vidc/venus_hfi.c'
p977
S'__flush_debug_queue'
p978
I2947
tp979
(dp980
g27
(dp981
(I2988
I2989
tp982
(lp983
S'\t\tstruct hfi_msg_sys_coverage_packet *pkt ='
p984
aS'\t\t\t(struct hfi_msg_sys_coverage_packet *) packet;'
p985
as(I3011
I3011
tp986
(lp987
S'\t\t} else {'
p988
assg9
(I2947
I3027
tp989
sg11
I2
sg12
g13
sg14
(dp990
(I2998
I2999
tp991
(lp992
S'\t\t\tstruct hfi_msg_sys_coverage_packet *pkt ='
p993
aS'\t\t\t\t(struct hfi_msg_sys_coverage_packet *) packet;'
p994
as(I3002
I3004
tp995
(lp996
S'\t\t\tSKIP_INVALID_PKT(pkt->size,'
p997
aS'\t\t\t\tpkt->msg_size, sizeof(*pkt));'
p998
ag119
as(I2988
I2995
tp999
(lp1000
S'\t\tstruct hfi_packet_header *pkt ='
p1001
aS'\t\t\t(struct hfi_packet_header *) packet;'
p1002
ag119
aS'\t\tif (pkt->size < sizeof(struct hfi_packet_header)) {'
p1003
aS'\t\t\tdprintk(VIDC_ERR, "Invalid pkt size - %s\\n",'
p1004
aS'\t\t\t\t__func__);'
p1005
aS'\t\t\tcontinue;'
p1006
aS'\t\t}'
p1007
as(I3015
I3019
tp1008
(lp1009
g119
aS'\t\t\tSKIP_INVALID_PKT(pkt->size,'
p1010
aS'\t\t\t\tpkt->msg_size, sizeof(*pkt));'
p1011
ag119
aS"\t\t\tpkt->rg_msg_data[pkt->msg_size-1] = '\\0';"
p1012
as(I3011
I3012
tp1013
(lp1014
g119
aS'\t\t} else if (pkt->packet_type == HFI_MSG_SYS_DEBUG) {'
p1015
as(I3023
I3023
tp1016
(lp1017
S'#undef SKIP_INVALID_PKT'
p1018
as(I2975
I2986
tp1019
(lp1020
S'#define SKIP_INVALID_PKT(pkt_size, payload_size, pkt_hdr_size) ({ \\'
p1021
aS'\t\tif (pkt_size < pkt_hdr_size || \\'
p1022
aS'\t\t\tpayload_size < MIN_PAYLOAD_SIZE || \\'
p1023
aS'\t\t\tpayload_size > \\'
p1024
aS'\t\t\t(pkt_size - pkt_hdr_size + sizeof(u8))) { \\'
p1025
aS'\t\t\tdprintk(VIDC_ERR, \\'
p1026
aS'\t\t\t\t"%s: invalid msg size - %d\\n", \\'
p1027
aS'\t\t\t\t__func__, pkt->msg_size); \\'
p1028
aS'\t\t\tcontinue; \\'
p1029
aS'\t\t} \\'
p1030
aS'\t})'
p1031
ag119
asssssS'CVE-2019-10585'
p1032
(dp1033
S'a42d482efe49_sdm845-perf'
p1034
(dp1035
(S'drivers/char/adsprpc.c'
p1036
S'fastrpc_mmap_find'
p1037
I609
tp1038
(dp1039
g27
(dp1040
(I643
I643
tp1041
(lp1042
S'\t\t\t\tif (refs)'
p1043
as(I626
I626
tp1044
(lp1045
S'\t\t\t\tif (refs)'
p1046
assg9
(I609
I658
tp1047
sg11
I7
sg12
g13
sg14
(dp1048
(I626
I630
tp1049
(lp1050
S'\t\t\t\tif (refs) {'
p1051
aS'\t\t\t\t\tif (map->refs + 1 == INT_MAX) {'
p1052
aS'\t\t\t\t\t\tspin_unlock(&me->hlock);'
p1053
aS'\t\t\t\t\t\treturn -ETOOMANYREFS;'
p1054
aS'\t\t\t\t\t}'
p1055
as(I632
I632
tp1056
(lp1057
S'\t\t\t\t}'
p1058
as(I647
I647
tp1059
(lp1060
S'\t\t\t\t}'
p1061
as(I643
I645
tp1062
(lp1063
S'\t\t\t\tif (refs) {'
p1064
aS'\t\t\t\t\tif (map->refs + 1 == INT_MAX)'
p1065
aS'\t\t\t\t\t\treturn -ETOOMANYREFS;'
p1066
asssssS'CVE-2019-2264'
p1067
(dp1068
S'177cafce7263_sdm845-perf'
p1069
(dp1070
(S'drivers/soc/qcom/glink.c'
p1071
S'glink_open'
p1072
I2562
tp1073
(dp1074
g27
(dp1075
(I2660
I2660
tp1076
(lp1077
S'\tctx->local_open_state = GLINK_CHANNEL_OPENING;'
p1078
as(I2630
I2639
tp1079
(lp1080
S'\t/* port already exists */'
p1081
aS'\tif (ctx->local_open_state != GLINK_CHANNEL_CLOSED) {'
p1082
aS'\t\t/* not ready to be re-opened */'
p1083
aS'\t\tGLINK_INFO_CH_XPRT(ctx, transport_ptr,'
p1084
aS'\t\t"%s: Channel not ready to be re-opened. State: %u\\n",'
p1085
aS'\t\t__func__, ctx->local_open_state);'
p1086
aS'\t\trwref_put(&ctx->ch_state_lhb2);'
p1087
aS'\t\treturn ERR_PTR(-EBUSY);'
p1088
aS'\t}'
p1089
ag119
as(I2623
I2623
tp1090
(lp1091
S'\tctx = ch_name_to_ch_ctx_create(transport_ptr, cfg->name);'
p1092
assg9
(I2562
I2680
tp1093
sg11
I1
sg12
g13
sg14
(dp1094
(I2623
I2623
tp1095
(lp1096
S'\tctx = ch_name_to_ch_ctx_create(transport_ptr, cfg->name, true);'
p1097
asss(g1071
S'glink_core_rx_cmd_ch_remote_open'
p1098
I4912
tp1099
(dp1100
g27
(dp1101
(I4920
I4920
tp1102
(lp1103
S'\tctx = ch_name_to_ch_ctx_create(if_ptr->glink_core_priv, name);'
p1104
assg9
(I4912
I4959
tp1105
sg11
I4
sg12
g13
sg14
(dp1106
(I4920
I4920
tp1107
(lp1108
S'\tctx = ch_name_to_ch_ctx_create(if_ptr->glink_core_priv, name, false);'
p1109
asss(g1071
S'ch_name_to_ch_ctx_create'
p1110
I1844
tp1111
(dp1112
g27
(dp1113
(I1907
I1907
tp1114
(lp1115
S'\t\t\trwref_get(&entry->ch_state_lhb2);'
p1116
as(I1846
I1846
tp1117
(lp1118
S'\t\t\t\t\tconst char *name)'
p1119
assg9
(I1844
I1951
tp1120
sg11
I3
sg12
g13
sg14
(dp1121
(I1890
I1903
tp1122
(lp1123
S'\t\t\trwref_get(&entry->ch_state_lhb2);'
p1124
aS'\t\t\t/* port already exists */'
p1125
aS'\t\t\tif (entry->local_open_state != GLINK_CHANNEL_CLOSED'
p1126
aS'\t\t\t\t\t\t\t\t&& local) {'
p1127
aS'\t\t\t\t/* not ready to be re-opened */'
p1128
aS'\t\t\t\tGLINK_INFO_CH_XPRT(entry, xprt_ctx,'
p1129
aS'\t\t\t\t\t"%s: Ch not ready. State: %u\\n",'
p1130
aS'\t\t\t\t\t__func__, entry->local_open_state);'
p1131
aS'\t\t\t\trwref_put(&entry->ch_state_lhb2);'
p1132
aS'\t\t\t\tentry = NULL;'
p1133
aS'\t\t\t} else if (local) {'
p1134
aS'\t\t\t\tentry->local_open_state ='
p1135
aS'\t\t\t\t\t\tGLINK_CHANNEL_OPENING;'
p1136
aS'\t\t\t}'
p1137
as(I1936
I1937
tp1138
(lp1139
S'\t\tif (local)'
p1140
aS'\t\t\tctx->local_open_state = GLINK_CHANNEL_OPENING;'
p1141
as(I1846
I1846
tp1142
(lp1143
S'\t\t\t\t\tconst char *name, bool local)'
p1144
asss(g1071
S'glink_core_rx_cmd_ch_remote_close'
p1145
I5017
tp1146
(dp1147
g27
(dp1148
(I5048
I5048
tp1149
(lp1150
S'\tctx->pending_delete = true;'
p1151
assg9
(I5017
I5055
tp1152
sg11
I2
sg12
g13
sg14
(dp1153
(I5041
I5043
tp1154
(lp1155
S'\tspin_lock_irqsave(&ctx->transport_ptr->xprt_ctx_lock_lhb1, flags);'
p1156
aS'\tctx->pending_delete = true;'
p1157
aS'\tspin_unlock_irqrestore(&ctx->transport_ptr->xprt_ctx_lock_lhb1, flags);'
p1158
as(I5023
I5023
tp1159
(lp1160
S'\tunsigned long flags;'
p1161
asssssS'CVE-2017-16939'
p1162
(dp1163
S'7bb76790999d_sdm845-perf'
p1164
(dp1165
(S'net/xfrm/xfrm_user.c'
p1166
S'xfrm_user_rcv_msg'
p1167
I2578
tp1168
(dp1169
g27
(dp1170
(I2585
I2589
tp1171
(lp1172
S'#ifdef CONFIG_COMPAT'
p1173
aS'\tif (in_compat_syscall())'
p1174
aS'\t\treturn -EOPNOTSUPP;'
p1175
aS'#endif'
p1176
ag119
assg9
(I2578
I2622
tp1177
sg11
I2
sg12
g13
sg14
(dp1178
(I2604
I2604
tp1179
(lp1180
S'\t\t\t\t.start = link->start,'
p1181
assssS'd5d55ba074e6_sdm845-perf'
p1182
(dp1183
(g1166
g1167
I2477
tp1184
(dp1185
g9
(I2477
I2526
tp1186
sg11
I2
sg12
g13
sg14
(dp1187
(I2508
I2508
tp1188
(lp1189
S'\t\t\t\t.start = link->start,'
p1190
asss(g1166
S'xfrm_dump_policy'
p1191
I1684
tp1192
(dp1193
g27
(dp1194
(I1695
I1699
tp1195
(lp1196
S'\tif (!cb->args[0]) {'
p1197
aS'\t\tcb->args[0] = 1;'
p1198
aS'\t\txfrm_policy_walk_init(walk, XFRM_POLICY_TYPE_ANY);'
p1199
aS'\t}'
p1200
ag119
as(I1687
I1687
tp1201
(lp1202
S'\tstruct xfrm_policy_walk *walk = (struct xfrm_policy_walk *) &cb->args[1];'
p1203
as(I1690
I1692
tp1204
(lp1205
S'\tBUILD_BUG_ON(sizeof(struct xfrm_policy_walk) >'
p1206
aS'\t\t     sizeof(cb->args) - sizeof(cb->args[0]));'
p1207
ag119
assg9
(I1684
I1698
tp1208
sg11
I2
sg12
g13
sg14
(dp1209
(I1687
I1687
tp1210
(lp1211
S'\tstruct xfrm_policy_walk *walk = (struct xfrm_policy_walk *)cb->args;'
p1212
asss(g1166
S'xfrm_dump_policy_done'
p1213
I1665
tp1214
(dp1215
g27
(dp1216
(I1667
I1667
tp1217
(lp1218
S'\tstruct xfrm_policy_walk *walk = (struct xfrm_policy_walk *) &cb->args[1];'
p1219
assg9
(I1665
I1672
tp1220
sg11
I1
sg12
g13
sg14
(dp1221
(I1667
I1667
tp1222
(lp1223
S'\tstruct xfrm_policy_walk *walk = (struct xfrm_policy_walk *)cb->args;'
p1224
asssssS'CVE-2019-9457'
p1225
(dp1226
S'd5d55ba074e6_sdm845-perf'
p1227
(dp1228
(S'fs/exec.c'
p1229
S'get_arg_page'
p1230
I189
tp1231
(dp1232
g27
(dp1233
(I254
I255
tp1234
(lp1235
S'\t\trlim = current->signal->rlim;'
p1236
aS'\t\tif (size > READ_ONCE(rlim[RLIMIT_STACK].rlim_cur) / 4)'
p1237
as(I218
I219
tp1238
(lp1239
S'\t\tunsigned long ptr_size;'
p1240
aS'\t\tstruct rlimit *rlim;'
p1241
as(I247
I247
tp1242
(lp1243
S'\t\t * Limit to 1/4-th the stack size for the argv+env strings.'
p1244
assg9
(I189
I265
tp1245
sg11
I3
sg12
g13
sg14
(dp1246
(I247
I248
tp1247
(lp1248
S'\t\t * Limit to 1/4 of the max stack size or 3/4 of _STK_LIM'
p1249
aS'\t\t * (whichever is smaller) for the argv+env strings.'
p1250
as(I254
I256
tp1251
(lp1252
S'\t\tlimit = _STK_LIM / 4 * 3;'
p1253
aS'\t\tlimit = min(limit, rlimit(RLIMIT_STACK) / 4);'
p1254
aS'\t\tif (size > limit)'
p1255
as(I218
I218
tp1256
(lp1257
S'\t\tunsigned long ptr_size, limit;'
p1258
asssssS'CVE-2019-9453'
p1259
(dp1260
S'7bb76790999d_sdm845-perf'
p1261
(dp1262
(S'fs/f2fs/xattr.c'
p1263
S'__f2fs_setxattr'
p1264
I593
tp1265
(dp1266
g27
(dp1267
(I626
I626
tp1268
(lp1269
S'\there = __find_xattr(base_addr, index, len, name);'
p1270
as(I721
I721
tp1271
(lp1272
S'\tkzfree(base_addr);'
p1273
as(I598
I598
tp1274
(lp1275
S'\tvoid *base_addr;'
p1276
assg9
(I593
I723
tp1277
sg11
I7
sg12
g13
sg14
(dp1278
(I623
I624
tp1279
(lp1280
S'\tlast_base_addr = (void *)base_addr + XATTR_SIZE(xnid, inode);'
p1281
ag119
as(I598
I599
tp1282
(lp1283
S'\tvoid *base_addr, *last_base_addr;'
p1284
aS'\tnid_t xnid = F2FS_I(inode)->i_xattr_nid;'
p1285
as(I721
I721
tp1286
(lp1287
S'\tkvfree(base_addr);'
p1288
as(I626
I633
tp1289
(lp1290
S'\there = __find_xattr(base_addr, last_base_addr, index, len, name);'
p1291
aS'\tif (!here) {'
p1292
aS'\t\tf2fs_err(F2FS_I_SB(inode), "inode (%lu) has corrupted xattr",'
p1293
aS'\t\t\t\t\t\t\t\tinode->i_ino);'
p1294
aS'\t\tset_sbi_flag(F2FS_I_SB(inode), SBI_NEED_FSCK);'
p1295
aS'\t\terror = -EFSCORRUPTED;'
p1296
aS'\t\tgoto exit;'
p1297
aS'\t}'
p1298
asss(g1263
S'lookup_all_xattrs'
p1299
I300
tp1300
(dp1301
g27
(dp1302
(I308
I308
tp1303
(lp1304
S'\tunsigned int size = xnid ? VALID_XATTR_BLOCK_SIZE : 0;'
p1305
as(I347
I347
tp1306
(lp1307
S'\t*xe = __find_xattr(cur_addr, index, len, name);'
p1308
as(I314
I314
tp1309
(lp1310
S'\t*base_size = inline_size + size + XATTR_PADDING_SIZE;'
p1311
as(I364
I364
tp1312
(lp1313
S'\tkzfree(txattr_addr);'
p1314
as(I311
I311
tp1315
(lp1316
S'\tif (!size && !inline_size)'
p1317
as(I305
I305
tp1318
(lp1319
S'\tvoid *cur_addr, *txattr_addr, *last_addr = NULL;'
p1320
assg9
(I300
I366
tp1321
sg11
I8
sg12
g13
sg14
(dp1322
(I305
I306
tp1323
(lp1324
S'\tvoid *cur_addr, *txattr_addr, *last_txattr_addr;'
p1325
aS'\tvoid *last_addr = NULL;'
p1326
as(I314
I314
tp1327
(lp1328
S'\t*base_size = XATTR_SIZE(xnid, inode) + XATTR_PADDING_SIZE;'
p1329
as(I364
I364
tp1330
(lp1331
S'\tkvfree(txattr_addr);'
p1332
as(I311
I311
tp1333
(lp1334
S'\tif (!xnid && !inline_size)'
p1335
as(I347
I354
tp1336
(lp1337
S'\t*xe = __find_xattr(cur_addr, last_txattr_addr, index, len, name);'
p1338
aS'\tif (!*xe) {'
p1339
aS'\t\tf2fs_err(F2FS_I_SB(inode), "inode (%lu) has corrupted xattr",'
p1340
aS'\t\t\t\t\t\t\t\tinode->i_ino);'
p1341
aS'\t\tset_sbi_flag(F2FS_I_SB(inode), SBI_NEED_FSCK);'
p1342
aS'\t\terr = -EFSCORRUPTED;'
p1343
aS'\t\tgoto out;'
p1344
aS'\t}'
p1345
as(I319
I320
tp1346
(lp1347
S'\tlast_txattr_addr = (void *)txattr_addr + XATTR_SIZE(xnid, inode);'
p1348
ag119
assssS'a42d482efe49_sdm845-perf'
p1349
(dp1350
(g1263
g1299
I300
tp1351
(dp1352
g27
(dp1353
(I347
I347
tp1354
(lp1355
S'\t*xe = __find_xattr(cur_addr, index, len, name);'
p1356
as(I314
I314
tp1357
(lp1358
S'\t*base_size = inline_size + size + XATTR_PADDING_SIZE;'
p1359
as(I308
I308
tp1360
(lp1361
S'\tunsigned int size = xnid ? VALID_XATTR_BLOCK_SIZE : 0;'
p1362
as(I361
I361
tp1363
(lp1364
S'\tkzfree(txattr_addr);'
p1365
as(I311
I311
tp1366
(lp1367
S'\tif (!size && !inline_size)'
p1368
as(I305
I305
tp1369
(lp1370
S'\tvoid *cur_addr, *txattr_addr, *last_addr = NULL;'
p1371
assg9
(I300
I363
tp1372
sg11
I8
sg12
g13
sg14
(dp1373
(I305
I306
tp1374
(lp1375
S'\tvoid *cur_addr, *txattr_addr, *last_txattr_addr;'
p1376
aS'\tvoid *last_addr = NULL;'
p1377
as(I314
I314
tp1378
(lp1379
S'\t*base_size = XATTR_SIZE(xnid, inode) + XATTR_PADDING_SIZE;'
p1380
as(I311
I311
tp1381
(lp1382
S'\tif (!xnid && !inline_size)'
p1383
as(I361
I361
tp1384
(lp1385
S'\tkvfree(txattr_addr);'
p1386
as(I347
I351
tp1387
(lp1388
S'\t*xe = __find_xattr(cur_addr, last_txattr_addr, index, len, name);'
p1389
aS'\tif (!*xe) {'
p1390
aS'\t\terr = -EFAULT;'
p1391
aS'\t\tgoto out;'
p1392
aS'\t}'
p1393
as(I319
I320
tp1394
(lp1395
S'\tlast_txattr_addr = (void *)txattr_addr + XATTR_SIZE(xnid, inode);'
p1396
ag119
asss(g1263
g1264
I590
tp1397
(dp1398
g27
(dp1399
(I623
I623
tp1400
(lp1401
S'\there = __find_xattr(base_addr, index, len, name);'
p1402
as(I715
I715
tp1403
(lp1404
S'\tkzfree(base_addr);'
p1405
as(I595
I595
tp1406
(lp1407
S'\tvoid *base_addr;'
p1408
assg9
(I590
I717
tp1409
sg11
I7
sg12
g13
sg14
(dp1410
(I620
I621
tp1411
(lp1412
S'\tlast_base_addr = (void *)base_addr + XATTR_SIZE(xnid, inode);'
p1413
ag119
as(I623
I627
tp1414
(lp1415
S'\there = __find_xattr(base_addr, last_base_addr, index, len, name);'
p1416
aS'\tif (!here) {'
p1417
aS'\t\terror = -EFAULT;'
p1418
aS'\t\tgoto exit;'
p1419
aS'\t}'
p1420
as(I595
I596
tp1421
(lp1422
S'\tvoid *base_addr, *last_base_addr;'
p1423
aS'\tnid_t xnid = F2FS_I(inode)->i_xattr_nid;'
p1424
as(I715
I715
tp1425
(lp1426
S'\tkvfree(base_addr);'
p1427
asss(g1263
S'__find_xattr'
p1428
I205
tp1429
(dp1430
g27
(dp1431
(I205
I206
tp1432
(lp1433
S'static struct f2fs_xattr_entry *__find_xattr(void *base_addr, int index,'
p1434
aS'\t\t\t\t\tsize_t len, const char *name)'
p1435
assg9
(I205
I224
tp1436
sg11
I5
sg12
g13
sg14
(dp1437
(I212
I215
tp1438
(lp1439
S'\t\tif ((void *)(entry) + sizeof(__u32) > last_base_addr ||'
p1440
aS'\t\t\t(void *)XATTR_NEXT_ENTRY(entry) > last_base_addr)'
p1441
aS'\t\t\treturn NULL;'
p1442
ag119
as(I205
I207
tp1443
(lp1444
S'static struct f2fs_xattr_entry *__find_xattr(void *base_addr,'
p1445
aS'\t\t\t\tvoid *last_base_addr, int index,'
p1446
aS'\t\t\t\tsize_t len, const char *name)'
p1447
asssssS'CVE-2019-10515'
p1448
(dp1449
S'6c6aaf4e8330_sdm845-perf'
p1450
(dp1451
(S'drivers/char/diag/diagchar_core.c'
p1452
S'diagchar_read'
p1453
I3311
tp1454
(dp1455
g27
(dp1456
(I3568
I3568
tp1457
(lp1458
S'\t\t\tif (entry->client->tgid != current->tgid)'
p1459
as(I3571
I3571
tp1460
(lp1461
S'\t\t\tif (!entry->in_service)'
p1462
assg9
(I3311
I3636
tp1463
sg11
I4
sg12
g13
sg14
(dp1464
(I3568
I3569
tp1465
(lp1466
S'\t\t\tpid_struct = find_get_pid(entry->tgid);'
p1467
aS'\t\t\tif (!pid_struct)'
p1468
as(I3592
I3593
tp1469
(lp1470
S'\t\t\t\tput_task_struct(task_s);'
p1471
aS'\t\t\t\tput_pid(pid_struct);'
p1472
as(I3322
I3323
tp1473
(lp1474
S'\tstruct pid *pid_struct = NULL;'
p1475
aS'\tstruct task_struct *task_s = NULL;'
p1476
as(I3613
I3614
tp1477
(lp1478
S'\t\t\t\tput_task_struct(task_s);'
p1479
aS'\t\t\t\tput_pid(pid_struct);'
p1480
as(I3571
I3576
tp1481
(lp1482
S'\t\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p1483
aS'\t\t\tif (!task_s) {'
p1484
aS'\t\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p1485
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p1486
aS'\t\t\t\tentry->tgid);'
p1487
aS'\t\t\t\tput_pid(pid_struct);'
p1488
as(I3618
I3619
tp1489
(lp1490
S'\t\t\tput_task_struct(task_s);'
p1491
aS'\t\t\tput_pid(pid_struct);'
p1492
as(I3578
I3590
tp1493
(lp1494
S'\t\t\t}'
p1495
aS'\t\t\tif (task_s == entry->client) {'
p1496
aS'\t\t\t\tif (entry->client->tgid != current->tgid) {'
p1497
aS'\t\t\t\t\tput_task_struct(task_s);'
p1498
aS'\t\t\t\t\tput_pid(pid_struct);'
p1499
aS'\t\t\t\t\tcontinue;'
p1500
aS'\t\t\t\t}'
p1501
aS'\t\t\t}'
p1502
aS'\t\t\tif (!entry->in_service) {'
p1503
aS'\t\t\t\tput_task_struct(task_s);'
p1504
aS'\t\t\t\tput_pid(pid_struct);'
p1505
aS'\t\t\t\tcontinue;'
p1506
aS'\t\t\t}'
p1507
as(I3600
I3601
tp1508
(lp1509
S'\t\t\t\tput_task_struct(task_s);'
p1510
aS'\t\t\t\tput_pid(pid_struct);'
p1511
asss(S'drivers/char/diag/diag_dci.c'
p1512
S'dci_lookup_client_entry_pid'
p1513
I2298
tp1514
(dp1515
g27
(dp1516
(I2322
I2323
tp1517
(lp1518
S'\t\tif (task_s == entry->client)'
p1519
aS'\t\t\tif (entry->client->tgid == tgid)'
p1520
as(I2310
I2311
tp1521
(lp1522
S'\t\t\t\t"diag: valid pid doesn\'t exist for pid = %d\\n",'
p1523
aS'\t\t\t\tentry->tgid);'
p1524
assg9
(I2298
I2333
tp1525
sg11
I1
sg12
g13
sg14
(dp1526
(I2322
I2325
tp1527
(lp1528
S'\t\tif (task_s == entry->client) {'
p1529
aS'\t\t\tif (entry->client->tgid == tgid) {'
p1530
aS'\t\t\t\tput_task_struct(task_s);'
p1531
aS'\t\t\t\tput_pid(pid_struct);'
p1532
as(I2310
I2311
tp1533
(lp1534
S'\t\t\t"diag: Exited pid (%d) doesn\'t match dci client of pid (%d)\\n",'
p1535
aS'\t\t\ttgid, entry->tgid);'
p1536
as(I2319
I2319
tp1537
(lp1538
S'\t\t\tput_pid(pid_struct);'
p1539
as(I2327
I2330
tp1540
(lp1541
S'\t\t\t}'
p1542
aS'\t\t}'
p1543
aS'\t\tput_task_struct(task_s);'
p1544
aS'\t\tput_pid(pid_struct);'
p1545
assssS'f332617ebb03_sdm845-perf'
p1546
(dp1547
(g1512
g1513
I2294
tp1548
(dp1549
g27
(dp1550
(I2306
I2307
tp1551
(lp1552
S'\t\t\t\t"diag: valid pid doesn\'t exist for pid = %d\\n",'
p1553
aS'\t\t\t\tentry->tgid);'
p1554
assg9
(I2294
I2322
tp1555
sg11
I1
sg12
g13
sg14
(dp1556
(I2306
I2307
tp1557
(lp1558
S'\t\t\t"diag: Exited pid (%d) doesn\'t match dci client of pid (%d)\\n",'
p1559
aS'\t\t\ttgid, entry->tgid);'
p1560
asss(g1452
S'diagchar_close'
p1561
I556
tp1562
(dp1563
g27
(dp1564
(I560
I561
tp1565
(lp1566
S'\tDIAG_LOG(DIAG_DEBUG_USERSPACE, "diag: process exit %s\\n",'
p1567
aS'\t\tcurrent->comm);'
p1568
assg9
(I556
I565
tp1569
sg11
I2
sg12
g13
sg14
(dp1570
(I560
I561
tp1571
(lp1572
S'\tDIAG_LOG(DIAG_DEBUG_USERSPACE, "diag: %s process exit with pid = %d\\n",'
p1573
aS'\t\tcurrent->comm, current->tgid);'
p1574
asss(g1452
g1453
I3274
tp1575
(dp1576
g27
(dp1577
(I3531
I3531
tp1578
(lp1579
S'\t\t\tif (entry->client->tgid != current->tgid)'
p1580
assg9
(I3274
I3583
tp1581
sg11
I4
sg12
g13
sg14
(dp1582
(I3285
I3286
tp1583
(lp1584
S'\tstruct pid *pid_struct = NULL;'
p1585
aS'\tstruct task_struct *task_s = NULL;'
p1586
as(I3531
I3532
tp1587
(lp1588
S'\t\t\tpid_struct = find_get_pid(entry->tgid);'
p1589
aS'\t\t\tif (!pid_struct)'
p1590
as(I3534
I3543
tp1591
(lp1592
S'\t\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p1593
aS'\t\t\tif (!task_s) {'
p1594
aS'\t\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p1595
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p1596
aS'\t\t\t\tentry->tgid);'
p1597
aS'\t\t\t\tcontinue;'
p1598
aS'\t\t\t}'
p1599
aS'\t\t\tif (task_s == entry->client)'
p1600
aS'\t\t\t\tif (entry->client->tgid != current->tgid)'
p1601
aS'\t\t\t\t\tcontinue;'
p1602
asssssS'CVE-2019-9458'
p1603
(dp1604
S'c36d54c34fef_sdm845-perf'
p1605
(dp1606
(S'drivers/media/v4l2-core/v4l2-event.c'
p1607
S'v4l2_event_unsubscribe'
p1608
I293
tp1609
(dp1610
g27
(dp1611
(I309
I316
tp1612
(lp1613
S'\tif (sev != NULL) {'
p1614
aS'\t\t/* Remove any pending events for this subscription */'
p1615
aS'\t\tfor (i = 0; i < sev->in_use; i++) {'
p1616
aS'\t\t\tlist_del(&sev->events[sev_pos(sev, i)].list);'
p1617
aS'\t\t\tfh->navailable--;'
p1618
aS'\t\t}'
p1619
aS'\t\tlist_del(&sev->list);'
p1620
aS'\t}'
p1621
as(I298
I298
tp1622
(lp1623
S'\tint i;'
p1624
assg9
(I293
I322
tp1625
sg11
I2
sg12
g13
sg14
(dp1626
(I304
I305
tp1627
(lp1628
S'\tmutex_lock(&fh->subscribe_lock);'
p1629
ag119
as(I309
I310
tp1630
(lp1631
S'\tif (sev != NULL)'
p1632
aS'\t\t__v4l2_event_unsubscribe(sev);'
p1633
as(I317
I318
tp1634
(lp1635
S'\tmutex_unlock(&fh->subscribe_lock);'
p1636
ag119
asss(g1607
S'v4l2_event_subscribe'
p1637
I216
tp1638
(dp1639
g27
(dp1640
(I264
I265
tp1641
(lp1642
S'\t/* Mark as ready for use */'
p1643
aS'\tsev->elems = elems;'
p1644
as(I254
I258
tp1645
(lp1646
S'\t\treturn 0; /* Already listening */'
p1647
aS'\t}'
p1648
ag119
aS'\tif (sev->ops && sev->ops->add) {'
p1649
aS'\t\tint ret = sev->ops->add(sev, elems);'
p1650
as(I257
I259
tp1651
(lp1652
S'\t\t\tsev->ops = NULL;'
p1653
aS'\t\t\tv4l2_event_unsubscribe(fh, sub);'
p1654
aS'\t\t\treturn ret;'
p1655
as(I266
I266
tp1656
(lp1657
S'\treturn 0;'
p1658
assg9
(I216
I267
tp1659
sg11
I4
sg12
g13
sg14
(dp1660
(I241
I243
tp1661
(lp1662
S'\tsev->elems = elems;'
p1663
ag119
aS'\tmutex_lock(&fh->subscribe_lock);'
p1664
as(I266
I266
tp1665
(lp1666
S'\treturn ret;'
p1667
as(I252
I252
tp1668
(lp1669
S'\t\t/* Already listening */'
p1670
as(I257
I260
tp1671
(lp1672
S'\t\t\tspin_lock_irqsave(&fh->vdev->fh_lock, flags);'
p1673
aS'\t\t\t__v4l2_event_unsubscribe(sev);'
p1674
aS'\t\t\tspin_unlock_irqrestore(&fh->vdev->fh_lock, flags);'
p1675
aS'\t\t\tkfree(sev);'
p1676
as(I264
I264
tp1677
(lp1678
S'\tmutex_unlock(&fh->subscribe_lock);'
p1679
as(I254
I255
tp1680
(lp1681
S'\t} else if (sev->ops && sev->ops->add) {'
p1682
aS'\t\tret = sev->ops->add(sev, elems);'
p1683
as(I223
I223
tp1684
(lp1685
S'\tint ret = 0;'
p1686
assssS'f332617ebb03_sdm845-perf'
p1687
(dp1688
(S'drivers/media/v4l2-core/v4l2-fh.c'
p1689
S'v4l2_fh_exit'
p1690
I93
tp1691
(dp1692
g9
(I93
I101
tp1693
sg11
I1
sg12
g13
sg14
(dp1694
(I99
I99
tp1695
(lp1696
S'\tmutex_destroy(&fh->subscribe_lock);'
p1697
asss(g1689
S'v4l2_fh_init'
p1698
I34
tp1699
(dp1700
g9
(I34
I54
tp1701
sg11
I2
sg12
g13
sg14
(dp1702
(I53
I53
tp1703
(lp1704
S'\tmutex_init(&fh->subscribe_lock);'
p1705
asss(g1607
S'__v4l2_event_queue_fh'
p1706
I110
tp1707
(dp1708
g27
(dp1709
(I122
I129
tp1710
(lp1711
S'\t/*'
p1712
aS'\t * If the event has been added to the fh->subscribed list, but its'
p1713
aS'\t * add op has not completed yet elems will be 0, treat this as'
p1714
aS'\t * not being subscribed.'
p1715
aS'\t */'
p1716
aS'\tif (!sev->elems)'
p1717
aS'\t\treturn;'
p1718
ag119
assg9
(I110
I159
tp1719
sg11
I3
sg12
g13
ss(g1607
g1637
I200
tp1720
(dp1721
g27
(dp1722
(I240
I240
tp1723
(lp1724
S'\t\tint ret = sev->ops->add(sev, elems);'
p1725
as(I231
I232
tp1726
(lp1727
S'\tif (!found_ev)'
p1728
aS'\t\tlist_add(&sev->list, &fh->subscribed);'
p1729
as(I236
I236
tp1730
(lp1731
S'\t\treturn 0; /* Already listening */'
p1732
as(I254
I254
tp1733
(lp1734
S'\treturn 0;'
p1735
as(I247
I248
tp1736
(lp1737
S'\t/* Mark as ready for use */'
p1738
aS'\tsev->elems = elems;'
p1739
as(I242
I244
tp1740
(lp1741
S'\t\t\tsev->ops = NULL;'
p1742
aS'\t\t\tv4l2_event_unsubscribe(fh, sub);'
p1743
aS'\t\t\treturn ret;'
p1744
assg9
(I200
I255
tp1745
sg11
I4
sg12
g13
sg14
(dp1746
(I225
I227
tp1747
(lp1748
S'\tsev->elems = elems;'
p1749
ag119
aS'\tmutex_lock(&fh->subscribe_lock);'
p1750
as(I234
I234
tp1751
(lp1752
S'\t\t/* Already listening */'
p1753
as(I247
I252
tp1754
(lp1755
S'\tspin_lock_irqsave(&fh->vdev->fh_lock, flags);'
p1756
aS'\tlist_add(&sev->list, &fh->subscribed);'
p1757
aS'\tspin_unlock_irqrestore(&fh->vdev->fh_lock, flags);'
p1758
ag119
aS'out_unlock:'
p1759
aS'\tmutex_unlock(&fh->subscribe_lock);'
p1760
as(I236
I236
tp1761
(lp1762
S'\t\tgoto out_unlock;'
p1763
as(I240
I240
tp1764
(lp1765
S'\t\tret = sev->ops->add(sev, elems);'
p1766
as(I242
I243
tp1767
(lp1768
S'\t\t\tkfree(sev);'
p1769
aS'\t\t\tgoto out_unlock;'
p1770
as(I254
I254
tp1771
(lp1772
S'\treturn ret;'
p1773
as(I207
I207
tp1774
(lp1775
S'\tint ret = 0;'
p1776
asss(g1607
g1608
I281
tp1777
(dp1778
g9
(I281
I317
tp1779
sg11
I2
sg12
g13
sg14
(dp1780
(I293
I294
tp1781
(lp1782
S'\tmutex_lock(&fh->subscribe_lock);'
p1783
ag119
as(I312
I313
tp1784
(lp1785
S'\tmutex_unlock(&fh->subscribe_lock);'
p1786
ag119
asssssS'CVE-2019-2279'
p1787
(dp1788
S'774fe2ef649e_sdm845-perf'
p1789
(dp1790
(S'drivers/media/platform/msm/vidc/venus_hfi.c'
p1791
S'__write_queue'
p1792
I325
tp1793
(dp1794
g27
(dp1795
(I353
I354
tp1796
(lp1797
S'\tif (!packet_size_in_words) {'
p1798
aS'\t\tdprintk(VIDC_ERR, "Zero packet size\\n");'
p1799
as(I387
I387
tp1800
(lp1801
S'\t\tnew_write_idx -= queue->qhdr_q_size;'
p1802
as(I374
I374
tp1803
(lp1804
S'\tnew_write_idx = (queue->qhdr_write_idx + packet_size_in_words);'
p1805
as(I330
I330
tp1806
(lp1807
S'\tu32 empty_space, read_idx;'
p1808
as(I362
I364
tp1809
(lp1810
S'\tempty_space = (queue->qhdr_write_idx >=  read_idx) ?'
p1811
aS'\t\t(queue->qhdr_q_size - (queue->qhdr_write_idx -  read_idx)) :'
p1812
aS'\t\t(read_idx - queue->qhdr_write_idx);'
p1813
as(I376
I377
tp1814
(lp1815
S'\t\t(queue->qhdr_write_idx << 2));'
p1816
aS'\tif (new_write_idx < queue->qhdr_q_size) {'
p1817
assg9
(I325
I409
tp1818
sg11
I3
sg12
g13
sg14
(dp1819
(I353
I355
tp1820
(lp1821
S'\tif (!packet_size_in_words || packet_size_in_words >'
p1822
aS'\t\tqinfo->q_array.mem_size>>2) {'
p1823
aS'\t\tdprintk(VIDC_ERR, "Invalid packet size\\n");'
p1824
as(I387
I387
tp1825
(lp1826
S'\t\tnew_write_idx -= qinfo->q_array.mem_size >> 2;'
p1827
as(I374
I374
tp1828
(lp1829
S'\tnew_write_idx = write_idx + packet_size_in_words;'
p1830
as(I330
I330
tp1831
(lp1832
S'\tu32 empty_space, read_idx, write_idx;'
p1833
as(I362
I364
tp1834
(lp1835
S'\tempty_space = (write_idx >=  read_idx) ?'
p1836
aS'\t\t((qinfo->q_array.mem_size>>2) - (write_idx -  read_idx)) :'
p1837
aS'\t\t(read_idx - write_idx);'
p1838
as(I360
I360
tp1839
(lp1840
S'\twrite_idx = queue->qhdr_write_idx;'
p1841
as(I376
I384
tp1842
(lp1843
S'\t\t\t(write_idx << 2));'
p1844
aS'\tif (write_ptr < (u32 *)qinfo->q_array.align_virtual_addr ||'
p1845
aS'\t    write_ptr > (u32 *)(qinfo->q_array.align_virtual_addr +'
p1846
aS'\t    qinfo->q_array.mem_size)) {'
p1847
aS'\t\tdprintk(VIDC_ERR, "Invalid write index");'
p1848
aS'\t\treturn -ENODATA;'
p1849
aS'\t}'
p1850
ag119
aS'\tif (new_write_idx < (qinfo->q_array.mem_size >> 2)) {'
p1851
asss(g1791
S'__read_queue'
p1852
I476
tp1853
(dp1854
g27
(dp1855
(I517
I517
tp1856
(lp1857
S'\tif (queue->qhdr_read_idx == queue->qhdr_write_idx) {'
p1858
as(I569
I569
tp1859
(lp1860
S'\t\t\tqueue->qhdr_read_idx, packet_size_in_words << 2);'
p1861
as(I537
I537
tp1862
(lp1863
S'\t\t\t\t(queue->qhdr_read_idx << 2));'
p1864
as(I571
I571
tp1865
(lp1866
S'\t\tnew_read_idx = queue->qhdr_write_idx;'
p1867
as(I551
I554
tp1868
(lp1869
S'\tnew_read_idx = queue->qhdr_read_idx + packet_size_in_words;'
p1870
aS'\tif (((packet_size_in_words << 2) <= VIDC_IFACEQ_VAR_HUGE_PKT_SIZE)'
p1871
aS'\t\t\t&& queue->qhdr_read_idx <= queue->qhdr_q_size) {'
p1872
aS'\t\tif (new_read_idx < queue->qhdr_q_size) {'
p1873
as(I558
I558
tp1874
(lp1875
S'\t\t\tnew_read_idx -= queue->qhdr_q_size;'
p1876
as(I575
I577
tp1877
(lp1878
S'\tqueue->qhdr_read_idx = new_read_idx;'
p1879
ag119
aS'\tif (queue->qhdr_read_idx != queue->qhdr_write_idx)'
p1880
as(I483
I483
tp1881
(lp1882
S'\t\tint rc = 0;'
p1883
assg9
(I476
I596
tp1884
sg11
I3
sg12
g13
sg14
(dp1885
(I571
I571
tp1886
(lp1887
S'\t\tnew_read_idx = write_idx;'
p1888
as(I483
I484
tp1889
(lp1890
S'\tu32 read_idx, write_idx;'
p1891
aS'\tint rc = 0;'
p1892
as(I569
I569
tp1893
(lp1894
S'\t\t\tread_idx, packet_size_in_words << 2);'
p1895
as(I537
I544
tp1896
(lp1897
S'\t\t\t\t(read_idx << 2));'
p1898
aS'\tif (read_ptr < (u32 *)qinfo->q_array.align_virtual_addr ||'
p1899
aS'\t    read_ptr > (u32 *)(qinfo->q_array.align_virtual_addr +'
p1900
aS'\t    qinfo->q_array.mem_size - sizeof(*read_ptr))) {'
p1901
aS'\t\tdprintk(VIDC_ERR, "Invalid read index\\n");'
p1902
aS'\t\treturn -ENODATA;'
p1903
aS'\t}'
p1904
ag119
as(I551
I554
tp1905
(lp1906
S'\tnew_read_idx = read_idx + packet_size_in_words;'
p1907
aS'\tif (((packet_size_in_words << 2) <= VIDC_IFACEQ_VAR_HUGE_PKT_SIZE) &&'
p1908
aS'\t\tread_idx <= (qinfo->q_array.mem_size >> 2)) {'
p1909
aS'\t\tif (new_read_idx < (qinfo->q_array.mem_size >> 2)) {'
p1910
as(I558
I558
tp1911
(lp1912
S'\t\t\tnew_read_idx -= (qinfo->q_array.mem_size >> 2);'
p1913
as(I579
I580
tp1914
(lp1915
g119
aS'\tqueue->qhdr_read_idx = new_read_idx;'
p1916
as(I575
I575
tp1917
(lp1918
S'\tif (new_read_idx != write_idx)'
p1919
as(I517
I520
tp1920
(lp1921
S'\tread_idx = queue->qhdr_read_idx;'
p1922
aS'\twrite_idx = queue->qhdr_write_idx;'
p1923
ag119
aS'\tif (read_idx == write_idx) {'
p1924
asssssS'CVE-2019-13272'
p1925
(dp1926
S'1f01db5a42cc_sdm845-perf'
p1927
(dp1928
(S'kernel/ptrace.c'
p1929
S'ptrace_link'
p1930
I75
tp1931
(dp1932
g27
(dp1933
(I77
I79
tp1934
(lp1935
S'\trcu_read_lock();'
p1936
aS'\t__ptrace_link(child, new_parent, __task_cred(new_parent));'
p1937
aS'\trcu_read_unlock();'
p1938
assg9
(I75
I78
tp1939
sg11
I2
sg12
g13
sg14
(dp1940
(I77
I77
tp1941
(lp1942
S'\t__ptrace_link(child, new_parent, current_cred());'
p1943
asssssS'CVE-2018-12011'
p1944
(dp1945
S'192abd85bbdd_sdm845-perf'
p1946
(dp1947
(S'net/ipc_router/ipc_router_socket.c'
p1948
S'msm_ipc_router_extract_msg'
p1949
I126
tp1950
(dp1951
g9
(I126
I178
tp1952
sg11
I2
sg12
g13
sg14
(dp1953
(I149
I149
tp1954
(lp1955
S'\t\tmemset(addr, 0x0, sizeof(*addr));'
p1956
as(I158
I158
tp1957
(lp1958
S'\t\tmemset(addr, 0x0, sizeof(*addr));'
p1959
asssssS'CVE-2019-14088'
p1960
(dp1961
S'd448f2cd9ba6_sdm845-perf'
p1962
(dp1963
(S'drivers/media/platform/msm/camera/cam_req_mgr/cam_req_mgr_core.c'
p1964
S'__cam_req_mgr_reserve_link'
p1965
I1342
tp1966
(dp1967
g27
(dp1968
(I1359
I1364
tp1969
(lp1970
g119
aS'\tlink = (struct cam_req_mgr_core_link *)'
p1971
aS'\t\tkzalloc(sizeof(struct cam_req_mgr_core_link), GFP_KERNEL);'
p1972
aS'\tif (!link) {'
p1973
aS'\t\tCAM_ERR(CAM_CRM, "failed to create link, no mem");'
p1974
aS'\t\treturn NULL;'
p1975
as(I1376
I1377
tp1976
(lp1977
S'\tmutex_init(&link->lock);'
p1978
aS'\tspin_lock_init(&link->link_state_spin_lock);'
p1979
as(I1414
I1414
tp1980
(lp1981
S'\tkfree(link);'
p1982
as(I1374
I1374
tp1983
(lp1984
S'\t\tkfree(link);'
p1985
as(I1378
I1378
tp1986
(lp1987
S'\tlink->state = CAM_CRM_LINK_STATE_AVAILABLE;'
p1988
assg9
(I1342
I1416
tp1989
sg11
I1
sg12
g13
sg14
(dp1990
(I1359
I1365
tp1991
(lp1992
S'\tfor (i = 0; i < MAXIMUM_LINKS_PER_SESSION; i++) {'
p1993
aS'\t\tif (!atomic_cmpxchg(&g_links[i].is_used, 0, 1)) {'
p1994
aS'\t\t\tlink = &g_links[i];'
p1995
aS'\t\t\tCAM_DBG(CAM_CRM, "alloc link index %d", i);'
p1996
aS'\t\t\tcam_req_mgr_core_link_reset(link);'
p1997
aS'\t\t\tbreak;'
p1998
aS'\t\t}'
p1999
as(I1367
I1369
tp2000
(lp2001
S'\tif (i == MAXIMUM_LINKS_PER_SESSION)'
p2002
aS'\t\treturn NULL;'
p2003
ag119
asssssS'CVE-2019-14034'
p2004
(dp2005
S'8ac6e23e1acb_sdm845-perf'
p2006
(dp2007
(S'drivers/media/platform/msm/camera/cam_sensor_module/cam_eeprom/cam_eeprom_core.c'
p2008
S'cam_eeprom_driver_cmd'
p2009
I947
tp2010
(dp2011
g27
(dp2012
(I977
I977
tp2013
(lp2014
S'\t\t\treturn -EFAULT;'
p2015
assg9
(I947
I1032
tp2016
sg11
I2
sg12
g13
sg14
(dp2017
(I977
I977
tp2018
(lp2019
S'\t\t\trc = -EFAULT;'
p2020
asssssS'CVE-2019-11477'
p2021
(dp2022
S'1f01db5a42cc_sdm845-perf'
p2023
(dp2024
(S'net/ipv4/tcp_input.c'
p2025
S'tcp_shift_skb_data'
p2026
I1409
tp2027
(dp2028
g27
(dp2029
(I1515
I1515
tp2030
(lp2031
S'\tif (!skb_shift(prev, skb, len))'
p2032
as(I1534
I1536
tp2033
(lp2034
S'\tif (skb_shift(prev, skb, len)) {'
p2035
aS'\t\tpcount += tcp_skb_pcount(skb);'
p2036
aS'\t\ttcp_shifted_skb(sk, skb, state, tcp_skb_pcount(skb), len, mss, 0);'
p2037
as(I1539
I1539
tp2038
(lp2039
g119
assg9
(I1409
I1549
tp2040
sg11
I6
sg12
g13
sg14
(dp2041
(I1534
I1537
tp2042
(lp2043
S'\tnext_pcount = tcp_skb_pcount(skb);'
p2044
aS'\tif (tcp_skb_shift(prev, skb, next_pcount, len)) {'
p2045
aS'\t\tpcount += next_pcount;'
p2046
aS'\t\ttcp_shifted_skb(sk, skb, state, next_pcount, len, mss, 0);'
p2047
as(I1417
I1417
tp2048
(lp2049
S'\tint next_pcount;'
p2050
as(I1515
I1515
tp2051
(lp2052
S'\tif (!tcp_skb_shift(prev, skb, pcount, len))'
p2053
asss(S'net/ipv4/tcp.c'
p2054
S'tcp_init'
p2055
I3356
tp2056
(dp2057
g9
(I3356
I3436
tp2058
sg11
I1
sg12
g13
sg14
(dp2059
(I3362
I3362
tp2060
(lp2061
S'\tBUILD_BUG_ON(TCP_MIN_SND_MSS <= MAX_TCP_OPTION_SPACE);'
p2062
asss(g2025
S'tcp_shifted_skb'
p2063
I1294
tp2064
(dp2065
g27
(dp2066
(I1324
I1324
tp2067
(lp2068
S'\tBUG_ON(tcp_skb_pcount(skb) < pcount);'
p2069
assg9
(I1294
I1375
tp2070
sg11
I7
sg12
g13
sg14
(dp2071
(I1324
I1324
tp2072
(lp2073
S'\tWARN_ON_ONCE(tcp_skb_pcount(skb) < pcount);'
p2074
asss(S'net/ipv4/tcp_output.c'
p2075
S'__tcp_mtu_to_mss'
p2076
I1336
tp2077
(dp2078
g27
(dp2079
(I1363
I1364
tp2080
(lp2081
S'\tif (mss_now < 48)'
p2082
aS'\t\tmss_now = 48;'
p2083
assg9
(I1336
I1365
tp2084
sg11
I2
sg12
g13
sg14
(dp2085
(I1363
I1363
tp2086
(lp2087
S'\tmss_now = max(mss_now, sock_net(sk)->ipv4.sysctl_tcp_min_snd_mss);'
p2088
asssssS'CVE-2019-10607'
p2089
(dp2090
S'ded3533c0e75_sdm845-perf'
p2091
(dp2092
(S'security/selinux/ss/services.c'
p2093
S'security_context_to_sid_core'
p2094
I1393
tp2095
(dp2096
g27
(dp2097
(I1437
I1437
tp2098
(lp2099
S'\t\tcontext.len = scontext_len;'
p2100
assg9
(I1393
I1449
tp2101
sg11
I6
sg12
g13
sg14
(dp2102
(I1437
I1437
tp2103
(lp2104
S'\t\tcontext.len = strlen(str) + 1;'
p2105
asssssS'CVE-2019-11479'
p2106
(dp2107
S'1f01db5a42cc_sdm845-perf'
p2108
(dp2109
(S'net/ipv4/tcp_output.c'
p2110
S'__tcp_mtu_to_mss'
p2111
I1336
tp2112
(dp2113
g27
(dp2114
(I1363
I1364
tp2115
(lp2116
S'\tif (mss_now < 48)'
p2117
aS'\t\tmss_now = 48;'
p2118
assg9
(I1336
I1365
tp2119
sg11
I2
sg12
g13
sg14
(dp2120
(I1363
I1363
tp2121
(lp2122
S'\tmss_now = max(mss_now, sock_net(sk)->ipv4.sysctl_tcp_min_snd_mss);'
p2123
asss(S'net/ipv4/tcp_ipv4.c'
p2124
S'tcp_sk_init'
p2125
I2444
tp2126
(dp2127
g9
(I2444
I2496
tp2128
sg11
I1
sg12
g13
sg14
(dp2129
(I2473
I2473
tp2130
(lp2131
S'\tnet->ipv4.sysctl_tcp_min_snd_mss = TCP_MIN_SND_MSS;'
p2132
asssssS'CVE-2019-11478'
p2133
(dp2134
S'7bb76790999d_sdm845-perf'
p2135
(dp2136
(S'net/ipv4/tcp_output.c'
p2137
S'tcp_fragment'
p2138
I1172
tp2139
(dp2140
g9
(I1172
I1272
tp2141
sg11
I5
sg12
g13
sg14
(dp2142
(I1189
I1201
tp2143
(lp2144
S'\t/* tcp_sendmsg() can overshoot sk_wmem_queued by one full size skb.'
p2145
aS'\t * We need some allowance to not penalize applications setting small'
p2146
aS'\t * SO_SNDBUF values.'
p2147
aS'\t * Also allow first and last skb in retransmit queue to be split.'
p2148
aS'\t */'
p2149
aS'\tlimit = sk->sk_sndbuf + 2 * SKB_TRUESIZE(GSO_MAX_SIZE);'
p2150
aS'\tif (unlikely((sk->sk_wmem_queued >> 1) > limit &&'
p2151
aS'\t\t     skb != tcp_rtx_queue_head(sk) &&'
p2152
aS'\t\t     skb != tcp_rtx_queue_tail(sk))) {'
p2153
aS'\t\tNET_INC_STATS(sock_net(sk), LINUX_MIB_TCPWQUEUETOOBIG);'
p2154
aS'\t\treturn -ENOMEM;'
p2155
aS'\t}'
p2156
ag119
as(I1178
I1178
tp2157
(lp2158
S'\tlong limit;'
p2159
assssS'1f01db5a42cc_sdm845-perf'
p2160
(dp2161
(g2137
g2138
I1172
tp2162
(dp2163
g9
(I1172
I1263
tp2164
sg11
I5
sg12
g13
sg14
(dp2165
(I1188
I1192
tp2166
(lp2167
S'\tif (unlikely((sk->sk_wmem_queued >> 1) > sk->sk_sndbuf + 0x20000)) {'
p2168
aS'\t\tNET_INC_STATS(sock_net(sk), LINUX_MIB_TCPWQUEUETOOBIG);'
p2169
aS'\t\treturn -ENOMEM;'
p2170
aS'\t}'
p2171
ag119
asssssS'CVE-2019-10567'
p2172
(dp2173
S'0c755962c9cc_sdm845-perf'
p2174
(dp2175
(S'drivers/gpu/msm/adreno_ringbuffer.c'
p2176
S'_adreno_ringbuffer_probe'
p2177
I280
tp2178
(dp2179
g9
(I280
I313
tp2180
sg11
I2
sg12
g13
sg14
(dp2181
(I305
I309
tp2182
(lp2183
g119
aS'\t/* allocate a chunk of memory to create user profiling IB1s */'
p2184
aS'\tkgsl_allocate_global(KGSL_DEVICE(adreno_dev), &rb->profile_desc,'
p2185
aS'\t\tPAGE_SIZE, KGSL_MEMFLAGS_GPUREADONLY, 0, "profile_desc");'
p2186
ag119
asss(g2176
S'_adreno_ringbuffer_close'
p2187
I348
tp2188
(dp2189
g27
(dp2190
(I355
I355
tp2191
(lp2192
g119
assg9
(I348
I359
tp2193
sg11
I2
sg12
g13
sg14
(dp2194
(I355
I355
tp2195
(lp2196
S'\tkgsl_free_global(device, &rb->profile_desc);'
p2197
asss(g2176
S'adreno_ringbuffer_submitcmd'
p2198
I880
tp2199
(dp2200
g27
(dp2201
(I1099
I1099
tp2202
(lp2203
S'\t\tcmds += _get_alwayson_counter(adreno_dev, cmds,'
p2204
as(I981
I982
tp2205
(lp2206
S'\t\t * REG_TO_MEM packet on A5xx and above needs another ordinal.'
p2207
aS'\t\t * Add 2 more dwords since we do profiling before and after.'
p2208
as(I1047
I1047
tp2209
(lp2210
S'\t\tcmds += _get_alwayson_counter(adreno_dev, cmds,'
p2211
as(I1095
I1095
tp2212
(lp2213
S'\t * Add cmds to read the GPU ticks at the end of command obj and'
p2214
as(I984
I985
tp2215
(lp2216
S'\t\tif (!ADRENO_LEGACY_PM4(adreno_dev))'
p2217
aS'\t\t\tdwords += 2;'
p2218
as(I1043
I1043
tp2219
(lp2220
S'\t * Add cmds to read the GPU ticks at the start of command obj and'
p2221
as(I979
I979
tp2222
(lp2223
S'\t\tdwords += 6;'
p2224
assg9
(I880
I1157
tp2225
sg11
I3
sg12
g13
sg14
(dp2226
(I1099
I1099
tp2227
(lp2228
S'\t\tcmds += set_user_profiling(adreno_dev, rb, cmds,'
p2229
as(I981
I982
tp2230
(lp2231
S'\t\t * User side profiling uses two IB1s, one before with 4 dwords'
p2232
aS'\t\t * per INDIRECT_BUFFER_PFE call'
p2233
as(I1095
I1095
tp2234
(lp2235
S'\t * Add IB1 to read the GPU ticks at the end of command obj and'
p2236
as(I1047
I1047
tp2237
(lp2238
S'\t\tcmds += set_user_profiling(adreno_dev, rb, cmds,'
p2239
as(I984
I984
tp2240
(lp2241
S'\t\tdwords += 8;'
p2242
as(I1043
I1043
tp2243
(lp2244
S'\t * Add IB1 to read the GPU ticks at the start of command obj and'
p2245
asssssS'CVE-2019-10565'
p2246
(dp2247
S'7b51fca84f38_sdm845-perf'
p2248
(dp2249
(S'drivers/media/platform/msm/camera/cam_sensor_module/cam_sensor/cam_sensor_core.c'
p2250
S'cam_sensor_driver_cmd'
p2251
I559
tp2252
(dp2253
g27
(dp2254
(I589
I606
tp2255
(lp2256
S'\t\t/* Allocate memory for power up setting */'
p2257
aS'\t\tpu = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p2258
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p2259
aS'\t\tif (!pu) {'
p2260
aS'\t\t\trc = -ENOMEM;'
p2261
aS'\t\t\tgoto release_mutex;'
p2262
aS'\t\t}'
p2263
ag119
aS'\t\tpd = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p2264
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p2265
aS'\t\tif (!pd) {'
p2266
aS'\t\t\tkfree(pu);'
p2267
aS'\t\t\trc = -ENOMEM;'
p2268
aS'\t\t\tgoto release_mutex;'
p2269
aS'\t\t}'
p2270
ag119
aS'\t\tpower_info->power_setting = pu;'
p2271
aS'\t\tpower_info->power_down_setting = pd;'
p2272
as(I657
I657
tp2273
(lp2274
S'\t\t\t"Probe Succees,slot:%d,slave_addr:0x%x,sensor_id:0x%x",'
p2275
as(I602
I602
tp2276
(lp2277
S'\t\t\treturn -EINVAL;'
p2278
assg9
(I559
I889
tp2279
sg11
I2
sg12
g13
sg14
(dp2280
(I602
I603
tp2281
(lp2282
S'\t\t\trc = -EINVAL;'
p2283
aS'\t\t\tgoto release_mutex;'
p2284
as(I606
I608
tp2285
(lp2286
S'\t\tpu = power_info->power_setting;'
p2287
aS'\t\tpd = power_info->power_down_setting;'
p2288
ag119
as(I657
I657
tp2289
(lp2290
S'\t\t\t"Probe success,slot:%d,slave_addr:0x%x,sensor_id:0x%x",'
p2291
assssS'f07a15734ce7_sdm845-perf'
p2292
(dp2293
(S'drivers/media/platform/msm/camera/cam_sensor_module/cam_sensor_utils/cam_sensor_util.c'
p2294
S'msm_camera_power_down'
p2295
I1713
tp2296
(dp2297
g27
(dp2298
(I1755
I1761
tp2299
(lp2300
S'\t\t\tret = cam_config_mclk_reg(ctrl, soc_info, index);'
p2301
aS'\t\t\tif (ret < 0) {'
p2302
aS'\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2303
aS'\t\t\t\t\t"config clk reg failed rc: %d", ret);'
p2304
aS'\t\t\t\treturn ret;'
p2305
aS'\t\t\t}'
p2306
aS'\t\t\t//cam_soc_util_clk_disable_default(soc_info);'
p2307
as(I1805
I1805
tp2308
(lp2309
g119
as(I1718
I1718
tp2310
(lp2311
S'\tstruct cam_sensor_power_setting *ps;'
p2312
as(I1752
I1752
tp2313
(lp2314
S'\t\tCAM_DBG(CAM_SENSOR, "type %d",  pd->seq_type);'
p2315
as(I1742
I1742
tp2316
(lp2317
S'\t\tCAM_DBG(CAM_SENSOR, "index %d",  index);'
p2318
as(I1861
I1861
tp2319
(lp2320
S'\t\tpinctrl_put(ctrl->pinctrl_info.pinctrl);'
p2321
assg9
(I1713
I1873
tp2322
sg11
I2
sg12
g13
sg14
(dp2323
(I1861
I1861
tp2324
(lp2325
S'\t\tdevm_pinctrl_put(ctrl->pinctrl_info.pinctrl);'
p2326
as(I1718
I1718
tp2327
(lp2328
S'\tstruct cam_sensor_power_setting *ps = NULL;'
p2329
as(I1735
I1740
tp2330
(lp2331
S'\tif (ctrl->power_down_setting_size > MAX_POWER_CONFIG) {'
p2332
aS'\t\tCAM_ERR(CAM_SENSOR, "Invalid: power setting size %d",'
p2333
aS'\t\t\tctrl->power_setting_size);'
p2334
aS'\t\treturn -EINVAL;'
p2335
aS'\t}'
p2336
ag119
as(I1805
I1817
tp2337
(lp2338
S'\t\t\t\t\tif (ret) {'
p2339
aS'\t\t\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2340
aS'\t\t\t\t\t\t"Reg: %s disable failed",'
p2341
aS'\t\t\t\t\t\tsoc_info->rgltr_name['
p2342
aS'\t\t\t\t\t\t\tps->seq_val]);'
p2343
aS'\t\t\t\t\t\tsoc_info->rgltr[ps->seq_val] ='
p2344
aS'\t\t\t\t\t\t\tNULL;'
p2345
aS'\t\t\t\t\t\tmsm_cam_sensor_handle_reg_gpio('
p2346
aS'\t\t\t\t\t\t\tpd->seq_type,'
p2347
aS'\t\t\t\t\t\t\tgpio_num_info,'
p2348
aS'\t\t\t\t\t\t\tGPIOF_OUT_INIT_LOW);'
p2349
aS'\t\t\t\t\t\tcontinue;'
p2350
aS'\t\t\t\t\t}'
p2351
as(I1744
I1750
tp2352
(lp2353
S'\t\tif (!pd) {'
p2354
aS'\t\t\tCAM_ERR(CAM_SENSOR,'
p2355
aS'\t\t\t\t"Invalid power down settings for index %d",'
p2356
aS'\t\t\t\tindex);'
p2357
aS'\t\t\treturn -EINVAL;'
p2358
aS'\t\t}'
p2359
ag119
as(I1752
I1752
tp2360
(lp2361
S'\t\tCAM_DBG(CAM_SENSOR, "seq_type %d",  pd->seq_type);'
p2362
as(I1760
I1765
tp2363
(lp2364
S'\t\t\tret = cam_config_mclk_reg(ctrl, soc_info, index);'
p2365
aS'\t\t\tif (ret < 0) {'
p2366
aS'\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2367
aS'\t\t\t\t\t"config clk reg failed rc: %d", ret);'
p2368
aS'\t\t\t\tcontinue;'
p2369
aS'\t\t\t}'
p2370
as(I1742
I1742
tp2371
(lp2372
S'\t\tCAM_DBG(CAM_SENSOR, "power_down_index %d",  index);'
p2373
asss(g2294
S'cam_sensor_update_power_settings'
p2374
I684
tp2375
(dp2376
g27
(dp2377
(I880
I881
tp2378
(lp2379
S'free_power_down_settings:'
p2380
aS'\tkfree(power_info->power_down_setting);'
p2381
as(I860
I860
tp2382
(lp2383
S'\t\t\t\t\tgoto free_power_down_settings;'
p2384
as(I714
I715
tp2385
(lp2386
S'\t\trc = -ENOMEM;'
p2387
aS'\t\tgoto free_power_settings;'
p2388
as(I758
I758
tp2389
(lp2390
S'\t\t\t\t\tgoto free_power_down_settings;'
p2391
as(I836
I836
tp2392
(lp2393
S'\t\t\t\tCAM_ERR(CAM_SENSOR, "Invalid Command");'
p2394
as(I738
I738
tp2395
(lp2396
S'\t\t\t\tCAM_WARN(CAM_SENSOR, "Un expected Command");'
p2397
assg9
(I684
I888
tp2398
sg11
I3
sg12
g13
sg14
(dp2399
(I727
I733
tp2400
(lp2401
S'\t\t\tif (power_info->power_setting_size > MAX_POWER_CONFIG) {'
p2402
aS'\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2403
aS'\t\t\t\t\t"Invalid: power up setting size %d",'
p2404
aS'\t\t\t\t\tpower_info->power_setting_size);'
p2405
aS'\t\t\t\trc = -EINVAL;'
p2406
aS'\t\t\t\tgoto free_power_settings;'
p2407
aS'\t\t\t}'
p2408
as(I874
I875
tp2409
(lp2410
S'\t\t\trc = -EINVAL;'
p2411
aS'\t\t\tgoto free_power_settings;'
p2412
as(I826
I833
tp2413
(lp2414
S'\t\t\tif (power_info->power_down_setting_size >'
p2415
aS'\t\t\t\tMAX_POWER_CONFIG) {'
p2416
aS'\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2417
aS'\t\t\t\t\t"Invalid: power down setting size %d",'
p2418
aS'\t\t\t\t\tpower_info->power_down_setting_size);'
p2419
aS'\t\t\t\trc = -EINVAL;'
p2420
aS'\t\t\t\tgoto free_power_settings;'
p2421
aS'\t\t\t}'
p2422
as(I758
I758
tp2423
(lp2424
S'\t\t\t\t\tgoto free_power_settings;'
p2425
as(I714
I717
tp2426
(lp2427
S'\t\tkfree(power_info->power_setting);'
p2428
aS'\t\tpower_info->power_setting = NULL;'
p2429
aS'\t\tpower_info->power_setting_size = 0;'
p2430
aS'\t\treturn -ENOMEM;'
p2431
as(I836
I836
tp2432
(lp2433
S'\t\t\t\tCAM_ERR(CAM_SENSOR, "pwr_down size is zero");'
p2434
as(I883
I886
tp2435
(lp2436
S'\tpower_info->power_down_setting = NULL;'
p2437
aS'\tpower_info->power_setting = NULL;'
p2438
aS'\tpower_info->power_down_setting_size = 0;'
p2439
aS'\tpower_info->power_setting_size = 0;'
p2440
as(I738
I738
tp2441
(lp2442
S'\t\t\t\tCAM_WARN(CAM_SENSOR, "pwr_up_size is zero");'
p2443
as(I860
I860
tp2444
(lp2445
S'\t\t\t\t\tgoto free_power_settings;'
p2446
as(I881
I881
tp2447
(lp2448
S'\tkfree(power_info->power_down_setting);'
p2449
asss(g2250
S'cam_sensor_shutdown'
p2450
I496
tp2451
(dp2452
g27
(dp2453
(I502
I503
tp2454
(lp2455
S'\ts_ctrl->is_probe_succeed = 0;'
p2456
aS'\tif (s_ctrl->sensor_state == CAM_SENSOR_INIT)'
p2457
as(I519
I519
tp2458
(lp2459
g119
as(I517
I517
tp2460
(lp2461
g119
assg9
(I496
I527
tp2462
sg11
I1
sg12
g13
sg14
(dp2463
(I502
I503
tp2464
(lp2465
S'\tif ((s_ctrl->sensor_state == CAM_SENSOR_INIT) &&'
p2466
aS'\t\t(s_ctrl->is_probe_succeed == 0))'
p2467
as(I525
I525
tp2468
(lp2469
S'\ts_ctrl->is_probe_succeed = 0;'
p2470
as(I519
I522
tp2471
(lp2472
S'\tpower_info->power_setting = NULL;'
p2473
aS'\tpower_info->power_down_setting = NULL;'
p2474
aS'\tpower_info->power_setting_size = 0;'
p2475
aS'\tpower_info->power_down_setting_size = 0;'
p2476
asss(g2294
S'cam_sensor_core_power_up'
p2477
I1336
tp2478
(dp2479
g27
(dp2480
(I1541
I1541
tp2481
(lp2482
g119
as(I1446
I1446
tp2483
(lp2484
g119
as(I1399
I1399
tp2485
(lp2486
S'\t\t\tCAM_ERR(CAM_SENSOR, "Invalid power up settings");'
p2487
as(I1673
I1674
tp2488
(lp2489
S'\t\t\t\tctrl->pinctrl_info.pinctrl,'
p2490
aS'\t\t\t\tctrl->pinctrl_info.gpio_state_suspend);'
p2491
as(I1678
I1678
tp2492
(lp2493
S'\t\tpinctrl_put(ctrl->pinctrl_info.pinctrl);'
p2494
as(I1647
I1648
tp2495
(lp2496
S'\t\t\t\tregulator_put('
p2497
aS'\t\t\t\t\tsoc_info->rgltr[vreg_idx]);'
p2498
as(I1339
I1339
tp2499
(lp2500
S'\tint rc = 0, index = 0, no_gpio = 0, ret = 0, num_vreg, j = 0;'
p2501
assg9
(I1336
I1690
tp2502
sg11
I2
sg12
g13
sg14
(dp2503
(I1446
I1450
tp2504
(lp2505
S'\t\t\t\t\tif (rc) {'
p2506
aS'\t\t\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2507
aS'\t\t\t\t\t\t\t"Reg enable failed");'
p2508
aS'\t\t\t\t\t\tgoto power_up_failed;'
p2509
aS'\t\t\t\t\t}'
p2510
as(I1541
I1546
tp2511
(lp2512
S'\t\t\t\tif (rc) {'
p2513
aS'\t\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2514
aS'\t\t\t\t\t\t"Reg Enable failed for %s",'
p2515
aS'\t\t\t\t\t\tsoc_info->rgltr_name[vreg_idx]);'
p2516
aS'\t\t\t\t\tgoto power_up_failed;'
p2517
aS'\t\t\t\t}'
p2518
as(I1339
I1339
tp2519
(lp2520
S'\tint rc = 0, index = 0, no_gpio = 0, ret = 0, num_vreg, j = 0, i = 0;'
p2521
as(I1589
I1600
tp2522
(lp2523
S'\t\tcase SENSOR_MCLK:'
p2524
aS'\t\t\tfor (i = soc_info->num_clk - 1; i >= 0; i--) {'
p2525
aS'\t\t\t\tcam_soc_util_clk_disable(soc_info->clk[i],'
p2526
aS'\t\t\t\t\tsoc_info->clk_name[i]);'
p2527
aS'\t\t\t}'
p2528
aS'\t\t\tret = cam_config_mclk_reg(ctrl, soc_info, index);'
p2529
aS'\t\t\tif (ret < 0) {'
p2530
aS'\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2531
aS'\t\t\t\t\t"config clk reg failed rc: %d", ret);'
p2532
aS'\t\t\t\tcontinue;'
p2533
aS'\t\t\t}'
p2534
aS'\t\t\tbreak;'
p2535
as(I1436
I1436
tp2536
(lp2537
S'\t\t\t\t\t\tgoto power_up_failed;'
p2538
as(I1673
I1674
tp2539
(lp2540
S'\t\t\tctrl->pinctrl_info.pinctrl,'
p2541
aS'\t\t\tctrl->pinctrl_info.gpio_state_suspend);'
p2542
as(I1678
I1678
tp2543
(lp2544
S'\t\tdevm_pinctrl_put(ctrl->pinctrl_info.pinctrl);'
p2545
as(I1633
I1643
tp2546
(lp2547
S'\t\t\t\tif (rc) {'
p2548
aS'\t\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2549
aS'\t\t\t\t\t"Fail to disalbe reg: %s",'
p2550
aS'\t\t\t\t\tsoc_info->rgltr_name[vreg_idx]);'
p2551
aS'\t\t\t\t\tsoc_info->rgltr[vreg_idx] = NULL;'
p2552
aS'\t\t\t\t\tmsm_cam_sensor_handle_reg_gpio('
p2553
aS'\t\t\t\t\t\tpower_setting->seq_type,'
p2554
aS'\t\t\t\t\t\tgpio_num_info,'
p2555
aS'\t\t\t\t\t\tGPIOF_OUT_INIT_LOW);'
p2556
aS'\t\t\t\t\tcontinue;'
p2557
aS'\t\t\t\t}'
p2558
as(I1399
I1401
tp2559
(lp2560
S'\t\t\tCAM_ERR(CAM_SENSOR,'
p2561
aS'\t\t\t\t"Invalid power up settings for index %d",'
p2562
aS'\t\t\t\tindex);'
p2563
as(I1647
I1647
tp2564
(lp2565
S'\t\t\t\tregulator_put(soc_info->rgltr[vreg_idx]);'
p2566
as(I1531
I1531
tp2567
(lp2568
S'\t\t\t\t\tgoto power_up_failed;'
p2569
asss(g2250
g2251
I559
tp2570
(dp2571
g27
(dp2572
(I593
I594
tp2573
(lp2574
S'\t\t\t\tkfree(pu);'
p2575
aS'\t\t\t\tkfree(pd);'
p2576
as(I630
I632
tp2577
(lp2578
S'\t\t\tkfree(pu);'
p2579
aS'\t\t\tkfree(pd);'
p2580
aS'\t\t\tgoto release_mutex;'
p2581
as(I598
I598
tp2582
(lp2583
S'\t\t\treturn -EINVAL;'
p2584
as(I564
I565
tp2585
(lp2586
S'\tstruct cam_sensor_power_setting *pu = NULL;'
p2587
aS'\tstruct cam_sensor_power_setting *pd = NULL;'
p2588
as(I587
I604
tp2589
(lp2590
S'\t\t/* Allocate memory for power up setting */'
p2591
aS'\t\tpu = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p2592
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p2593
aS'\t\tif (!pu) {'
p2594
aS'\t\t\trc = -ENOMEM;'
p2595
aS'\t\t\tgoto release_mutex;'
p2596
aS'\t\t}'
p2597
ag119
aS'\t\tpd = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p2598
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p2599
aS'\t\tif (!pd) {'
p2600
aS'\t\t\tkfree(pu);'
p2601
aS'\t\t\trc = -ENOMEM;'
p2602
aS'\t\t\tgoto release_mutex;'
p2603
aS'\t\t}'
p2604
ag119
aS'\t\tpower_info->power_setting = pu;'
p2605
aS'\t\tpower_info->power_down_setting = pd;'
p2606
as(I650
I652
tp2607
(lp2608
S'\t\t\tkfree(pu);'
p2609
aS'\t\t\tkfree(pd);'
p2610
aS'\t\t\tgoto release_mutex;'
p2611
as(I638
I640
tp2612
(lp2613
S'\t\t\tkfree(pu);'
p2614
aS'\t\t\tkfree(pd);'
p2615
aS'\t\t\tgoto release_mutex;'
p2616
as(I642
I642
tp2617
(lp2618
S'\t\t\t"Probe Succees,slot:%d,slave_addr:0x%x,sensor_id:0x%x",'
p2619
as(I623
I625
tp2620
(lp2621
S'\t\t\tkfree(pu);'
p2622
aS'\t\t\tkfree(pd);'
p2623
aS'\t\t\tgoto release_mutex;'
p2624
as(I611
I613
tp2625
(lp2626
S'\t\t\tkfree(pu);'
p2627
aS'\t\t\tkfree(pd);'
p2628
aS'\t\t\tgoto release_mutex;'
p2629
assg9
(I559
I891
tp2630
sg11
I2
sg12
g13
sg14
(dp2631
(I598
I599
tp2632
(lp2633
S'\t\t\trc = -EINVAL;'
p2634
aS'\t\t\tgoto release_mutex;'
p2635
as(I611
I611
tp2636
(lp2637
S'\t\t\tgoto free_power_settings;'
p2638
as(I650
I650
tp2639
(lp2640
S'\t\t\tgoto free_power_settings;'
p2641
as(I642
I642
tp2642
(lp2643
S'\t\t\t"Probe success,slot:%d,slave_addr:0x%x,sensor_id:0x%x",'
p2644
as(I638
I638
tp2645
(lp2646
S'\t\t\tgoto free_power_settings;'
p2647
as(I881
I890
tp2648
(lp2649
g119
aS'free_power_settings:'
p2650
aS'\tkfree(power_info->power_setting);'
p2651
aS'\tkfree(power_info->power_down_setting);'
p2652
aS'\tpower_info->power_setting = NULL;'
p2653
aS'\tpower_info->power_down_setting = NULL;'
p2654
aS'\tpower_info->power_down_setting_size = 0;'
p2655
aS'\tpower_info->power_setting_size = 0;'
p2656
aS'\tmutex_unlock(&(s_ctrl->cam_sensor_mutex));'
p2657
aS'\treturn rc;'
p2658
as(I664
I672
tp2659
(lp2660
S'\t\tif ((s_ctrl->is_probe_succeed == 0) ||'
p2661
aS'\t\t\t(s_ctrl->sensor_state != CAM_SENSOR_INIT)) {'
p2662
aS'\t\t\tCAM_WARN(CAM_SENSOR,'
p2663
aS'\t\t\t\t"Not in right state to aquire %d",'
p2664
aS'\t\t\t\ts_ctrl->sensor_state);'
p2665
aS'\t\t\trc = -EINVAL;'
p2666
aS'\t\t\tgoto release_mutex;'
p2667
aS'\t\t}'
p2668
ag119
as(I623
I623
tp2669
(lp2670
S'\t\t\tgoto free_power_settings;'
p2671
as(I630
I630
tp2672
(lp2673
S'\t\t\tgoto free_power_settings;'
p2674
asss(g2294
S'cam_config_mclk_reg'
p2675
I1284
tp2676
(dp2677
g27
(dp2678
(I1295
I1299
tp2679
(lp2680
S'\tif (!pd) {'
p2681
aS'\t\tCAM_ERR(CAM_SENSOR, "Invalid power down setting");'
p2682
aS'\t\treturn -EINVAL;'
p2683
aS'\t}'
p2684
ag119
as(I1298
I1301
tp2685
(lp2686
S'\t\t\tfor (idx = 0; idx <'
p2687
aS'\t\t\t\tctrl->power_setting_size; idx++) {'
p2688
aS'\t\t\t\tif (ctrl->power_setting[idx].'
p2689
aS'\t\t\t\t\tseq_type == pd->seq_type) {'
p2690
as(I1307
I1308
tp2691
(lp2692
S'\t\t\t\tCAM_DBG(CAM_SENSOR, "Disable Regulator");'
p2693
ag119
as(I1297
I1297
tp2694
(lp2695
g119
assg9
(I1284
I1334
tp2696
sg11
I3
sg12
g13
sg14
(dp2697
(I1316
I1322
tp2698
(lp2699
S'\t\t\t\tif (rc) {'
p2700
aS'\t\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2701
aS'\t\t\t\t\t\t"MCLK REG DISALBE FAILED: %d",'
p2702
aS'\t\t\t\t\t\trc);'
p2703
aS'\t\t\t\t\treturn rc;'
p2704
aS'\t\t\t\t}'
p2705
ag119
as(I1307
I1307
tp2706
(lp2707
S'\t\t\t\tCAM_DBG(CAM_SENSOR, "Disable MCLK Regulator");'
p2708
as(I1298
I1300
tp2709
(lp2710
S'\t\t\tfor (idx = 0; idx < ctrl->power_setting_size; idx++) {'
p2711
aS'\t\t\t\tif (ctrl->power_setting[idx].seq_type =='
p2712
aS'\t\t\t\t\tpd->seq_type) {'
p2713
assssS'679b010b8fa6_sdm845-perf'
p2714
(dp2715
(g2294
g2675
I1547
tp2716
(dp2717
g27
(dp2718
(I1558
I1562
tp2719
(lp2720
S'\tif (!pd) {'
p2721
aS'\t\tCAM_ERR(CAM_SENSOR, "Invalid power down setting");'
p2722
aS'\t\treturn -EINVAL;'
p2723
aS'\t}'
p2724
ag119
assg9
(I1547
I1593
tp2725
sg11
I3
sg12
g13
sssS'1d7b97667c43_sdm845-perf'
p2726
(dp2727
(g2294
g2374
I841
tp2728
(dp2729
g27
(dp2730
(I901
I901
tp2731
(lp2732
S'\t\t\t\tCAM_WARN(CAM_SENSOR, "Un expected Command");'
p2733
as(I842
I842
tp2734
(lp2735
S'\tint cmd_length, struct cam_sensor_power_ctrl_t *power_info)'
p2736
as(I852
I852
tp2737
(lp2738
S'\tif (!pwr_cmd || !cmd_length) {'
p2739
as(I999
I999
tp2740
(lp2741
S'\t\t\t\tCAM_ERR(CAM_SENSOR, "Invalid Command");'
p2742
as(I921
I921
tp2743
(lp2744
S'\t\t\t\t\tgoto free_power_down_settings;'
p2745
as(I873
I874
tp2746
(lp2747
S'\t\trc = -ENOMEM;'
p2748
aS'\t\tgoto free_power_settings;'
p2749
as(I1043
I1044
tp2750
(lp2751
S'free_power_down_settings:'
p2752
aS'\tkfree(power_info->power_down_setting);'
p2753
as(I1023
I1023
tp2754
(lp2755
S'\t\t\t\t\tgoto free_power_down_settings;'
p2756
assg9
(I841
I1051
tp2757
sg11
I4
sg12
g13
sg14
(dp2758
(I1046
I1049
tp2759
(lp2760
S'\tpower_info->power_down_setting = NULL;'
p2761
aS'\tpower_info->power_setting = NULL;'
p2762
aS'\tpower_info->power_down_setting_size = 0;'
p2763
aS'\tpower_info->power_setting_size = 0;'
p2764
as(I842
I843
tp2765
(lp2766
S'\tuint32_t cmd_length, struct cam_sensor_power_ctrl_t *power_info,'
p2767
aS'\tsize_t cmd_buf_len)'
p2768
as(I901
I901
tp2769
(lp2770
S'\t\t\t\tCAM_WARN(CAM_SENSOR, "pwr_up_size is zero");'
p2771
as(I852
I853
tp2772
(lp2773
S'\tif (!pwr_cmd || !cmd_length || cmd_buf_len < (size_t)cmd_length ||'
p2774
aS'\t\tcam_sensor_validate(cmd_buf, cmd_buf_len)) {'
p2775
as(I890
I896
tp2776
(lp2777
S'\t\t\tif (power_info->power_setting_size > MAX_POWER_CONFIG) {'
p2778
aS'\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2779
aS'\t\t\t\t\t"Invalid: power up setting size %d",'
p2780
aS'\t\t\t\t\tpower_info->power_setting_size);'
p2781
aS'\t\t\t\trc = -EINVAL;'
p2782
aS'\t\t\t\tgoto free_power_settings;'
p2783
aS'\t\t\t}'
p2784
as(I1044
I1044
tp2785
(lp2786
S'\tkfree(power_info->power_down_setting);'
p2787
as(I921
I921
tp2788
(lp2789
S'\t\t\t\t\tgoto free_power_settings;'
p2790
as(I999
I999
tp2791
(lp2792
S'\t\t\t\tCAM_ERR(CAM_SENSOR, "pwr_down size is zero");'
p2793
as(I1037
I1038
tp2794
(lp2795
S'\t\t\trc = -EINVAL;'
p2796
aS'\t\t\tgoto free_power_settings;'
p2797
as(I880
I883
tp2798
(lp2799
S'\t\tif (cam_sensor_validate(ptr, (cmd_length - tot_size))) {'
p2800
aS'\t\t\trc = -EINVAL;'
p2801
aS'\t\t\tgoto free_power_settings;'
p2802
aS'\t\t}'
p2803
as(I989
I996
tp2804
(lp2805
S'\t\t\tif (power_info->power_down_setting_size >'
p2806
aS'\t\t\t\tMAX_POWER_CONFIG) {'
p2807
aS'\t\t\t\tCAM_ERR(CAM_SENSOR,'
p2808
aS'\t\t\t\t\t"Invalid: power down setting size %d",'
p2809
aS'\t\t\t\t\tpower_info->power_down_setting_size);'
p2810
aS'\t\t\t\trc = -EINVAL;'
p2811
aS'\t\t\t\tgoto free_power_settings;'
p2812
aS'\t\t\t}'
p2813
as(I1023
I1023
tp2814
(lp2815
S'\t\t\t\t\tgoto free_power_settings;'
p2816
as(I873
I876
tp2817
(lp2818
S'\t\tkfree(power_info->power_setting);'
p2819
aS'\t\tpower_info->power_setting = NULL;'
p2820
aS'\t\tpower_info->power_setting_size = 0;'
p2821
aS'\t\treturn -ENOMEM;'
p2822
assssS'f5bee8dc8d4a_sdm845-perf'
p2823
(dp2824
(g2294
g2374
I684
tp2825
(dp2826
g9
(I684
I868
tp2827
sg11
I3
sg12
g13
sg14
(dp2828
(I863
I863
tp2829
(lp2830
S'\tpower_info->power_down_setting = NULL;'
p2831
as(I866
I866
tp2832
(lp2833
S'\tpower_info->power_setting = NULL;'
p2834
asss(g2250
g2251
I559
tp2835
(dp2836
g27
(dp2837
(I589
I606
tp2838
(lp2839
S'\t\t/* Allocate memory for power up setting */'
p2840
aS'\t\tpu = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p2841
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p2842
aS'\t\tif (!pu) {'
p2843
aS'\t\t\trc = -ENOMEM;'
p2844
aS'\t\t\tgoto release_mutex;'
p2845
aS'\t\t}'
p2846
ag119
aS'\t\tpd = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p2847
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p2848
aS'\t\tif (!pd) {'
p2849
aS'\t\t\tkfree(pu);'
p2850
aS'\t\t\trc = -ENOMEM;'
p2851
aS'\t\t\tgoto release_mutex;'
p2852
aS'\t\t}'
p2853
ag119
aS'\t\tpower_info->power_setting = pu;'
p2854
aS'\t\tpower_info->power_down_setting = pd;'
p2855
assg9
(I559
I888
tp2856
sg11
I2
sg12
g13
sg14
(dp2857
(I605
I607
tp2858
(lp2859
S'\t\tpu = power_info->power_setting;'
p2860
aS'\t\tpd = power_info->power_down_setting;'
p2861
ag119
asss(g2294
g2477
I1246
tp2862
(dp2863
g27
(dp2864
(I1309
I1309
tp2865
(lp2866
S'\t\t\tCAM_ERR(CAM_SENSOR, "Invalid power up settings");'
p2867
as(I1555
I1555
tp2868
(lp2869
S'\t\tpinctrl_put(ctrl->pinctrl_info.pinctrl);'
p2870
assg9
(I1246
I1567
tp2871
sg11
I2
sg12
g13
sg14
(dp2872
(I1309
I1311
tp2873
(lp2874
S'\t\t\tCAM_ERR(CAM_SENSOR,'
p2875
aS'\t\t\t\t"Invalid power up settings for index %d",'
p2876
aS'\t\t\t\tindex);'
p2877
as(I1555
I1555
tp2878
(lp2879
S'\t\tdevm_pinctrl_put(ctrl->pinctrl_info.pinctrl);'
p2880
asss(g2294
g2295
I1638
tp2881
(dp2882
g27
(dp2883
(I1769
I1769
tp2884
(lp2885
S'\t\tpinctrl_put(ctrl->pinctrl_info.pinctrl);'
p2886
as(I1643
I1643
tp2887
(lp2888
S'\tstruct cam_sensor_power_setting *ps;'
p2889
assg9
(I1638
I1781
tp2890
sg11
I2
sg12
g13
sg14
(dp2891
(I1663
I1669
tp2892
(lp2893
S'\t\tif (!pd) {'
p2894
aS'\t\t\tCAM_ERR(CAM_SENSOR,'
p2895
aS'\t\t\t\t"Invalid power down settings for index %d",'
p2896
aS'\t\t\t\tindex);'
p2897
aS'\t\t\treturn -EINVAL;'
p2898
aS'\t\t}'
p2899
ag119
as(I1769
I1769
tp2900
(lp2901
S'\t\tdevm_pinctrl_put(ctrl->pinctrl_info.pinctrl);'
p2902
as(I1643
I1643
tp2903
(lp2904
S'\tstruct cam_sensor_power_setting *ps = NULL;'
p2905
asss(g2250
g2450
I497
tp2906
(dp2907
g9
(I497
I527
tp2908
sg11
I1
sg12
g13
sg14
(dp2909
(I521
I522
tp2910
(lp2911
S'\tpower_info->power_setting = NULL;'
p2912
aS'\tpower_info->power_down_setting = NULL;'
p2913
assssS'f332617ebb03_sdm845-perf'
p2914
(dp2915
(g2250
g2251
I543
tp2916
(dp2917
g27
(dp2918
(I577
I578
tp2919
(lp2920
S'\t\t\t\tkfree(pu);'
p2921
aS'\t\t\t\tkfree(pd);'
p2922
as(I720
I720
tp2923
(lp2924
S'\t\tcam_sensor_release_resource(s_ctrl);'
p2925
as(I805
I805
tp2926
(lp2927
S'\t\tcam_sensor_release_resource(s_ctrl);'
p2928
as(I582
I582
tp2929
(lp2930
S'\t\t\treturn -EINVAL;'
p2931
as(I548
I549
tp2932
(lp2933
S'\tstruct cam_sensor_power_setting *pu = NULL;'
p2934
aS'\tstruct cam_sensor_power_setting *pd = NULL;'
p2935
as(I622
I624
tp2936
(lp2937
S'\t\t\tkfree(pu);'
p2938
aS'\t\t\tkfree(pd);'
p2939
aS'\t\t\tgoto release_mutex;'
p2940
as(I571
I588
tp2941
(lp2942
S'\t\t/* Allocate memory for power up setting */'
p2943
aS'\t\tpu = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p2944
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p2945
aS'\t\tif (!pu) {'
p2946
aS'\t\t\trc = -ENOMEM;'
p2947
aS'\t\t\tgoto release_mutex;'
p2948
aS'\t\t}'
p2949
ag119
aS'\t\tpd = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p2950
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p2951
aS'\t\tif (!pd) {'
p2952
aS'\t\t\tkfree(pu);'
p2953
aS'\t\t\trc = -ENOMEM;'
p2954
aS'\t\t\tgoto release_mutex;'
p2955
aS'\t\t}'
p2956
ag119
aS'\t\tpower_info->power_setting = pu;'
p2957
aS'\t\tpower_info->power_down_setting = pd;'
p2958
as(I634
I636
tp2959
(lp2960
S'\t\t\tkfree(pu);'
p2961
aS'\t\t\tkfree(pd);'
p2962
aS'\t\t\tgoto release_mutex;'
p2963
as(I663
I663
tp2964
(lp2965
S'\t\t\t(void __user *) cmd->handle, sizeof(sensor_acq_dev));'
p2966
as(I683
I683
tp2967
(lp2968
S'\t\tif (copy_to_user((void __user *) cmd->handle, &sensor_acq_dev,'
p2969
as(I614
I616
tp2970
(lp2971
S'\t\t\tkfree(pu);'
p2972
aS'\t\t\tkfree(pd);'
p2973
aS'\t\t\tgoto release_mutex;'
p2974
as(I626
I626
tp2975
(lp2976
S'\t\t\t"Probe Succees,slot:%d,slave_addr:0x%x,sensor_id:0x%x",'
p2977
as(I607
I609
tp2978
(lp2979
S'\t\t\tkfree(pu);'
p2980
aS'\t\t\tkfree(pd);'
p2981
aS'\t\t\tgoto release_mutex;'
p2982
as(I751
I752
tp2983
(lp2984
S'\t\tif (copy_to_user((void __user *) cmd->handle, &sensor_cap,'
p2985
aS'\t\t\tsizeof(struct  cam_sensor_query_cap))) {'
p2986
as(I595
I597
tp2987
(lp2988
S'\t\t\tkfree(pu);'
p2989
aS'\t\t\tkfree(pd);'
p2990
aS'\t\t\tgoto release_mutex;'
p2991
assg9
(I543
I877
tp2992
sg11
I2
sg12
g13
sg14
(dp2993
(I614
I614
tp2994
(lp2995
S'\t\t\tgoto free_power_settings;'
p2996
as(I720
I720
tp2997
(lp2998
S'\t\tcam_sensor_release_per_frame_resource(s_ctrl);'
p2999
as(I582
I583
tp3000
(lp3001
S'\t\t\trc = -EINVAL;'
p3002
aS'\t\t\tgoto release_mutex;'
p3003
as(I595
I595
tp3004
(lp3005
S'\t\t\tgoto free_power_settings;'
p3006
as(I634
I634
tp3007
(lp3008
S'\t\t\tgoto free_power_settings;'
p3009
as(I751
I752
tp3010
(lp3011
S'\t\tif (copy_to_user(u64_to_user_ptr(cmd->handle),'
p3012
aS'\t\t\t&sensor_cap, sizeof(struct  cam_sensor_query_cap))) {'
p3013
as(I622
I622
tp3014
(lp3015
S'\t\t\tgoto free_power_settings;'
p3016
as(I663
I664
tp3017
(lp3018
S'\t\t\tu64_to_user_ptr(cmd->handle),'
p3019
aS'\t\t\tsizeof(sensor_acq_dev));'
p3020
as(I626
I626
tp3021
(lp3022
S'\t\t\t"Probe success,slot:%d,slave_addr:0x%x,sensor_id:0x%x",'
p3023
as(I867
I876
tp3024
(lp3025
g119
aS'free_power_settings:'
p3026
aS'\tkfree(power_info->power_setting);'
p3027
aS'\tkfree(power_info->power_down_setting);'
p3028
aS'\tpower_info->power_setting = NULL;'
p3029
aS'\tpower_info->power_down_setting = NULL;'
p3030
aS'\tpower_info->power_down_setting_size = 0;'
p3031
aS'\tpower_info->power_setting_size = 0;'
p3032
aS'\tmutex_unlock(&(s_ctrl->cam_sensor_mutex));'
p3033
aS'\treturn rc;'
p3034
as(I648
I656
tp3035
(lp3036
S'\t\tif ((s_ctrl->is_probe_succeed == 0) ||'
p3037
aS'\t\t\t(s_ctrl->sensor_state != CAM_SENSOR_INIT)) {'
p3038
aS'\t\t\tCAM_WARN(CAM_SENSOR,'
p3039
aS'\t\t\t\t"Not in right state to aquire %d",'
p3040
aS'\t\t\t\ts_ctrl->sensor_state);'
p3041
aS'\t\t\trc = -EINVAL;'
p3042
aS'\t\t\tgoto release_mutex;'
p3043
aS'\t\t}'
p3044
ag119
as(I683
I684
tp3045
(lp3046
S'\t\tif (copy_to_user(u64_to_user_ptr(cmd->handle),'
p3047
aS'\t\t\t&sensor_acq_dev,'
p3048
as(I607
I607
tp3049
(lp3050
S'\t\t\tgoto free_power_settings;'
p3051
as(I805
I805
tp3052
(lp3053
S'\t\tcam_sensor_release_per_frame_resource(s_ctrl);'
p3054
assssS'a5bdc9ebe5cf_sdm845-perf'
p3055
(dp3056
(g2250
g2251
I543
tp3057
(dp3058
g27
(dp3059
(I577
I578
tp3060
(lp3061
S'\t\t\t\tkfree(pu);'
p3062
aS'\t\t\t\tkfree(pd);'
p3063
as(I614
I616
tp3064
(lp3065
S'\t\t\tkfree(pu);'
p3066
aS'\t\t\tkfree(pd);'
p3067
aS'\t\t\tgoto release_mutex;'
p3068
as(I582
I582
tp3069
(lp3070
S'\t\t\treturn -EINVAL;'
p3071
as(I548
I549
tp3072
(lp3073
S'\tstruct cam_sensor_power_setting *pu = NULL;'
p3074
aS'\tstruct cam_sensor_power_setting *pd = NULL;'
p3075
as(I814
I814
tp3076
(lp3077
S'\t\tcam_sensor_release_resource(s_ctrl);'
p3078
as(I571
I588
tp3079
(lp3080
S'\t\t/* Allocate memory for power up setting */'
p3081
aS'\t\tpu = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p3082
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p3083
aS'\t\tif (!pu) {'
p3084
aS'\t\t\trc = -ENOMEM;'
p3085
aS'\t\t\tgoto release_mutex;'
p3086
aS'\t\t}'
p3087
ag119
aS'\t\tpd = kzalloc(sizeof(struct cam_sensor_power_setting) *'
p3088
aS'\t\t\tMAX_POWER_CONFIG, GFP_KERNEL);'
p3089
aS'\t\tif (!pd) {'
p3090
aS'\t\t\tkfree(pu);'
p3091
aS'\t\t\trc = -ENOMEM;'
p3092
aS'\t\t\tgoto release_mutex;'
p3093
aS'\t\t}'
p3094
ag119
aS'\t\tpower_info->power_setting = pu;'
p3095
aS'\t\tpower_info->power_down_setting = pd;'
p3096
as(I729
I729
tp3097
(lp3098
S'\t\tcam_sensor_release_resource(s_ctrl);'
p3099
as(I634
I636
tp3100
(lp3101
S'\t\t\tkfree(pu);'
p3102
aS'\t\t\tkfree(pd);'
p3103
aS'\t\t\tgoto release_mutex;'
p3104
as(I663
I663
tp3105
(lp3106
S'\t\t\t(void __user *) cmd->handle, sizeof(sensor_acq_dev));'
p3107
as(I760
I761
tp3108
(lp3109
S'\t\tif (copy_to_user((void __user *) cmd->handle, &sensor_cap,'
p3110
aS'\t\t\tsizeof(struct  cam_sensor_query_cap))) {'
p3111
as(I683
I683
tp3112
(lp3113
S'\t\tif (copy_to_user((void __user *) cmd->handle, &sensor_acq_dev,'
p3114
as(I626
I626
tp3115
(lp3116
S'\t\t\t"Probe Succees,slot:%d,slave_addr:0x%x,sensor_id:0x%x",'
p3117
as(I607
I609
tp3118
(lp3119
S'\t\t\tkfree(pu);'
p3120
aS'\t\t\tkfree(pd);'
p3121
aS'\t\t\tgoto release_mutex;'
p3122
as(I622
I624
tp3123
(lp3124
S'\t\t\tkfree(pu);'
p3125
aS'\t\t\tkfree(pd);'
p3126
aS'\t\t\tgoto release_mutex;'
p3127
as(I595
I597
tp3128
(lp3129
S'\t\t\tkfree(pu);'
p3130
aS'\t\t\tkfree(pd);'
p3131
aS'\t\t\tgoto release_mutex;'
p3132
assg9
(I543
I886
tp3133
sg11
I2
sg12
g13
sg14
(dp3134
(I876
I885
tp3135
(lp3136
g119
aS'free_power_settings:'
p3137
aS'\tkfree(power_info->power_setting);'
p3138
aS'\tkfree(power_info->power_down_setting);'
p3139
aS'\tpower_info->power_setting = NULL;'
p3140
aS'\tpower_info->power_down_setting = NULL;'
p3141
aS'\tpower_info->power_down_setting_size = 0;'
p3142
aS'\tpower_info->power_setting_size = 0;'
p3143
aS'\tmutex_unlock(&(s_ctrl->cam_sensor_mutex));'
p3144
aS'\treturn rc;'
p3145
as(I614
I614
tp3146
(lp3147
S'\t\t\tgoto free_power_settings;'
p3148
as(I582
I583
tp3149
(lp3150
S'\t\t\trc = -EINVAL;'
p3151
aS'\t\t\tgoto release_mutex;'
p3152
as(I595
I595
tp3153
(lp3154
S'\t\t\tgoto free_power_settings;'
p3155
as(I634
I634
tp3156
(lp3157
S'\t\t\tgoto free_power_settings;'
p3158
as(I663
I664
tp3159
(lp3160
S'\t\t\tu64_to_user_ptr(cmd->handle),'
p3161
aS'\t\t\tsizeof(sensor_acq_dev));'
p3162
as(I622
I622
tp3163
(lp3164
S'\t\t\tgoto free_power_settings;'
p3165
as(I729
I729
tp3166
(lp3167
S'\t\tcam_sensor_release_per_frame_resource(s_ctrl);'
p3168
as(I714
I722
tp3169
(lp3170
S'\t\tif (s_ctrl->bridge_intf.link_hdl != -1) {'
p3171
aS'\t\t\tCAM_ERR(CAM_SENSOR,'
p3172
aS'\t\t\t\t"Device [%d] still active on link 0x%x",'
p3173
aS'\t\t\t\ts_ctrl->sensor_state,'
p3174
aS'\t\t\t\ts_ctrl->bridge_intf.link_hdl);'
p3175
aS'\t\t\trc = -EAGAIN;'
p3176
aS'\t\t\tgoto release_mutex;'
p3177
aS'\t\t}'
p3178
ag119
as(I760
I761
tp3179
(lp3180
S'\t\tif (copy_to_user(u64_to_user_ptr(cmd->handle),'
p3181
aS'\t\t\t&sensor_cap, sizeof(struct  cam_sensor_query_cap))) {'
p3182
as(I626
I626
tp3183
(lp3184
S'\t\t\t"Probe success,slot:%d,slave_addr:0x%x,sensor_id:0x%x",'
p3185
as(I814
I814
tp3186
(lp3187
S'\t\tcam_sensor_release_per_frame_resource(s_ctrl);'
p3188
as(I648
I656
tp3189
(lp3190
S'\t\tif ((s_ctrl->is_probe_succeed == 0) ||'
p3191
aS'\t\t\t(s_ctrl->sensor_state != CAM_SENSOR_INIT)) {'
p3192
aS'\t\t\tCAM_WARN(CAM_SENSOR,'
p3193
aS'\t\t\t\t"Not in right state to aquire %d",'
p3194
aS'\t\t\t\ts_ctrl->sensor_state);'
p3195
aS'\t\t\trc = -EINVAL;'
p3196
aS'\t\t\tgoto release_mutex;'
p3197
aS'\t\t}'
p3198
ag119
as(I683
I684
tp3199
(lp3200
S'\t\tif (copy_to_user(u64_to_user_ptr(cmd->handle),'
p3201
aS'\t\t\t&sensor_acq_dev,'
p3202
as(I607
I607
tp3203
(lp3204
S'\t\t\tgoto free_power_settings;'
p3205
asss(g2250
g2450
I481
tp3206
(dp3207
g27
(dp3208
(I492
I493
tp3209
(lp3210
S'\tif (s_ctrl->sensor_state >= CAM_SENSOR_ACQUIRE)'
p3211
aS'\t\tcam_sensor_power_down(s_ctrl);'
p3212
as(I491
I491
tp3213
(lp3214
S'\tcam_sensor_release_resource(s_ctrl);'
p3215
as(I487
I488
tp3216
(lp3217
S'\ts_ctrl->is_probe_succeed = 0;'
p3218
aS'\tif (s_ctrl->sensor_state == CAM_SENSOR_INIT)'
p3219
as(I503
I503
tp3220
(lp3221
g119
as(I501
I501
tp3222
(lp3223
g119
assg9
(I481
I511
tp3224
sg11
I1
sg12
g13
sg14
(dp3225
(I492
I493
tp3226
(lp3227
S'\tcam_sensor_release_per_frame_resource(s_ctrl);'
p3228
aS'\tcam_sensor_power_down(s_ctrl);'
p3229
as(I487
I488
tp3230
(lp3231
S'\tif ((s_ctrl->sensor_state == CAM_SENSOR_INIT) &&'
p3232
aS'\t\t(s_ctrl->is_probe_succeed == 0))'
p3233
as(I509
I509
tp3234
(lp3235
S'\ts_ctrl->is_probe_succeed = 0;'
p3236
as(I503
I506
tp3237
(lp3238
S'\tpower_info->power_setting = NULL;'
p3239
aS'\tpower_info->power_down_setting = NULL;'
p3240
aS'\tpower_info->power_setting_size = 0;'
p3241
aS'\tpower_info->power_down_setting_size = 0;'
p3242
asssssS'CVE-2018-1000199'
p3243
(dp3244
S'230f5ef8edc6_sdm845-perf'
p3245
(dp3246
(S'kernel/events/hw_breakpoint.c'
p3247
S'modify_user_hw_breakpoint'
p3248
I431
tp3249
(dp3250
g27
(dp3251
(I433
I437
tp3252
(lp3253
S'\tu64 old_addr = bp->attr.bp_addr;'
p3254
aS'\tu64 old_len = bp->attr.bp_len;'
p3255
aS'\tint old_type = bp->attr.bp_type;'
p3256
aS'\tint err = 0;'
p3257
ag119
as(I452
I457
tp3258
(lp3259
S'\tif (err) {'
p3260
aS'\t\tbp->attr.bp_addr = old_addr;'
p3261
aS'\t\tbp->attr.bp_type = old_type;'
p3262
aS'\t\tbp->attr.bp_len = old_len;'
p3263
aS'\t\tif (!bp->attr.disabled)'
p3264
aS'\t\t\tperf_event_enable(bp);'
p3265
as(I449
I454
tp3266
(lp3267
S'\tif (attr->disabled)'
p3268
aS'\t\tgoto end;'
p3269
ag119
aS'\terr = validate_hw_breakpoint(bp);'
p3270
aS'\tif (!err)'
p3271
aS'\t\tperf_event_enable(bp);'
p3272
as(I455
I455
tp3273
(lp3274
S'\t\treturn err;'
p3275
as(I459
I461
tp3276
(lp3277
S'end:'
p3278
aS'\tbp->attr.disabled = attr->disabled;'
p3279
ag119
assg9
(I431
I460
tp3280
sg11
I2
sg12
g13
sg14
(dp3281
(I449
I450
tp3282
(lp3283
S'\tif (!attr->disabled) {'
p3284
aS'\t\tint err = validate_hw_breakpoint(bp);'
p3285
as(I452
I453
tp3286
(lp3287
S'\t\tif (err)'
p3288
aS'\t\t\treturn err;'
p3289
as(I455
I456
tp3290
(lp3291
S'\t\tperf_event_enable(bp);'
p3292
aS'\t\tbp->attr.disabled = 0;'
p3293
as(I447
I447
tp3294
(lp3295
S'\tbp->attr.disabled = 1;'
p3296
asssssS'CVE-2018-11266'
p3297
(dp3298
S'6c6aaf4e8330_sdm845-perf'
p3299
(dp3300
(S'drivers/char/diag/diag_dci.c'
p3301
S'dci_lookup_client_entry_pid'
p3302
I2298
tp3303
(dp3304
g27
(dp3305
(I2307
I2308
tp3306
(lp3307
S'\t\tif (entry->client->tgid == tgid)'
p3308
aS'\t\t\treturn entry;'
p3309
assg9
(I2298
I2333
tp3310
sg11
I1
sg12
g13
sg14
(dp3311
(I2307
I2330
tp3312
(lp3313
S'\t\tpid_struct = find_get_pid(entry->tgid);'
p3314
aS'\t\tif (!pid_struct) {'
p3315
aS'\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p3316
aS'\t\t\t"diag: Exited pid (%d) doesn\'t match dci client of pid (%d)\\n",'
p3317
aS'\t\t\ttgid, entry->tgid);'
p3318
aS'\t\t\tcontinue;'
p3319
aS'\t\t}'
p3320
aS'\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p3321
aS'\t\tif (!task_s) {'
p3322
aS'\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p3323
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p3324
aS'\t\t\t\tentry->tgid);'
p3325
aS'\t\t\tput_pid(pid_struct);'
p3326
aS'\t\t\tcontinue;'
p3327
aS'\t\t}'
p3328
aS'\t\tif (task_s == entry->client) {'
p3329
aS'\t\t\tif (entry->client->tgid == tgid) {'
p3330
aS'\t\t\t\tput_task_struct(task_s);'
p3331
aS'\t\t\t\tput_pid(pid_struct);'
p3332
aS'\t\t\t\treturn entry;'
p3333
aS'\t\t\t}'
p3334
aS'\t\t}'
p3335
aS'\t\tput_task_struct(task_s);'
p3336
aS'\t\tput_pid(pid_struct);'
p3337
as(I2302
I2303
tp3338
(lp3339
S'\tstruct pid *pid_struct = NULL;'
p3340
aS'\tstruct task_struct *task_s = NULL;'
p3341
assssS'c98c3c6bc997_sdm845-perf'
p3342
(dp3343
(g3301
g3302
I2207
tp3344
(dp3345
g27
(dp3346
(I2216
I2217
tp3347
(lp3348
S'\t\tif (entry->client->tgid == tgid)'
p3349
aS'\t\t\treturn entry;'
p3350
assg9
(I2207
I2235
tp3351
sg11
I1
sg12
g13
sg14
(dp3352
(I2216
I2232
tp3353
(lp3354
S'\t\tpid_struct = find_get_pid(entry->tgid);'
p3355
aS'\t\tif (!pid_struct) {'
p3356
aS'\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p3357
aS'\t\t\t\t"diag: valid pid doesn\'t exist for pid = %d\\n",'
p3358
aS'\t\t\t\tentry->tgid);'
p3359
aS'\t\t\tcontinue;'
p3360
aS'\t\t}'
p3361
aS'\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p3362
aS'\t\tif (!task_s) {'
p3363
aS'\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p3364
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p3365
aS'\t\t\t\tentry->tgid);'
p3366
aS'\t\t\tcontinue;'
p3367
aS'\t\t}'
p3368
aS'\t\tif (task_s == entry->client)'
p3369
aS'\t\t\tif (entry->client->tgid == tgid)'
p3370
aS'\t\t\t\treturn entry;'
p3371
as(I2211
I2212
tp3372
(lp3373
S'\tstruct pid *pid_struct = NULL;'
p3374
aS'\tstruct task_struct *task_s = NULL;'
p3375
assssS'f332617ebb03_sdm845-perf'
p3376
(dp3377
(g3301
g3302
I2294
tp3378
(dp3379
g27
(dp3380
(I2303
I2304
tp3381
(lp3382
S'\t\tif (entry->client->tgid == tgid)'
p3383
aS'\t\t\treturn entry;'
p3384
assg9
(I2294
I2322
tp3385
sg11
I1
sg12
g13
sg14
(dp3386
(I2298
I2299
tp3387
(lp3388
S'\tstruct pid *pid_struct = NULL;'
p3389
aS'\tstruct task_struct *task_s = NULL;'
p3390
as(I2303
I2319
tp3391
(lp3392
S'\t\tpid_struct = find_get_pid(entry->tgid);'
p3393
aS'\t\tif (!pid_struct) {'
p3394
aS'\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p3395
aS'\t\t\t"diag: Exited pid (%d) doesn\'t match dci client of pid (%d)\\n",'
p3396
aS'\t\t\ttgid, entry->tgid);'
p3397
aS'\t\t\tcontinue;'
p3398
aS'\t\t}'
p3399
aS'\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p3400
aS'\t\tif (!task_s) {'
p3401
aS'\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p3402
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p3403
aS'\t\t\t\tentry->tgid);'
p3404
aS'\t\t\tcontinue;'
p3405
aS'\t\t}'
p3406
aS'\t\tif (task_s == entry->client)'
p3407
aS'\t\t\tif (entry->client->tgid == tgid)'
p3408
aS'\t\t\t\treturn entry;'
p3409
asssssS'CVE-2018-13096'
p3410
(dp3411
S'de6abb23dc05_sdm845-perf'
p3412
(dp3413
(S'fs/f2fs/inode.c'
p3414
S'do_read_inode'
p3415
I290
tp3416
(dp3417
g27
(dp3418
(I377
I378
tp3419
(lp3420
S'\tif (__written_first_block(ri))'
p3421
aS'\t\tset_inode_flag(inode, FI_FIRST_BLOCK_WRITTEN);'
p3422
as(I400
I400
tp3423
(lp3424
S'\tif (f2fs_has_extra_attr(inode) && f2fs_sb_has_inode_crtime(sbi->sb) &&'
p3425
as(I393
I393
tp3426
(lp3427
S'\tif (f2fs_has_extra_attr(inode) && f2fs_sb_has_project_quota(sbi->sb) &&'
p3428
as(I343
I343
tp3429
(lp3430
S'\tif (f2fs_sb_has_flexible_inline_xattr(sbi->sb)) {'
p3431
assg9
(I290
I417
tp3432
sg11
I1
sg12
g13
sg14
(dp3433
(I400
I400
tp3434
(lp3435
S'\tif (f2fs_has_extra_attr(inode) && f2fs_sb_has_inode_crtime(sbi) &&'
p3436
as(I343
I343
tp3437
(lp3438
S'\tif (f2fs_sb_has_flexible_inline_xattr(sbi)) {'
p3439
as(I393
I393
tp3440
(lp3441
S'\tif (f2fs_has_extra_attr(inode) && f2fs_sb_has_project_quota(sbi) &&'
p3442
as(I368
I373
tp3443
(lp3444
S'\t/* try to recover cold bit for non-dir inode */'
p3445
aS'\tif (!S_ISDIR(inode->i_mode) && !is_cold_node(node_page)) {'
p3446
aS'\t\tset_cold_node(node_page, false);'
p3447
aS'\t\tset_page_dirty(node_page);'
p3448
aS'\t}'
p3449
ag119
as(I377
I385
tp3450
(lp3451
S'\tif (S_ISREG(inode->i_mode)) {'
p3452
aS'\t\terr = __written_first_block(sbi, ri);'
p3453
aS'\t\tif (err < 0) {'
p3454
aS'\t\t\tf2fs_put_page(node_page, 1);'
p3455
aS'\t\t\treturn err;'
p3456
aS'\t\t}'
p3457
aS'\t\tif (!err)'
p3458
aS'\t\t\tset_inode_flag(inode, FI_FIRST_BLOCK_WRITTEN);'
p3459
aS'\t}'
p3460
as(I359
I363
tp3461
(lp3462
S'\tif (!sanity_check_inode(inode, node_page)) {'
p3463
aS'\t\tf2fs_put_page(node_page, 1);'
p3464
aS'\t\treturn -EINVAL;'
p3465
aS'\t}'
p3466
ag119
as(I297
I297
tp3467
(lp3468
S'\tint err;'
p3469
asss(g3414
S'sanity_check_inode'
p3470
I195
tp3471
(dp3472
g27
(dp3473
(I195
I195
tp3474
(lp3475
S'static bool sanity_check_inode(struct inode *inode)'
p3476
as(I201
I201
tp3477
(lp3478
S'\tif (f2fs_sb_has_flexible_inline_xattr(sbi->sb)'
p3479
assg9
(I195
I288
tp3480
sg11
I2
sg12
g13
sg14
(dp3481
(I229
I286
tp3482
(lp3483
g119
aS'\tif (f2fs_has_extra_attr(inode) &&'
p3484
aS'\t\t\t!f2fs_sb_has_extra_attr(sbi)) {'
p3485
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3486
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3487
aS'\t\t\t"%s: inode (ino=%lx) is with extra_attr, "'
p3488
aS'\t\t\t"but extra_attr feature is off",'
p3489
aS'\t\t\t__func__, inode->i_ino);'
p3490
aS'\t\treturn false;'
p3491
aS'\t}'
p3492
ag119
aS'\tif (fi->i_extra_isize > F2FS_TOTAL_EXTRA_ATTR_SIZE ||'
p3493
aS'\t\t\tfi->i_extra_isize % sizeof(__le32)) {'
p3494
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3495
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3496
aS'\t\t\t"%s: inode (ino=%lx) has corrupted i_extra_isize: %d, "'
p3497
aS'\t\t\t"max: %zu",'
p3498
aS'\t\t\t__func__, inode->i_ino, fi->i_extra_isize,'
p3499
aS'\t\t\tF2FS_TOTAL_EXTRA_ATTR_SIZE);'
p3500
aS'\t\treturn false;'
p3501
aS'\t}'
p3502
ag119
aS'\tif (F2FS_I(inode)->extent_tree) {'
p3503
aS'\t\tstruct extent_info *ei = &F2FS_I(inode)->extent_tree->largest;'
p3504
ag119
aS'\t\tif (ei->len &&'
p3505
aS'\t\t\t(!f2fs_is_valid_blkaddr(sbi, ei->blk, DATA_GENERIC) ||'
p3506
aS'\t\t\t!f2fs_is_valid_blkaddr(sbi, ei->blk + ei->len - 1,'
p3507
aS'\t\t\t\t\t\t\tDATA_GENERIC))) {'
p3508
aS'\t\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3509
aS'\t\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3510
aS'\t\t\t\t"%s: inode (ino=%lx) extent info [%u, %u, %u] "'
p3511
aS'\t\t\t\t"is incorrect, run fsck to fix",'
p3512
aS'\t\t\t\t__func__, inode->i_ino,'
p3513
aS'\t\t\t\tei->blk, ei->fofs, ei->len);'
p3514
aS'\t\t\treturn false;'
p3515
aS'\t\t}'
p3516
aS'\t}'
p3517
ag119
aS'\tif (f2fs_has_inline_data(inode) &&'
p3518
aS'\t\t\t(!S_ISREG(inode->i_mode) && !S_ISLNK(inode->i_mode))) {'
p3519
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3520
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3521
aS'\t\t\t"%s: inode (ino=%lx, mode=%u) should not have "'
p3522
aS'\t\t\t"inline_data, run fsck to fix",'
p3523
aS'\t\t\t__func__, inode->i_ino, inode->i_mode);'
p3524
aS'\t\treturn false;'
p3525
aS'\t}'
p3526
ag119
aS'\tif (f2fs_has_inline_dentry(inode) && !S_ISDIR(inode->i_mode)) {'
p3527
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3528
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3529
aS'\t\t\t"%s: inode (ino=%lx, mode=%u) should not have "'
p3530
aS'\t\t\t"inline_dentry, run fsck to fix",'
p3531
aS'\t\t\t__func__, inode->i_ino, inode->i_mode);'
p3532
aS'\t\treturn false;'
p3533
aS'\t}'
p3534
ag119
as(I201
I221
tp3535
(lp3536
S'\tiblocks = le64_to_cpu(F2FS_INODE(node_page)->i_blocks);'
p3537
aS'\tif (!iblocks) {'
p3538
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3539
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3540
aS'\t\t\t"%s: corrupted inode i_blocks i_ino=%lx iblocks=%llu, "'
p3541
aS'\t\t\t"run fsck to fix.",'
p3542
aS'\t\t\t__func__, inode->i_ino, iblocks);'
p3543
aS'\t\treturn false;'
p3544
aS'\t}'
p3545
ag119
aS'\tif (ino_of_node(node_page) != nid_of_node(node_page)) {'
p3546
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3547
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3548
aS'\t\t\t"%s: corrupted inode footer i_ino=%lx, ino,nid: "'
p3549
aS'\t\t\t"[%u, %u] run fsck to fix.",'
p3550
aS'\t\t\t__func__, inode->i_ino,'
p3551
aS'\t\t\tino_of_node(node_page), nid_of_node(node_page));'
p3552
aS'\t\treturn false;'
p3553
aS'\t}'
p3554
ag119
aS'\tif (f2fs_sb_has_flexible_inline_xattr(sbi)'
p3555
as(I198
I199
tp3556
(lp3557
S'\tstruct f2fs_inode_info *fi = F2FS_I(inode);'
p3558
aS'\tunsigned long long iblocks;'
p3559
as(I195
I195
tp3560
(lp3561
S'static bool sanity_check_inode(struct inode *inode, struct page *node_page)'
p3562
assssS'a42d482efe49_sdm845-perf'
p3563
(dp3564
(g3414
g3470
I196
tp3565
(dp3566
g27
(dp3567
(I196
I196
tp3568
(lp3569
S'static bool sanity_check_inode(struct inode *inode)'
p3570
as(I202
I202
tp3571
(lp3572
S'\tif (f2fs_sb_has_flexible_inline_xattr(sbi->sb)'
p3573
assg9
(I196
I304
tp3574
sg11
I2
sg12
g13
sg14
(dp3575
(I196
I196
tp3576
(lp3577
S'static bool sanity_check_inode(struct inode *inode, struct page *node_page)'
p3578
as(I202
I222
tp3579
(lp3580
S'\tiblocks = le64_to_cpu(F2FS_INODE(node_page)->i_blocks);'
p3581
aS'\tif (!iblocks) {'
p3582
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3583
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3584
aS'\t\t\t"%s: corrupted inode i_blocks i_ino=%lx iblocks=%llu, "'
p3585
aS'\t\t\t"run fsck to fix.",'
p3586
aS'\t\t\t__func__, inode->i_ino, iblocks);'
p3587
aS'\t\treturn false;'
p3588
aS'\t}'
p3589
ag119
aS'\tif (ino_of_node(node_page) != nid_of_node(node_page)) {'
p3590
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3591
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3592
aS'\t\t\t"%s: corrupted inode footer i_ino=%lx, ino,nid: "'
p3593
aS'\t\t\t"[%u, %u] run fsck to fix.",'
p3594
aS'\t\t\t__func__, inode->i_ino,'
p3595
aS'\t\t\tino_of_node(node_page), nid_of_node(node_page));'
p3596
aS'\t\treturn false;'
p3597
aS'\t}'
p3598
ag119
aS'\tif (f2fs_sb_has_flexible_inline_xattr(sbi)'
p3599
as(I199
I200
tp3600
(lp3601
S'\tstruct f2fs_inode_info *fi = F2FS_I(inode);'
p3602
aS'\tunsigned long long iblocks;'
p3603
as(I230
I302
tp3604
(lp3605
g119
aS'\tif (f2fs_has_extra_attr(inode) &&'
p3606
aS'\t\t\t!f2fs_sb_has_extra_attr(sbi)) {'
p3607
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3608
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3609
aS'\t\t\t"%s: inode (ino=%lx) is with extra_attr, "'
p3610
aS'\t\t\t"but extra_attr feature is off",'
p3611
aS'\t\t\t__func__, inode->i_ino);'
p3612
aS'\t\treturn false;'
p3613
aS'\t}'
p3614
ag119
aS'\tif (fi->i_extra_isize > F2FS_TOTAL_EXTRA_ATTR_SIZE ||'
p3615
aS'\t\t\tfi->i_extra_isize % sizeof(__le32)) {'
p3616
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3617
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3618
aS'\t\t\t"%s: inode (ino=%lx) has corrupted i_extra_isize: %d, "'
p3619
aS'\t\t\t"max: %zu",'
p3620
aS'\t\t\t__func__, inode->i_ino, fi->i_extra_isize,'
p3621
aS'\t\t\tF2FS_TOTAL_EXTRA_ATTR_SIZE);'
p3622
aS'\t\treturn false;'
p3623
aS'\t}'
p3624
ag119
aS'\tif (f2fs_has_extra_attr(inode) &&'
p3625
aS'\t\tf2fs_sb_has_flexible_inline_xattr(sbi) &&'
p3626
aS'\t\tf2fs_has_inline_xattr(inode) &&'
p3627
aS'\t\t(!fi->i_inline_xattr_size ||'
p3628
aS'\t\tfi->i_inline_xattr_size > MAX_INLINE_XATTR_SIZE)) {'
p3629
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3630
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3631
aS'\t\t\t"%s: inode (ino=%lx) has corrupted "'
p3632
aS'\t\t\t"i_inline_xattr_size: %d, max: %zu",'
p3633
aS'\t\t\t__func__, inode->i_ino, fi->i_inline_xattr_size,'
p3634
aS'\t\t\tMAX_INLINE_XATTR_SIZE);'
p3635
aS'\t\treturn false;'
p3636
aS'\t}'
p3637
ag119
aS'\tif (F2FS_I(inode)->extent_tree) {'
p3638
aS'\t\tstruct extent_info *ei = &F2FS_I(inode)->extent_tree->largest;'
p3639
ag119
aS'\t\tif (ei->len &&'
p3640
aS'\t\t\t(!f2fs_is_valid_blkaddr(sbi, ei->blk,'
p3641
aS'\t\t\t\t\t\tDATA_GENERIC_ENHANCE) ||'
p3642
aS'\t\t\t!f2fs_is_valid_blkaddr(sbi, ei->blk + ei->len - 1,'
p3643
aS'\t\t\t\t\t\tDATA_GENERIC_ENHANCE))) {'
p3644
aS'\t\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3645
aS'\t\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3646
aS'\t\t\t\t"%s: inode (ino=%lx) extent info [%u, %u, %u] "'
p3647
aS'\t\t\t\t"is incorrect, run fsck to fix",'
p3648
aS'\t\t\t\t__func__, inode->i_ino,'
p3649
aS'\t\t\t\tei->blk, ei->fofs, ei->len);'
p3650
aS'\t\t\treturn false;'
p3651
aS'\t\t}'
p3652
aS'\t}'
p3653
ag119
aS'\tif (f2fs_has_inline_data(inode) &&'
p3654
aS'\t\t\t(!S_ISREG(inode->i_mode) && !S_ISLNK(inode->i_mode))) {'
p3655
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3656
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3657
aS'\t\t\t"%s: inode (ino=%lx, mode=%u) should not have "'
p3658
aS'\t\t\t"inline_data, run fsck to fix",'
p3659
aS'\t\t\t__func__, inode->i_ino, inode->i_mode);'
p3660
aS'\t\treturn false;'
p3661
aS'\t}'
p3662
ag119
aS'\tif (f2fs_has_inline_dentry(inode) && !S_ISDIR(inode->i_mode)) {'
p3663
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3664
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3665
aS'\t\t\t"%s: inode (ino=%lx, mode=%u) should not have "'
p3666
aS'\t\t\t"inline_dentry, run fsck to fix",'
p3667
aS'\t\t\t__func__, inode->i_ino, inode->i_mode);'
p3668
aS'\t\treturn false;'
p3669
aS'\t}'
p3670
ag119
assssS'f332617ebb03_sdm845-perf'
p3671
(dp3672
(g3414
g3470
I198
tp3673
(dp3674
g27
(dp3675
(I198
I198
tp3676
(lp3677
S'static bool sanity_check_inode(struct inode *inode)'
p3678
assg9
(I198
I291
tp3679
sg11
I2
sg12
g13
sg14
(dp3680
(I232
I289
tp3681
(lp3682
g119
aS'\tif (f2fs_has_extra_attr(inode) &&'
p3683
aS'\t\t\t!f2fs_sb_has_extra_attr(sbi->sb)) {'
p3684
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3685
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3686
aS'\t\t\t"%s: inode (ino=%lx) is with extra_attr, "'
p3687
aS'\t\t\t"but extra_attr feature is off",'
p3688
aS'\t\t\t__func__, inode->i_ino);'
p3689
aS'\t\treturn false;'
p3690
aS'\t}'
p3691
ag119
aS'\tif (fi->i_extra_isize > F2FS_TOTAL_EXTRA_ATTR_SIZE ||'
p3692
aS'\t\t\tfi->i_extra_isize % sizeof(__le32)) {'
p3693
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3694
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3695
aS'\t\t\t"%s: inode (ino=%lx) has corrupted i_extra_isize: %d, "'
p3696
aS'\t\t\t"max: %zu",'
p3697
aS'\t\t\t__func__, inode->i_ino, fi->i_extra_isize,'
p3698
aS'\t\t\tF2FS_TOTAL_EXTRA_ATTR_SIZE);'
p3699
aS'\t\treturn false;'
p3700
aS'\t}'
p3701
ag119
aS'\tif (F2FS_I(inode)->extent_tree) {'
p3702
aS'\t\tstruct extent_info *ei = &F2FS_I(inode)->extent_tree->largest;'
p3703
ag119
aS'\t\tif (ei->len &&'
p3704
aS'\t\t\t(!f2fs_is_valid_blkaddr(sbi, ei->blk, DATA_GENERIC) ||'
p3705
aS'\t\t\t!f2fs_is_valid_blkaddr(sbi, ei->blk + ei->len - 1,'
p3706
aS'\t\t\t\t\t\t\tDATA_GENERIC))) {'
p3707
aS'\t\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3708
aS'\t\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3709
aS'\t\t\t\t"%s: inode (ino=%lx) extent info [%u, %u, %u] "'
p3710
aS'\t\t\t\t"is incorrect, run fsck to fix",'
p3711
aS'\t\t\t\t__func__, inode->i_ino,'
p3712
aS'\t\t\t\tei->blk, ei->fofs, ei->len);'
p3713
aS'\t\t\treturn false;'
p3714
aS'\t\t}'
p3715
aS'\t}'
p3716
ag119
aS'\tif (f2fs_has_inline_data(inode) &&'
p3717
aS'\t\t\t(!S_ISREG(inode->i_mode) && !S_ISLNK(inode->i_mode))) {'
p3718
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3719
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3720
aS'\t\t\t"%s: inode (ino=%lx, mode=%u) should not have "'
p3721
aS'\t\t\t"inline_data, run fsck to fix",'
p3722
aS'\t\t\t__func__, inode->i_ino, inode->i_mode);'
p3723
aS'\t\treturn false;'
p3724
aS'\t}'
p3725
ag119
aS'\tif (f2fs_has_inline_dentry(inode) && !S_ISDIR(inode->i_mode)) {'
p3726
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3727
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3728
aS'\t\t\t"%s: inode (ino=%lx, mode=%u) should not have "'
p3729
aS'\t\t\t"inline_dentry, run fsck to fix",'
p3730
aS'\t\t\t__func__, inode->i_ino, inode->i_mode);'
p3731
aS'\t\treturn false;'
p3732
aS'\t}'
p3733
ag119
as(I201
I222
tp3734
(lp3735
S'\tstruct f2fs_inode_info *fi = F2FS_I(inode);'
p3736
aS'\tunsigned long long iblocks;'
p3737
ag119
aS'\tiblocks = le64_to_cpu(F2FS_INODE(node_page)->i_blocks);'
p3738
aS'\tif (!iblocks) {'
p3739
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3740
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3741
aS'\t\t\t"%s: corrupted inode i_blocks i_ino=%lx iblocks=%llu, "'
p3742
aS'\t\t\t"run fsck to fix.",'
p3743
aS'\t\t\t__func__, inode->i_ino, iblocks);'
p3744
aS'\t\treturn false;'
p3745
aS'\t}'
p3746
ag119
aS'\tif (ino_of_node(node_page) != nid_of_node(node_page)) {'
p3747
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3748
aS'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3749
aS'\t\t\t"%s: corrupted inode footer i_ino=%lx, ino,nid: "'
p3750
aS'\t\t\t"[%u, %u] run fsck to fix.",'
p3751
aS'\t\t\t__func__, inode->i_ino,'
p3752
aS'\t\t\tino_of_node(node_page), nid_of_node(node_page));'
p3753
aS'\t\treturn false;'
p3754
aS'\t}'
p3755
as(I198
I198
tp3756
(lp3757
S'static bool sanity_check_inode(struct inode *inode, struct page *node_page)'
p3758
asss(g3414
g3415
I293
tp3759
(dp3760
g27
(dp3761
(I374
I375
tp3762
(lp3763
S'\tif (__written_first_block(ri))'
p3764
aS'\t\tset_inode_flag(inode, FI_FIRST_BLOCK_WRITTEN);'
p3765
assg9
(I293
I414
tp3766
sg11
I1
sg12
g13
sg14
(dp3767
(I300
I300
tp3768
(lp3769
S'\tint err;'
p3770
as(I374
I382
tp3771
(lp3772
S'\tif (S_ISREG(inode->i_mode)) {'
p3773
aS'\t\terr = __written_first_block(sbi, ri);'
p3774
aS'\t\tif (err < 0) {'
p3775
aS'\t\t\tf2fs_put_page(node_page, 1);'
p3776
aS'\t\t\treturn err;'
p3777
aS'\t\t}'
p3778
aS'\t\tif (!err)'
p3779
aS'\t\t\tset_inode_flag(inode, FI_FIRST_BLOCK_WRITTEN);'
p3780
aS'\t}'
p3781
as(I362
I366
tp3782
(lp3783
S'\tif (!sanity_check_inode(inode, node_page)) {'
p3784
aS'\t\tf2fs_put_page(node_page, 1);'
p3785
aS'\t\treturn -EINVAL;'
p3786
aS'\t}'
p3787
ag119
assssS'c36d54c34fef_sdm845-perf'
p3788
(dp3789
(g3414
g3415
I290
tp3790
(dp3791
g27
(dp3792
(I377
I378
tp3793
(lp3794
S'\tif (__written_first_block(ri))'
p3795
aS'\t\tset_inode_flag(inode, FI_FIRST_BLOCK_WRITTEN);'
p3796
assg9
(I290
I417
tp3797
sg11
I1
sg12
g13
sg14
(dp3798
(I359
I363
tp3799
(lp3800
S'\tif (!sanity_check_inode(inode, node_page)) {'
p3801
aS'\t\tf2fs_put_page(node_page, 1);'
p3802
aS'\t\treturn -EINVAL;'
p3803
aS'\t}'
p3804
ag119
as(I368
I373
tp3805
(lp3806
S'\t/* try to recover cold bit for non-dir inode */'
p3807
aS'\tif (!S_ISDIR(inode->i_mode) && !is_cold_node(node_page)) {'
p3808
aS'\t\tset_cold_node(node_page, false);'
p3809
aS'\t\tset_page_dirty(node_page);'
p3810
aS'\t}'
p3811
ag119
as(I297
I297
tp3812
(lp3813
S'\tint err;'
p3814
as(I377
I385
tp3815
(lp3816
S'\tif (S_ISREG(inode->i_mode)) {'
p3817
aS'\t\terr = __written_first_block(sbi, ri);'
p3818
aS'\t\tif (err < 0) {'
p3819
aS'\t\t\tf2fs_put_page(node_page, 1);'
p3820
aS'\t\t\treturn err;'
p3821
aS'\t\t}'
p3822
aS'\t\tif (!err)'
p3823
aS'\t\t\tset_inode_flag(inode, FI_FIRST_BLOCK_WRITTEN);'
p3824
aS'\t}'
p3825
assssS'7bb76790999d_sdm845-perf'
p3826
(dp3827
(g3414
g3415
I288
tp3828
(dp3829
g27
(dp3830
(I377
I378
tp3831
(lp3832
S'\tif (__written_first_block(ri))'
p3833
aS'\t\tset_inode_flag(inode, FI_FIRST_BLOCK_WRITTEN);'
p3834
as(I400
I400
tp3835
(lp3836
S'\tif (f2fs_has_extra_attr(inode) && f2fs_sb_has_inode_crtime(sbi->sb) &&'
p3837
as(I343
I343
tp3838
(lp3839
S'\tif (f2fs_sb_has_flexible_inline_xattr(sbi->sb)) {'
p3840
as(I393
I393
tp3841
(lp3842
S'\tif (f2fs_has_extra_attr(inode) && f2fs_sb_has_project_quota(sbi->sb) &&'
p3843
assg9
(I288
I417
tp3844
sg11
I1
sg12
g13
sg14
(dp3845
(I400
I400
tp3846
(lp3847
S'\tif (f2fs_has_extra_attr(inode) && f2fs_sb_has_inode_crtime(sbi) &&'
p3848
as(I343
I343
tp3849
(lp3850
S'\tif (f2fs_sb_has_flexible_inline_xattr(sbi)) {'
p3851
as(I295
I295
tp3852
(lp3853
S'\tint err;'
p3854
as(I328
I329
tp3855
(lp3856
S'\tif (S_ISREG(inode->i_mode))'
p3857
aS'\t\tfi->i_flags &= ~F2FS_PROJINHERIT_FL;'
p3858
as(I368
I373
tp3859
(lp3860
S'\t/* try to recover cold bit for non-dir inode */'
p3861
aS'\tif (!S_ISDIR(inode->i_mode) && !is_cold_node(node_page)) {'
p3862
aS'\t\tset_cold_node(node_page, false);'
p3863
aS'\t\tset_page_dirty(node_page);'
p3864
aS'\t}'
p3865
ag119
as(I377
I385
tp3866
(lp3867
S'\tif (S_ISREG(inode->i_mode)) {'
p3868
aS'\t\terr = __written_first_block(sbi, ri);'
p3869
aS'\t\tif (err < 0) {'
p3870
aS'\t\t\tf2fs_put_page(node_page, 1);'
p3871
aS'\t\t\treturn err;'
p3872
aS'\t\t}'
p3873
aS'\t\tif (!err)'
p3874
aS'\t\t\tset_inode_flag(inode, FI_FIRST_BLOCK_WRITTEN);'
p3875
aS'\t}'
p3876
as(I359
I363
tp3877
(lp3878
S'\tif (!sanity_check_inode(inode, node_page)) {'
p3879
aS'\t\tf2fs_put_page(node_page, 1);'
p3880
aS'\t\treturn -EFSCORRUPTED;'
p3881
aS'\t}'
p3882
ag119
as(I393
I393
tp3883
(lp3884
S'\tif (f2fs_has_extra_attr(inode) && f2fs_sb_has_project_quota(sbi) &&'
p3885
asss(g3414
g3470
I195
tp3886
(dp3887
g27
(dp3888
(I195
I195
tp3889
(lp3890
S'static bool sanity_check_inode(struct inode *inode)'
p3891
as(I201
I201
tp3892
(lp3893
S'\tif (f2fs_sb_has_flexible_inline_xattr(sbi->sb)'
p3894
as(I220
I222
tp3895
(lp3896
S'\t\tf2fs_msg(sbi->sb, KERN_WARNING,'
p3897
aS'\t\t\t"%s: corrupted inode ino=%lx, run fsck to fix.",'
p3898
aS'\t\t\t__func__, inode->i_ino);'
p3899
assg9
(I195
I286
tp3900
sg11
I2
sg12
g13
sg14
(dp3901
(I220
I238
tp3902
(lp3903
S'\t\tf2fs_warn(sbi, "%s: corrupted inode ino=%lx, run fsck to fix.",'
p3904
aS'\t\t\t  __func__, inode->i_ino);'
p3905
aS'\t\treturn false;'
p3906
aS'\t}'
p3907
ag119
aS'\tif (f2fs_has_extra_attr(inode) &&'
p3908
aS'\t\t\t!f2fs_sb_has_extra_attr(sbi)) {'
p3909
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3910
aS'\t\tf2fs_warn(sbi, "%s: inode (ino=%lx) is with extra_attr, but extra_attr feature is off",'
p3911
aS'\t\t\t  __func__, inode->i_ino);'
p3912
aS'\t\treturn false;'
p3913
aS'\t}'
p3914
ag119
aS'\tif (fi->i_extra_isize > F2FS_TOTAL_EXTRA_ATTR_SIZE ||'
p3915
aS'\t\t\tfi->i_extra_isize % sizeof(__le32)) {'
p3916
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3917
aS'\t\tf2fs_warn(sbi, "%s: inode (ino=%lx) has corrupted i_extra_isize: %d, max: %zu",'
p3918
aS'\t\t\t  __func__, inode->i_ino, fi->i_extra_isize,'
p3919
aS'\t\t\t  F2FS_TOTAL_EXTRA_ATTR_SIZE);'
p3920
as(I198
I199
tp3921
(lp3922
S'\tstruct f2fs_inode_info *fi = F2FS_I(inode);'
p3923
aS'\tunsigned long long iblocks;'
p3924
as(I201
I217
tp3925
(lp3926
S'\tiblocks = le64_to_cpu(F2FS_INODE(node_page)->i_blocks);'
p3927
aS'\tif (!iblocks) {'
p3928
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3929
aS'\t\tf2fs_warn(sbi, "%s: corrupted inode i_blocks i_ino=%lx iblocks=%llu, run fsck to fix.",'
p3930
aS'\t\t\t  __func__, inode->i_ino, iblocks);'
p3931
aS'\t\treturn false;'
p3932
aS'\t}'
p3933
ag119
aS'\tif (ino_of_node(node_page) != nid_of_node(node_page)) {'
p3934
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3935
aS'\t\tf2fs_warn(sbi, "%s: corrupted inode footer i_ino=%lx, ino,nid: [%u, %u] run fsck to fix.",'
p3936
aS'\t\t\t  __func__, inode->i_ino,'
p3937
aS'\t\t\t  ino_of_node(node_page), nid_of_node(node_page));'
p3938
aS'\t\treturn false;'
p3939
aS'\t}'
p3940
ag119
aS'\tif (f2fs_sb_has_flexible_inline_xattr(sbi)'
p3941
as(I241
I284
tp3942
(lp3943
g119
aS'\tif (f2fs_has_extra_attr(inode) &&'
p3944
aS'\t\tf2fs_sb_has_flexible_inline_xattr(sbi) &&'
p3945
aS'\t\tf2fs_has_inline_xattr(inode) &&'
p3946
aS'\t\t(!fi->i_inline_xattr_size ||'
p3947
aS'\t\tfi->i_inline_xattr_size > MAX_INLINE_XATTR_SIZE)) {'
p3948
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3949
aS'\t\tf2fs_warn(sbi, "%s: inode (ino=%lx) has corrupted i_inline_xattr_size: %d, max: %zu",'
p3950
aS'\t\t\t  __func__, inode->i_ino, fi->i_inline_xattr_size,'
p3951
aS'\t\t\t  MAX_INLINE_XATTR_SIZE);'
p3952
aS'\t\treturn false;'
p3953
aS'\t}'
p3954
ag119
aS'\tif (F2FS_I(inode)->extent_tree) {'
p3955
aS'\t\tstruct extent_info *ei = &F2FS_I(inode)->extent_tree->largest;'
p3956
ag119
aS'\t\tif (ei->len &&'
p3957
aS'\t\t\t(!f2fs_is_valid_blkaddr(sbi, ei->blk,'
p3958
aS'\t\t\t\t\t\tDATA_GENERIC_ENHANCE) ||'
p3959
aS'\t\t\t!f2fs_is_valid_blkaddr(sbi, ei->blk + ei->len - 1,'
p3960
aS'\t\t\t\t\t\tDATA_GENERIC_ENHANCE))) {'
p3961
aS'\t\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3962
aS'\t\t\tf2fs_warn(sbi, "%s: inode (ino=%lx) extent info [%u, %u, %u] is incorrect, run fsck to fix",'
p3963
aS'\t\t\t\t  __func__, inode->i_ino,'
p3964
aS'\t\t\t\t  ei->blk, ei->fofs, ei->len);'
p3965
aS'\t\t\treturn false;'
p3966
aS'\t\t}'
p3967
aS'\t}'
p3968
ag119
aS'\tif (f2fs_has_inline_data(inode) &&'
p3969
aS'\t\t\t(!S_ISREG(inode->i_mode) && !S_ISLNK(inode->i_mode))) {'
p3970
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3971
aS'\t\tf2fs_warn(sbi, "%s: inode (ino=%lx, mode=%u) should not have inline_data, run fsck to fix",'
p3972
aS'\t\t\t  __func__, inode->i_ino, inode->i_mode);'
p3973
aS'\t\treturn false;'
p3974
aS'\t}'
p3975
ag119
aS'\tif (f2fs_has_inline_dentry(inode) && !S_ISDIR(inode->i_mode)) {'
p3976
aS'\t\tset_sbi_flag(sbi, SBI_NEED_FSCK);'
p3977
aS'\t\tf2fs_warn(sbi, "%s: inode (ino=%lx, mode=%u) should not have inline_dentry, run fsck to fix",'
p3978
aS'\t\t\t  __func__, inode->i_ino, inode->i_mode);'
p3979
aS'\t\treturn false;'
p3980
aS'\t}'
p3981
ag119
as(I195
I195
tp3982
(lp3983
S'static bool sanity_check_inode(struct inode *inode, struct page *node_page)'
p3984
asssssS'CVE-2018-11988'
p3985
(dp3986
S'7b51fca84f38_sdm845-perf'
p3987
(dp3988
(S'drivers/misc/qseecom.c'
p3989
S'qseecom_remove'
p3990
I8778
tp3991
(dp3992
g27
(dp3993
(I8795
I8799
tp3994
(lp3995
S'\t\tif (!kclient->handle)'
p3996
aS'\t\t\tgoto exit_free_kclient;'
p3997
ag119
aS'\t\tif (list_empty(&kclient->list))'
p3998
aS'\t\t\tgoto exit_free_kc_handle;'
p3999
as(I8791
I8794
tp4000
(lp4001
S'\tlist_for_each_entry(kclient, &qseecom.registered_kclient_list_head,'
p4002
aS'\t\t\t\t\t\t\t\tlist) {'
p4003
aS'\t\tif (!kclient)'
p4004
aS'\t\t\tgoto exit_irqrestore;'
p4005
as(I8812
I8816
tp4006
(lp4007
S'exit_free_kc_handle:'
p4008
aS'\tkzfree(kclient->handle);'
p4009
aS'exit_free_kclient:'
p4010
aS'\tkzfree(kclient);'
p4011
aS'exit_irqrestore:'
p4012
assg9
(I8778
I8866
tp4013
sg11
I1
sg12
g13
sg14
(dp4014
(I8795
I8799
tp4015
(lp4016
S'\t\tif (!kclient->handle) {'
p4017
aS'\t\t\tlist_del(&kclient->list);'
p4018
aS'\t\t\tkzfree(kclient);'
p4019
aS'\t\t\tbreak;'
p4020
aS'\t\t}'
p4021
as(I8791
I8792
tp4022
(lp4023
S'\tlist_for_each_entry_safe(kclient, kclient_tmp,'
p4024
aS'\t\t&qseecom.registered_kclient_list_head, list) {'
p4025
as(I8781
I8781
tp4026
(lp4027
S'\tstruct qseecom_registered_kclient_list *kclient_tmp = NULL;'
p4028
assssS'7bb76790999d_sdm845-perf'
p4029
(dp4030
(g3989
g3990
I9220
tp4031
(dp4032
g27
(dp4033
(I9237
I9241
tp4034
(lp4035
S'\t\tif (!kclient->handle)'
p4036
aS'\t\t\tgoto exit_free_kclient;'
p4037
ag119
aS'\t\tif (list_empty(&kclient->list))'
p4038
aS'\t\t\tgoto exit_free_kc_handle;'
p4039
as(I9254
I9258
tp4040
(lp4041
S'exit_free_kc_handle:'
p4042
aS'\tkzfree(kclient->handle);'
p4043
aS'exit_free_kclient:'
p4044
aS'\tkzfree(kclient);'
p4045
aS'exit_irqrestore:'
p4046
as(I9233
I9236
tp4047
(lp4048
S'\tlist_for_each_entry(kclient, &qseecom.registered_kclient_list_head,'
p4049
aS'\t\t\t\t\t\t\t\tlist) {'
p4050
aS'\t\tif (!kclient)'
p4051
aS'\t\t\tgoto exit_irqrestore;'
p4052
assg9
(I9220
I9312
tp4053
sg11
I1
sg12
g13
sg14
(dp4054
(I9233
I9234
tp4055
(lp4056
S'\tlist_for_each_entry_safe(kclient, kclient_tmp,'
p4057
aS'\t\t&qseecom.registered_kclient_list_head, list) {'
p4058
as(I9237
I9241
tp4059
(lp4060
S'\t\tif (!kclient->handle) {'
p4061
aS'\t\t\tlist_del(&kclient->list);'
p4062
aS'\t\t\tkzfree(kclient);'
p4063
aS'\t\t\tbreak;'
p4064
aS'\t\t}'
p4065
as(I9223
I9223
tp4066
(lp4067
S'\tstruct qseecom_registered_kclient_list *kclient_tmp = NULL;'
p4068
as(I9299
I9302
tp4069
(lp4070
S'\tkthread_stop(qseecom.unload_app_kthread_task);'
p4071
ag119
aS'\tkthread_stop(qseecom.unregister_lsnr_kthread_task);'
p4072
ag119
assssS'696d37fc99f8_sdm845-perf'
p4073
(dp4074
(g3989
g3990
I8778
tp4075
(dp4076
g27
(dp4077
(I8816
I8816
tp4078
(lp4079
S'exit_irqrestore:'
p4080
as(I8791
I8794
tp4081
(lp4082
S'\tlist_for_each_entry(kclient, &qseecom.registered_kclient_list_head,'
p4083
aS'\t\t\t\t\t\t\t\tlist) {'
p4084
aS'\t\tif (!kclient)'
p4085
aS'\t\t\tgoto exit_irqrestore;'
p4086
assg9
(I8778
I8871
tp4087
sg11
I1
sg12
g13
sg14
(dp4088
(I8816
I8816
tp4089
(lp4090
g119
as(I8791
I8792
tp4091
(lp4092
S'\tlist_for_each_entry_safe(kclient, kclient_tmp,'
p4093
aS'\t\t&qseecom.registered_kclient_list_head, list) {'
p4094
as(I8781
I8781
tp4095
(lp4096
S'\tstruct qseecom_registered_kclient_list *kclient_tmp = NULL;'
p4097
assssS'de6abb23dc05_sdm845-perf'
p4098
(dp4099
(g3989
g3990
I8954
tp4100
(dp4101
g27
(dp4102
(I8971
I8975
tp4103
(lp4104
S'\t\tif (!kclient->handle)'
p4105
aS'\t\t\tgoto exit_free_kclient;'
p4106
ag119
aS'\t\tif (list_empty(&kclient->list))'
p4107
aS'\t\t\tgoto exit_free_kc_handle;'
p4108
as(I8967
I8970
tp4109
(lp4110
S'\tlist_for_each_entry(kclient, &qseecom.registered_kclient_list_head,'
p4111
aS'\t\t\t\t\t\t\t\tlist) {'
p4112
aS'\t\tif (!kclient)'
p4113
aS'\t\t\tgoto exit_irqrestore;'
p4114
as(I8988
I8992
tp4115
(lp4116
S'exit_free_kc_handle:'
p4117
aS'\tkzfree(kclient->handle);'
p4118
aS'exit_free_kclient:'
p4119
aS'\tkzfree(kclient);'
p4120
aS'exit_irqrestore:'
p4121
assg9
(I8954
I9044
tp4122
sg11
I1
sg12
g13
sg14
(dp4123
(I9033
I9034
tp4124
(lp4125
S'\tkthread_stop(qseecom.unregister_lsnr_kthread_task);'
p4126
ag119
as(I8971
I8975
tp4127
(lp4128
S'\t\tif (!kclient->handle) {'
p4129
aS'\t\t\tlist_del(&kclient->list);'
p4130
aS'\t\t\tkzfree(kclient);'
p4131
aS'\t\t\tbreak;'
p4132
aS'\t\t}'
p4133
as(I8967
I8968
tp4134
(lp4135
S'\tlist_for_each_entry_safe(kclient, kclient_tmp,'
p4136
aS'\t\t&qseecom.registered_kclient_list_head, list) {'
p4137
as(I8957
I8957
tp4138
(lp4139
S'\tstruct qseecom_registered_kclient_list *kclient_tmp = NULL;'
p4140
asssssS'CVE-2018-11983'
p4141
(dp4142
S'd7461eb53ce1_sdm845-perf'
p4143
(dp4144
(S'drivers/char/diag/diag_masks.c'
p4145
S'diag_cmd_set_all_msg_mask'
p4146
I916
tp4147
(dp4148
g27
(dp4149
(I965
I969
tp4150
(lp4151
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p4152
aS'\t\tmutex_lock(&mask->lock);'
p4153
aS'\t\tmemset(mask->ptr, req->rt_mask,'
p4154
aS'\t\t       mask->range * sizeof(uint32_t));'
p4155
aS'\t\tmutex_unlock(&mask->lock);'
p4156
assg9
(I916
I1006
tp4157
sg11
I5
sg12
g13
sg14
(dp4158
(I961
I962
tp4159
(lp4160
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p4161
aS'\t\t\tdriver->msg_mask_tbl_count;'
p4162
as(I926
I926
tp4163
(lp4164
S'\tuint8_t msg_mask_tbl_count = 0;'
p4165
as(I965
I971
tp4166
(lp4167
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p4168
aS'\t\tif (mask && mask->ptr) {'
p4169
aS'\t\t\tmutex_lock(&mask->lock);'
p4170
aS'\t\t\tmemset(mask->ptr, req->rt_mask,'
p4171
aS'\t\t\t       mask->range * sizeof(uint32_t));'
p4172
aS'\t\t\tmutex_unlock(&mask->lock);'
p4173
aS'\t\t}'
p4174
assssS'c2cff6971db3_sdm845-perf'
p4175
(dp4176
(S'drivers/char/diag/diagfwd_cntl.c'
p4177
S'process_ssid_range_report'
p4178
I629
tp4179
(dp4180
g9
(I629
I717
tp4181
sg11
I3
sg12
g13
sg14
(dp4182
(I693
I694
tp4183
(lp4184
S'\t\tDIAG_LOG(DIAG_DEBUG_MASKS,'
p4185
aS'\t\t\t"diag: receiving msg mask size more that Apps can handle\\n");'
p4186
as(I703
I703
tp4187
(lp4188
S'\t\tmask_ptr = (struct diag_msg_mask_t *)msg_mask.ptr;'
p4189
as(I671
I674
tp4190
(lp4191
S'\t\t\tif (!mask_ptr->ptr || !ssid_range) {'
p4192
aS'\t\t\t\tfound = 1;'
p4193
aS'\t\t\t\tbreak;'
p4194
aS'\t\t\t}'
p4195
asss(g4177
S'diag_build_time_mask_update'
p4196
I719
tp4197
(dp4198
g27
(dp4199
(I764
I764
tp4200
(lp4201
S'\t\tfor (j = 0; j < build_mask->range; j++, mask_ptr++, dest_ptr++)'
p4202
assg9
(I719
I797
tp4203
sg11
I2
sg12
g13
sg14
(dp4204
(I764
I765
tp4205
(lp4206
S'\t\tfor (j = 0; (j < build_mask->range) && mask_ptr && dest_ptr;'
p4207
aS'\t\t\tj++, mask_ptr++, dest_ptr++)'
p4208
as(I776
I778
tp4209
(lp4210
S'\tDIAG_LOG(DIAG_DEBUG_MASKS,'
p4211
aS'\t\t"diag: receiving build time mask size more that Apps can handle\\n");'
p4212
ag119
as(I750
I753
tp4213
(lp4214
S'\t\tif (!build_mask->ptr) {'
p4215
aS'\t\t\tfound = 1;'
p4216
aS'\t\t\tbreak;'
p4217
aS'\t\t}'
p4218
as(I773
I773
tp4219
(lp4220
g119
as(I786
I786
tp4221
(lp4222
S'\tbuild_mask = (struct diag_msg_mask_t *)driver->build_time_mask->ptr;'
p4223
assssS'a77c16d4981b_sdm845-perf'
p4224
(dp4225
(g4145
S'diag_cmd_set_log_mask'
p4226
I1328
tp4227
(dp4228
g27
(dp4229
(I1349
I1350
tp4230
(lp4231
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p4232
aS'\t    !mask_info) {'
p4233
as(I1424
I1424
tp4234
(lp4235
S'\t\tif (mask_size > 0)'
p4236
assg9
(I1328
I1479
tp4237
sg11
I5
sg12
g13
sg14
(dp4238
(I1349
I1350
tp4239
(lp4240
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p4241
aS'\t\tsrc_len < sizeof(struct diag_log_config_req_t)) {'
p4242
as(I1424
I1424
tp4243
(lp4244
S'\t\tif (mask_size > 0 && src_len >= read_len + mask_size)'
p4245
as(I1387
I1388
tp4246
(lp4247
S'\t\tif (!mask || !mask->ptr)'
p4248
aS'\t\t\tcontinue;'
p4249
asss(g4145
g4146
I919
tp4250
(dp4251
g27
(dp4252
(I935
I936
tp4253
(lp4254
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p4255
aS'\t    !mask_info) {'
p4256
as(I968
I972
tp4257
(lp4258
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p4259
aS'\t\tmutex_lock(&mask->lock);'
p4260
aS'\t\tmemset(mask->ptr, req->rt_mask,'
p4261
aS'\t\t       mask->range * sizeof(uint32_t));'
p4262
aS'\t\tmutex_unlock(&mask->lock);'
p4263
assg9
(I919
I1009
tp4264
sg11
I5
sg12
g13
sg14
(dp4265
(I964
I965
tp4266
(lp4267
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p4268
aS'\t\t\tdriver->msg_mask_tbl_count;'
p4269
as(I968
I974
tp4270
(lp4271
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p4272
aS'\t\tif (mask && mask->ptr) {'
p4273
aS'\t\t\tmutex_lock(&mask->lock);'
p4274
aS'\t\t\tmemset(mask->ptr, req->rt_mask,'
p4275
aS'\t\t\t       mask->range * sizeof(uint32_t));'
p4276
aS'\t\t\tmutex_unlock(&mask->lock);'
p4277
aS'\t\t}'
p4278
as(I935
I936
tp4279
(lp4280
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p4281
aS'\t\t(src_len < sizeof(struct diag_msg_config_rsp_t))) {'
p4282
as(I929
I929
tp4283
(lp4284
S'\tuint8_t msg_mask_tbl_count = 0;'
p4285
assssS'd21da4213c13_sdm845-perf'
p4286
(dp4287
(g4145
S'diag_cmd_disable_log_mask'
p4288
I1436
tp4289
(dp4290
g27
(dp4291
(I1471
I1473
tp4292
(lp4293
S'\t\tmutex_lock(&mask->lock);'
p4294
aS'\t\tmemset(mask->ptr, 0, mask->range);'
p4295
aS'\t\tmutex_unlock(&mask->lock);'
p4296
assg9
(I1436
I1509
tp4297
sg11
I5
sg12
g13
sg14
(dp4298
(I1471
I1475
tp4299
(lp4300
S'\t\tif (mask && mask->ptr) {'
p4301
aS'\t\t\tmutex_lock(&mask->lock);'
p4302
aS'\t\t\tmemset(mask->ptr, 0, mask->range);'
p4303
aS'\t\t\tmutex_unlock(&mask->lock);'
p4304
aS'\t\t}'
p4305
asss(g4177
g4178
I629
tp4306
(dp4307
g9
(I629
I717
tp4308
sg11
I3
sg12
g13
sg14
(dp4309
(I693
I694
tp4310
(lp4311
S'\t\tDIAG_LOG(DIAG_DEBUG_MASKS,'
p4312
aS'\t\t\t"diag: receiving msg mask size more that Apps can handle\\n");'
p4313
as(I703
I703
tp4314
(lp4315
S'\t\tmask_ptr = (struct diag_msg_mask_t *)msg_mask.ptr;'
p4316
as(I671
I674
tp4317
(lp4318
S'\t\t\tif (!mask_ptr || !ssid_range) {'
p4319
aS'\t\t\t\tfound = 1;'
p4320
aS'\t\t\t\tbreak;'
p4321
aS'\t\t\t}'
p4322
asss(g4145
g4146
I878
tp4323
(dp4324
g27
(dp4325
(I925
I928
tp4326
(lp4327
S'\t\tmutex_lock(&mask->lock);'
p4328
aS'\t\tmemset(mask->ptr, req->rt_mask,'
p4329
aS'\t\t       mask->range * sizeof(uint32_t));'
p4330
aS'\t\tmutex_unlock(&mask->lock);'
p4331
assg9
(I878
I965
tp4332
sg11
I5
sg12
g13
sg14
(dp4333
(I925
I930
tp4334
(lp4335
S'\t\tif (mask && mask->ptr) {'
p4336
aS'\t\t\tmutex_lock(&mask->lock);'
p4337
aS'\t\t\tmemset(mask->ptr, req->rt_mask,'
p4338
aS'\t\t\t       mask->range * sizeof(uint32_t));'
p4339
aS'\t\t\tmutex_unlock(&mask->lock);'
p4340
aS'\t\t}'
p4341
asss(g4145
g4226
I1283
tp4342
(dp4343
g9
(I1283
I1434
tp4344
sg11
I5
sg12
g13
sg14
(dp4345
(I1342
I1343
tp4346
(lp4347
S'\t\tif (!mask || !mask->ptr)'
p4348
aS'\t\t\tcontinue;'
p4349
asss(g4177
g4196
I719
tp4350
(dp4351
g27
(dp4352
(I764
I764
tp4353
(lp4354
S'\t\tfor (j = 0; j < build_mask->range; j++, mask_ptr++, dest_ptr++)'
p4355
assg9
(I719
I797
tp4356
sg11
I2
sg12
g13
sg14
(dp4357
(I764
I765
tp4358
(lp4359
S'\t\tfor (j = 0; (j < build_mask->range) && mask_ptr && dest_ptr;'
p4360
aS'\t\t\tj++, mask_ptr++, dest_ptr++)'
p4361
as(I776
I778
tp4362
(lp4363
S'\tDIAG_LOG(DIAG_DEBUG_MASKS,'
p4364
aS'\t\t"diag: receiving build time mask size more that Apps can handle\\n");'
p4365
ag119
as(I750
I753
tp4366
(lp4367
S'\t\tif (!build_mask) {'
p4368
aS'\t\t\tfound = 1;'
p4369
aS'\t\t\tbreak;'
p4370
aS'\t\t}'
p4371
as(I773
I773
tp4372
(lp4373
g119
as(I786
I786
tp4374
(lp4375
S'\tbuild_mask = (struct diag_msg_mask_t *)driver->build_time_mask->ptr;'
p4376
asss(g4177
S'process_last_event_report'
p4377
I507
tp4378
(dp4379
g27
(dp4380
(I531
I533
tp4381
(lp4382
S'\t\tDIAG_LOG(DIAG_DEBUG_CONTROL,'
p4383
aS'\t\t\t"diag: In %s, receiving event mask size more that Apps can handle\\n",'
p4384
aS'\t\t\t __func__);'
p4385
assg9
(I507
I552
tp4386
sg11
I3
sg12
g13
sg14
(dp4387
(I531
I532
tp4388
(lp4389
S'\t\tDIAG_LOG(DIAG_DEBUG_MASKS,'
p4390
aS'\t\t"diag: receiving event mask size more that Apps can handle\\n");'
p4391
asssssS'CVE-2018-11987'
p4392
(dp4393
S'f81979164388_sdm845-perf'
p4394
(dp4395
(S'drivers/staging/android/ion/ion_system_heap.c'
p4396
S'ion_system_heap_destroy_pools'
p4397
I755
tp4398
(dp4399
g27
(dp4400
(I759
I759
tp4401
(lp4402
S'\t\tif (pools[i])'
p4403
assg9
(I755
I763
tp4404
sg11
I1
sg12
g13
sg14
(dp4405
(I761
I762
tp4406
(lp4407
S'\t\t\tpools[i] = NULL;'
p4408
aS'\t\t}'
p4409
as(I759
I759
tp4410
(lp4411
S'\t\tif (pools[i]) {'
p4412
asssssS'CVE-2018-11984'
p4413
(dp4414
S'7b51fca84f38_sdm845-perf'
p4415
(dp4416
(S'drivers/char/diag/diag_masks.c'
p4417
S'diag_send_event_mask_update'
p4418
I223
tp4419
(dp4420
g27
(dp4421
(I304
I304
tp4422
(lp4423
S'\t\tmemcpy(buf + sizeof(header), mask_info->ptr, num_bytes);'
p4424
assg9
(I223
I328
tp4425
sg11
I1
sg12
g13
sg14
(dp4426
(I304
I310
tp4427
(lp4428
S'\t\tif (num_bytes > 0 && num_bytes < mask_info->mask_len)'
p4429
aS'\t\t\tmemcpy(buf + sizeof(header), mask_info->ptr, num_bytes);'
p4430
aS'\t\telse {'
p4431
aS'\t\t\tpr_err("diag: num_bytes(%d) is not satisfying length condition\\n",'
p4432
aS'\t\t\t\tnum_bytes);'
p4433
aS'\t\t\tgoto err;'
p4434
aS'\t\t}'
p4435
as(I301
I301
tp4436
(lp4437
S'\t\t\t\tbuf = temp;'
p4438
asss(g4417
S'diag_send_msg_mask_update'
p4439
I330
tp4440
(dp4441
g9
(I330
I460
tp4442
sg11
I3
sg12
g13
sg14
(dp4443
(I426
I426
tp4444
(lp4445
S'\t\t\t\tbuf = temp;'
p4446
asss(g4417
S'diag_send_log_mask_update'
p4447
I98
tp4448
(dp4449
g27
(dp4450
(I202
I202
tp4451
(lp4452
S'\t\tif (mask_size > 0)'
p4453
assg9
(I98
I221
tp4454
sg11
I2
sg12
g13
sg14
(dp4455
(I202
I202
tp4456
(lp4457
S'\t\tif (mask_size > 0 && mask_size <= LOG_MASK_SIZE)'
p4458
as(I198
I198
tp4459
(lp4460
S'\t\t\tbuf = temp;'
p4461
assssS'd7461eb53ce1_sdm845-perf'
p4462
(dp4463
(g4417
g4439
I333
tp4464
(dp4465
g27
(dp4466
(I392
I392
tp4467
(lp4468
S'\tmsg_mask_tbl_count_local = driver->msg_mask_tbl_count;'
p4469
as(I339
I339
tp4470
(lp4471
S'\tuint8_t msg_mask_tbl_count_local;'
p4472
as(I369
I369
tp4473
(lp4474
S'\t\t\tif (upd && driver->md_session_map[upd])'
p4475
as(I361
I361
tp4476
(lp4477
S'\t\t\tif (driver->md_session_map[peripheral])'
p4478
assg9
(I333
I474
tp4479
sg11
I3
sg12
g13
sg14
(dp4480
(I339
I339
tp4481
(lp4482
S'\tuint8_t msg_mask_tbl_count_local = 0;'
p4483
as(I372
I373
tp4484
(lp4485
S'\t\t\t\tmd_session_info = driver->md_session_map[upd];'
p4486
aS'\t\t\t}'
p4487
as(I392
I395
tp4488
(lp4489
S'\tif (md_session_info)'
p4490
aS'\t\tmsg_mask_tbl_count_local = md_session_info->msg_mask_tbl_count;'
p4491
aS'\telse'
p4492
aS'\t\tmsg_mask_tbl_count_local = driver->msg_mask_tbl_count;'
p4493
as(I361
I361
tp4494
(lp4495
S'\t\t\tif (driver->md_session_map[peripheral]) {'
p4496
as(I345
I345
tp4497
(lp4498
S'\tstruct diag_md_session_t *md_session_info = NULL;'
p4499
as(I440
I440
tp4500
(lp4501
S'\t\t\t\tbuf = temp;'
p4502
as(I414
I415
tp4503
(lp4504
S'\t\tif (!mask->ptr)'
p4505
aS'\t\t\tcontinue;'
p4506
as(I369
I369
tp4507
(lp4508
S'\t\t\tif (upd && driver->md_session_map[upd]) {'
p4509
as(I364
I366
tp4510
(lp4511
S'\t\t\t\tmd_session_info ='
p4512
aS'\t\t\t\t\tdriver->md_session_map[peripheral];'
p4513
aS'\t\t\t}'
p4514
assssS'c2cff6971db3_sdm845-perf'
p4515
(dp4516
(g4417
g4439
I333
tp4517
(dp4518
g9
(I333
I465
tp4519
sg11
I3
sg12
g13
sg14
(dp4520
(I405
I406
tp4521
(lp4522
S'\t\tif (!mask->ptr)'
p4523
aS'\t\t\tcontinue;'
p4524
as(I431
I431
tp4525
(lp4526
S'\t\t\t\tbuf = temp;'
p4527
asss(g4417
g4447
I98
tp4528
(dp4529
g27
(dp4530
(I205
I205
tp4531
(lp4532
S'\t\tif (mask_size > 0)'
p4533
assg9
(I98
I224
tp4534
sg11
I2
sg12
g13
sg14
(dp4535
(I201
I201
tp4536
(lp4537
S'\t\t\tbuf = temp;'
p4538
as(I172
I174
tp4539
(lp4540
S'\t\tif (!mask->ptr)'
p4541
aS'\t\t\tcontinue;'
p4542
ag119
as(I205
I205
tp4543
(lp4544
S'\t\tif (mask_size > 0 && mask_size <= LOG_MASK_SIZE)'
p4545
asssssS'CVE-2019-10571'
p4546
(dp4547
S'da65e2d8778e_sdm845-perf'
p4548
(dp4549
(S'drivers/gpu/msm/adreno_snapshot.c'
p4550
S'kgsl_snapshot_push_object'
p4551
I54
tp4552
(dp4553
g9
(I54
I117
tp4554
sg11
I3
sg12
g13
sg14
(dp4555
(I73
I85
tp4556
(lp4557
S'\t\t\t/*'
p4558
aS'\t\t\t * Check if newly requested size is within the'
p4559
aS'\t\t\t * allocated range or not, otherwise continue'
p4560
aS'\t\t\t * with previous size.'
p4561
aS'\t\t\t */'
p4562
aS'\t\t\tif (!kgsl_gpuaddr_in_memdesc('
p4563
aS'\t\t\t\t&objbuf[index].entry->memdesc,'
p4564
aS'\t\t\t\tgpuaddr, dwords << 2)) {'
p4565
aS'\t\t\t\tKGSL_CORE_ERR('
p4566
aS'\t\t\t\t\t"snapshot: IB 0x%016llx size is not within the memdesc range\\n",'
p4567
aS'\t\t\t\t\tgpuaddr);'
p4568
aS'\t\t\t\treturn;'
p4569
aS'\t\t\t}'
p4570
asssssS'CVE-2019-10572'
p4571
(dp4572
S'da65e2d8778e_sdm845-perf'
p4573
(dp4574
(S'drivers/media/platform/msm/vidc/hfi_response_handler.c'
p4575
S'hfi_parse_init_done_properties'
p4576
I990
tp4577
(dp4578
g27
(dp4579
(I1216
I1217
tp4580
(lp4581
S'\t\trem_bytes -= next_offset;'
p4582
aS'\t\tdata_ptr += next_offset;'
p4583
as(I1043
I1047
tp4584
(lp4585
S'\t\t\tif ((rem_bytes - next_offset) < prop->num_capabilities *'
p4586
aS'\t\t\t\tsizeof(struct hfi_capability_supported)) {'
p4587
aS'\t\t\t\tstatus = VIDC_ERR_BAD_PARAM;'
p4588
aS'\t\t\t\tbreak;'
p4589
aS'\t\t\t}'
p4590
as(I1071
I1074
tp4591
(lp4592
S'\t\t\tif ((rem_bytes - next_offset) < sizeof(*prop)) {'
p4593
aS'\t\t\t\tstatus = VIDC_ERR_BAD_PARAM;'
p4594
aS'\t\t\t\tbreak;'
p4595
aS'\t\t\t}'
p4596
as(I1085
I1089
tp4597
(lp4598
S'\t\t\t\tif ((rem_bytes - next_offset) <'
p4599
aS'\t\t\t\t\t\tsizeof(*plane_info)) {'
p4600
aS'\t\t\t\t\tstatus = VIDC_ERR_BAD_PARAM;'
p4601
aS'\t\t\t\t\tbreak;'
p4602
aS'\t\t\t\t}'
p4603
assg9
(I990
I1226
tp4604
sg11
I5
sg12
g13
sg14
(dp4605
(I999
I1013
tp4606
(lp4607
S'#define VALIDATE_PROPERTY_STRUCTURE_SIZE(pkt_size, property_size) ({\\'
p4608
aS'\t\tif (pkt_size < property_size) { \\'
p4609
aS'\t\t\tstatus = VIDC_ERR_BAD_PARAM; \\'
p4610
aS'\t\t\tbreak; \\'
p4611
aS'\t\t} \\'
p4612
aS'})'
p4613
ag119
aS'#define VALIDATE_PROPERTY_PAYLOAD_SIZE(pkt_size, payload_size, \\'
p4614
aS'\t\tproperty_count) ({\\'
p4615
aS'\t\tif (pkt_size/payload_size < property_count) { \\'
p4616
aS'\t\t\tstatus = VIDC_ERR_BAD_PARAM; \\'
p4617
aS'\t\t\tbreak; \\'
p4618
aS'\t\t} \\'
p4619
aS'})'
p4620
ag119
as(I1190
I1192
tp4621
(lp4622
S'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4623
aS'\t\t\t\t\tnext_offset,'
p4624
aS'\t\t\t\t\tsizeof(struct hfi_intra_refresh));'
p4625
as(I1096
I1099
tp4626
(lp4627
S'\t\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4628
aS'\t\t\t\t\t\tnext_offset,'
p4629
aS'\t\t\t\t\t\tbytes_to_skip);'
p4630
ag119
as(I1181
I1183
tp4631
(lp4632
S'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4633
aS'\t\t\t\t\tnext_offset,'
p4634
aS'\t\t\t\t\tsizeof(u32));'
p4635
as(I1071
I1074
tp4636
(lp4637
S'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4638
aS'\t\t\t\t\tnext_offset,'
p4639
aS'\t\t\t\t\tsizeof(*prop));'
p4640
ag119
as(I1085
I1088
tp4641
(lp4642
S'\t\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4643
aS'\t\t\t\t\t\tnext_offset,'
p4644
aS'\t\t\t\t\t\tsizeof(*plane_info));'
p4645
ag119
as(I1200
I1202
tp4646
(lp4647
S'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4648
aS'\t\t\t\t\tnext_offset,'
p4649
aS'\t\t\t\t\tsizeof(u32));'
p4650
as(I1216
I1222
tp4651
(lp4652
g119
aS'\t\tif (rem_bytes > next_offset) {'
p4653
aS'\t\t\trem_bytes -= next_offset;'
p4654
aS'\t\t\tdata_ptr += next_offset;'
p4655
aS'\t\t} else {'
p4656
aS'\t\t\trem_bytes = 0;'
p4657
aS'\t\t}'
p4658
as(I1132
I1140
tp4659
(lp4660
S'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4661
aS'\t\t\t\t\tnext_offset,'
p4662
aS'\t\t\t\t\tsizeof(*prop));'
p4663
aS'\t\t\tVALIDATE_PROPERTY_PAYLOAD_SIZE(rem_bytes -'
p4664
aS'\t\t\t\t\tnext_offset -'
p4665
aS'\t\t\t\t\tsizeof(u32),'
p4666
aS'\t\t\t\t\tsizeof(struct hfi_profile_level),'
p4667
aS'\t\t\t\t\tprop->profile_count);'
p4668
ag119
as(I1165
I1168
tp4669
(lp4670
S'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4671
aS'\t\t\t\t\tnext_offset,'
p4672
aS'\t\t\t\t\tsizeof(*prop));'
p4673
ag119
as(I1027
I1030
tp4674
(lp4675
S'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4676
aS'\t\t\t\t\tnext_offset,'
p4677
aS'\t\t\t\t\tsizeof(*prop));'
p4678
ag119
as(I1112
I1120
tp4679
(lp4680
g119
aS'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4681
aS'\t\t\t\t\tnext_offset,'
p4682
aS'\t\t\t\t\tsizeof(*prop));'
p4683
aS'\t\t\tVALIDATE_PROPERTY_PAYLOAD_SIZE(rem_bytes -'
p4684
aS'\t\t\t\t\tnext_offset - sizeof(*prop) +'
p4685
aS'\t\t\t\t\tsizeof(u32), sizeof(u32),'
p4686
aS'\t\t\t\t\tprop->num_properties);'
p4687
ag119
as(I1043
I1050
tp4688
(lp4689
S'\t\t\tVALIDATE_PROPERTY_STRUCTURE_SIZE(rem_bytes -'
p4690
aS'\t\t\t\t\tnext_offset,'
p4691
aS'\t\t\t\t\tsizeof(*prop));'
p4692
aS'\t\t\tVALIDATE_PROPERTY_PAYLOAD_SIZE(rem_bytes -'
p4693
aS'\t\t\t\t\tnext_offset - sizeof(u32),'
p4694
aS'\t\t\t\t\tsizeof(struct hfi_capability_supported),'
p4695
aS'\t\t\t\t\tprop->num_capabilities);'
p4696
ag119
asssssS'CVE-2019-2314'
p4697
(dp4698
S'1f01db5a42cc_sdm845-perf'
p4699
(dp4700
(S'drivers/gpu/drm/msm/dp/dp_debug.c'
p4701
S'dp_debug_write_dpcd'
p4702
I174
tp4703
(dp4704
g9
(I174
I261
tp4705
sg11
I4
sg12
g13
sg14
(dp4706
(I189
I190
tp4707
(lp4708
S'\tmutex_lock(&debug->lock);'
p4709
ag119
as(I225
I226
tp4710
(lp4711
S'\tif (size == 0)'
p4712
aS'\t\tgoto bail;'
p4713
as(I195
I196
tp4714
(lp4715
S'\tif (size < 4)'
p4716
aS'\t\tgoto bail;'
p4717
as(I259
I259
tp4718
(lp4719
S'\tmutex_unlock(&debug->lock);'
p4720
assssS'70f432282130_sdm845-perf'
p4721
(dp4722
(g4701
S'dp_debug_write_edid'
p4723
I89
tp4724
(dp4725
g27
(dp4726
(I125
I126
tp4727
(lp4728
S'\t\tpr_debug("clearing debug edid\\n");'
p4729
aS'\t\tgoto bail;'
p4730
assg9
(I89
I172
tp4731
sg11
I4
sg12
g13
sg14
(dp4732
(I125
I142
tp4733
(lp4734
S'\t\tpr_debug("realloc debug edid\\n");'
p4735
ag119
aS'\t\tif (debug->edid) {'
p4736
aS'\t\t\tdevm_kfree(debug->dev, debug->edid);'
p4737
ag119
aS'\t\t\tdebug->edid = devm_kzalloc(debug->dev,'
p4738
aS'\t\t\t\t\t\tedid_size, GFP_KERNEL);'
p4739
aS'\t\t\tif (!debug->edid) {'
p4740
aS'\t\t\t\trc = -ENOMEM;'
p4741
aS'\t\t\t\tgoto bail;'
p4742
aS'\t\t\t}'
p4743
ag119
aS'\t\t\tdebug->edid_size = edid_size;'
p4744
ag119
aS'\t\t\tdebug->aux->set_sim_mode(debug->aux,'
p4745
aS'\t\t\t\t\tdebug->dp_debug.sim_mode,'
p4746
aS'\t\t\t\t\tdebug->edid, debug->dpcd);'
p4747
aS'\t\t}'
p4748
as(I102
I103
tp4749
(lp4750
S'\tmutex_lock(&debug->lock);'
p4751
ag119
as(I170
I170
tp4752
(lp4753
S'\tmutex_unlock(&debug->lock);'
p4754
assssS'19a8101c2309_sdm845-perf'
p4755
(dp4756
(g4701
S'dp_debug_write_sim'
p4757
I869
tp4758
(dp4759
g9
(I869
I924
tp4760
sg11
I4
sg12
g13
sg14
(dp4761
(I922
I922
tp4762
(lp4763
S'\tmutex_unlock(&debug->lock);'
p4764
as(I883
I884
tp4765
(lp4766
S'\tmutex_lock(&debug->lock);'
p4767
ag119
as(I918
I918
tp4768
(lp4769
S'\tmutex_unlock(&debug->lock);'
p4770
asss(g4701
S'dp_debug_put'
p4771
I1313
tp4772
(dp4773
g9
(I1313
I1333
tp4774
sg11
I1
sg12
g13
sg14
(dp4775
(I1324
I1325
tp4776
(lp4777
S'\tmutex_destroy(&debug->lock);'
p4778
ag119
asss(g4701
g4702
I158
tp4779
(dp4780
g9
(I158
I241
tp4781
sg11
I4
sg12
g13
sg14
(dp4782
(I173
I174
tp4783
(lp4784
S'\tmutex_lock(&debug->lock);'
p4785
ag119
as(I239
I239
tp4786
(lp4787
S'\tmutex_unlock(&debug->lock);'
p4788
asss(g4701
g4723
I89
tp4789
(dp4790
g9
(I89
I156
tp4791
sg11
I4
sg12
g13
sg14
(dp4792
(I102
I103
tp4793
(lp4794
S'\tmutex_lock(&debug->lock);'
p4795
ag119
as(I154
I154
tp4796
(lp4797
S'\tmutex_unlock(&debug->lock);'
p4798
asss(g4701
S'dp_debug_get'
p4799
I1249
tp4800
(dp4801
g9
(I1249
I1297
tp4802
sg11
I7
sg12
g13
sg14
(dp4803
(I1286
I1287
tp4804
(lp4805
S'\tmutex_init(&debug->lock);'
p4806
ag119
asssssS'CVE-2019-15666'
p4807
(dp4808
S'a42d482efe49_sdm845-perf'
p4809
(dp4810
(S'net/xfrm/xfrm_user.c'
p4811
S'verify_newpolicy_info'
p4812
I1352
tp4813
(dp4814
g27
(dp4815
(I1400
I1400
tp4816
(lp4817
S'\tif (p->index && ((p->index & XFRM_POLICY_MAX) != p->dir))'
p4818
assg9
(I1352
I1404
tp4819
sg11
I1
sg12
g13
sg14
(dp4820
(I1400
I1400
tp4821
(lp4822
S'\tif (p->index && (xfrm_policy_id2dir(p->index) != p->dir))'
p4823
asssssS'CVE-2019-15214'
p4824
(dp4825
S'a42d482efe49_sdm845-perf'
p4826
(dp4827
(S'sound/core/init.c'
p4828
S'snd_card_disconnect'
p4829
I440
tp4830
(dp4831
g27
(dp4832
(I455
I462
tp4833
(lp4834
S'\t/* phase 1: disable fops (user space) operations for ALSA API */'
p4835
aS'\tmutex_lock(&snd_card_mutex);'
p4836
aS'\tsnd_cards[card->number] = NULL;'
p4837
aS'\tclear_bit(card->number, snd_cards_lock);'
p4838
aS'\tmutex_unlock(&snd_card_mutex);'
p4839
aS'\t'
p4840
aS'\t/* phase 2: replace file->f_op with special dummy operations */'
p4841
ag4840
as(I471
I471
tp4842
(lp4843
S'\t/* phase 3: notify all connected devices about disconnection */'
p4844
assg9
(I440
I498
tp4845
sg11
I1
sg12
g13
sg14
(dp4846
(I487
I493
tp4847
(lp4848
g119
aS'\t/* disable fops (user space) operations for ALSA API */'
p4849
aS'\tmutex_lock(&snd_card_mutex);'
p4850
aS'\tsnd_cards[card->number] = NULL;'
p4851
aS'\tclear_bit(card->number, snd_cards_lock);'
p4852
aS'\tmutex_unlock(&snd_card_mutex);'
p4853
ag119
as(I455
I455
tp4854
(lp4855
S'\t/* replace file->f_op with special dummy operations */'
p4856
as(I471
I471
tp4857
(lp4858
S'\t/* notify all connected devices about disconnection */'
p4859
asssssS'CVE-2018-3574'
p4860
(dp4861
S'1fb9158725c8_sdm845-perf'
p4862
(dp4863
(S'drivers/staging/android/ion/msm/msm_ion.c'
p4864
S'msm_ion_custom_ioctl'
p4865
I785
tp4866
(dp4867
g27
(dp4868
(I825
I826
tp4869
(lp4870
S'\t\t\thandle = ion_import_dma_buf_fd(client,'
p4871
aS'\t\t\t\t\t\t       data.flush_data.fd);'
p4872
as(I816
I816
tp4873
(lp4874
S'\t\t\thandle = ion_handle_get_by_id('
p4875
as(I853
I853
tp4876
(lp4877
S'\t\tion_free(client, handle);'
p4878
as(I837
I839
tp4879
(lp4880
S'\t\tstart = (unsigned long)data.flush_data.vaddr;'
p4881
aS'\t\tend = (unsigned long)data.flush_data.vaddr'
p4882
aS'\t\t\t+ data.flush_data.length;'
p4883
assg9
(I785
I908
tp4884
sg11
I3
sg12
g13
sg14
(dp4885
(I816
I816
tp4886
(lp4887
S'\t\t\thandle = ion_handle_get_by_id_nolock('
p4888
as(I821
I821
tp4889
(lp4890
S'\t\t\t\tunlock_client(client);'
p4891
as(I837
I839
tp4892
(lp4893
S'\t\tstart = (unsigned long)data.flush_data.vaddr +'
p4894
aS'\t\t\tdata.flush_data.offset;'
p4895
aS'\t\tend = start + data.flush_data.length;'
p4896
as(I855
I855
tp4897
(lp4898
S'\t\tunlock_client(client);'
p4899
as(I825
I826
tp4900
(lp4901
S'\t\t\thandle = ion_import_dma_buf_fd_nolock(client,'
p4902
aS'\t\t\t\t\t\t\t   data.flush_data.fd);'
p4903
as(I865
I873
tp4904
(lp4905
S'\t\t\t\t     (enum ion_heap_type)'
p4906
aS'\t\t\t\t     ION_HEAP_TYPE_SECURE_DMA,'
p4907
aS'\t\t\t\t     (void *)data.prefetch_data.len,'
p4908
aS'\t\t\t\t     ion_secure_cma_prefetch);'
p4909
aS'\t\tif (ret)'
p4910
aS'\t\t\treturn ret;'
p4911
ag119
aS'\t\tret = ion_walk_heaps(client, data.prefetch_data.heap_id,'
p4912
aS'\t\t\t\t     (enum ion_heap_type)'
p4913
as(I830
I830
tp4914
(lp4915
S'\t\t\t\tunlock_client(client);'
p4916
as(I814
I814
tp4917
(lp4918
S'\t\tlock_client(client);'
p4919
as(I894
I894
tp4920
(lp4921
S'\t\t\t\t     (enum ion_heap_type)'
p4922
as(I884
I891
tp4923
(lp4924
S'\t\tret = ion_walk_heaps(client, data.prefetch_data.heap_id,'
p4925
aS'\t\t\t\t     (enum ion_heap_type)'
p4926
aS'\t\t\t\t     ION_HEAP_TYPE_SECURE_DMA,'
p4927
aS'\t\t\t\t     (void *)data.prefetch_data.len,'
p4928
aS'\t\t\t\t     ion_secure_cma_drain_pool);'
p4929
ag119
aS'\t\tif (ret)'
p4930
aS'\t\t\treturn ret;'
p4931
as(I853
I853
tp4932
(lp4933
S'\t\tion_free_nolock(client, handle);'
p4934
assssS'f332617ebb03_sdm845-perf'
p4935
(dp4936
(g4864
g4865
I785
tp4937
(dp4938
g27
(dp4939
(I825
I826
tp4940
(lp4941
S'\t\t\thandle = ion_import_dma_buf_fd(client,'
p4942
aS'\t\t\t\t\t\t       data.flush_data.fd);'
p4943
as(I816
I816
tp4944
(lp4945
S'\t\t\thandle = ion_handle_get_by_id('
p4946
as(I853
I853
tp4947
(lp4948
S'\t\tion_free(client, handle);'
p4949
as(I837
I839
tp4950
(lp4951
S'\t\tstart = (unsigned long)data.flush_data.vaddr;'
p4952
aS'\t\tend = (unsigned long)data.flush_data.vaddr'
p4953
aS'\t\t\t+ data.flush_data.length;'
p4954
assg9
(I785
I904
tp4955
sg11
I3
sg12
g13
sg14
(dp4956
(I830
I830
tp4957
(lp4958
S'\t\t\t\tunlock_client(client);'
p4959
as(I816
I816
tp4960
(lp4961
S'\t\t\thandle = ion_handle_get_by_id_nolock('
p4962
as(I821
I821
tp4963
(lp4964
S'\t\t\t\tunlock_client(client);'
p4965
as(I882
I888
tp4966
(lp4967
S'\t\tret = ion_walk_heaps(client, data.prefetch_data.heap_id,'
p4968
aS'\t\t\t\t     ION_HEAP_TYPE_SECURE_DMA,'
p4969
aS'\t\t\t\t     (void *)data.prefetch_data.len,'
p4970
aS'\t\t\t\t     ion_secure_cma_drain_pool);'
p4971
ag119
aS'\t\tif (ret)'
p4972
aS'\t\t\treturn ret;'
p4973
as(I837
I839
tp4974
(lp4975
S'\t\tstart = (unsigned long)data.flush_data.vaddr +'
p4976
aS'\t\t\tdata.flush_data.offset;'
p4977
aS'\t\tend = start + data.flush_data.length;'
p4978
as(I855
I855
tp4979
(lp4980
S'\t\tunlock_client(client);'
p4981
as(I825
I826
tp4982
(lp4983
S'\t\t\thandle = ion_import_dma_buf_fd_nolock(client,'
p4984
aS'\t\t\t\t\t\t\t   data.flush_data.fd);'
p4985
as(I864
I870
tp4986
(lp4987
S'\t\tret = ion_walk_heaps(client, data.prefetch_data.heap_id,'
p4988
aS'\t\t\tION_HEAP_TYPE_SECURE_DMA,'
p4989
aS'\t\t\t(void *)data.prefetch_data.len,'
p4990
aS'\t\t\tion_secure_cma_prefetch);'
p4991
aS'\t\tif (ret)'
p4992
aS'\t\t\treturn ret;'
p4993
ag119
as(I814
I814
tp4994
(lp4995
S'\t\tlock_client(client);'
p4996
as(I853
I853
tp4997
(lp4998
S'\t\tion_free_nolock(client, handle);'
p4999
asss(g4864
S'ion_do_cache_op'
p5000
I336
tp5001
(dp5002
g27
(dp5003
(I360
I360
tp5004
(lp5005
S'\tif (flags & ION_FLAG_SECURE)'
p5006
as(I346
I347
tp5007
(lp5008
S'\tret = ion_handle_get_flags(client, handle, &flags);'
p5009
aS'\tif (ret)'
p5010
as(I363
I363
tp5011
(lp5012
S'\ttable = ion_sg_table(client, handle);'
p5013
assg9
(I336
I378
tp5014
sg11
I6
sg12
g13
sg14
(dp5015
(I350
I355
tp5016
(lp5017
S'\t}'
p5018
ag119
aS'\tbuffer = get_buffer(handle);'
p5019
aS'\tmutex_lock(&buffer->lock);'
p5020
aS'\tflags = buffer->flags;'
p5021
aS'\tmutex_unlock(&buffer->lock);'
p5022
as(I344
I344
tp5023
(lp5024
S'\tstruct ion_buffer *buffer;'
p5025
as(I360
I360
tp5026
(lp5027
S'\tif (!is_buffer_hlos_assigned(ion_handle_buffer(handle)))'
p5028
as(I346
I348
tp5029
(lp5030
S'\tif (!ion_handle_validate(client, handle)) {'
p5031
aS'\t\tpr_err("%s: invalid handle passed to %s.\\n",'
p5032
aS'\t\t       __func__, __func__);'
p5033
as(I363
I363
tp5034
(lp5035
S'\ttable = buffer->sg_table;'
p5036
assssS'19a8101c2309_sdm845-perf'
p5037
(dp5038
(g4864
g4865
I785
tp5039
(dp5040
g27
(dp5041
(I825
I826
tp5042
(lp5043
S'\t\t\thandle = ion_import_dma_buf_fd(client,'
p5044
aS'\t\t\t\t\t\t       data.flush_data.fd);'
p5045
as(I853
I853
tp5046
(lp5047
S'\t\tion_free(client, handle);'
p5048
as(I816
I816
tp5049
(lp5050
S'\t\t\thandle = ion_handle_get_by_id('
p5051
as(I841
I841
tp5052
(lp5053
S'\t\tif (check_vaddr_bounds(start, end)) {'
p5054
as(I837
I839
tp5055
(lp5056
S'\t\tstart = (unsigned long)data.flush_data.vaddr;'
p5057
aS'\t\tend = (unsigned long)data.flush_data.vaddr'
p5058
aS'\t\t\t+ data.flush_data.length;'
p5059
assg9
(I785
I908
tp5060
sg11
I3
sg12
g13
sg14
(dp5061
(I816
I816
tp5062
(lp5063
S'\t\t\thandle = ion_handle_get_by_id_nolock('
p5064
as(I821
I821
tp5065
(lp5066
S'\t\t\t\tunlock_client(client);'
p5067
as(I837
I839
tp5068
(lp5069
S'\t\tstart = (unsigned long)data.flush_data.vaddr +'
p5070
aS'\t\t\tdata.flush_data.offset;'
p5071
aS'\t\tend = start + data.flush_data.length;'
p5072
as(I855
I855
tp5073
(lp5074
S'\t\tunlock_client(client);'
p5075
as(I841
I841
tp5076
(lp5077
S'\t\tif (start && check_vaddr_bounds(start, end)) {'
p5078
as(I825
I826
tp5079
(lp5080
S'\t\t\thandle = ion_import_dma_buf_fd_nolock(client,'
p5081
aS'\t\t\t\t\t\t\t   data.flush_data.fd);'
p5082
as(I865
I873
tp5083
(lp5084
S'\t\t\t\t     (enum ion_heap_type)'
p5085
aS'\t\t\t\t     ION_HEAP_TYPE_SECURE_DMA,'
p5086
aS'\t\t\t\t     (void *)data.prefetch_data.len,'
p5087
aS'\t\t\t\t     ion_secure_cma_prefetch);'
p5088
aS'\t\tif (ret)'
p5089
aS'\t\t\treturn ret;'
p5090
ag119
aS'\t\tret = ion_walk_heaps(client, data.prefetch_data.heap_id,'
p5091
aS'\t\t\t\t     (enum ion_heap_type)'
p5092
as(I830
I830
tp5093
(lp5094
S'\t\t\t\tunlock_client(client);'
p5095
as(I814
I814
tp5096
(lp5097
S'\t\tlock_client(client);'
p5098
as(I894
I894
tp5099
(lp5100
S'\t\t\t\t     (enum ion_heap_type)'
p5101
as(I884
I891
tp5102
(lp5103
S'\t\tret = ion_walk_heaps(client, data.prefetch_data.heap_id,'
p5104
aS'\t\t\t\t     (enum ion_heap_type)'
p5105
aS'\t\t\t\t     ION_HEAP_TYPE_SECURE_DMA,'
p5106
aS'\t\t\t\t     (void *)data.prefetch_data.len,'
p5107
aS'\t\t\t\t     ion_secure_cma_drain_pool);'
p5108
ag119
aS'\t\tif (ret)'
p5109
aS'\t\t\treturn ret;'
p5110
as(I853
I853
tp5111
(lp5112
S'\t\tion_free_nolock(client, handle);'
p5113
assssS'db0174343570_sdm845-perf'
p5114
(dp5115
(g4864
g4865
I756
tp5116
(dp5117
g27
(dp5118
(I805
I807
tp5119
(lp5120
S'\t\tstart = (unsigned long)data.flush_data.vaddr;'
p5121
aS'\t\tend = (unsigned long)data.flush_data.vaddr'
p5122
aS'\t\t\t+ data.flush_data.length;'
p5123
assg9
(I756
I871
tp5124
sg11
I3
sg12
g13
sg14
(dp5125
(I831
I837
tp5126
(lp5127
S'\t\tret = ion_walk_heaps(client, data.prefetch_data.heap_id,'
p5128
aS'\t\t\tION_HEAP_TYPE_SECURE_DMA,'
p5129
aS'\t\t\t(void *)data.prefetch_data.len,'
p5130
aS'\t\t\tion_secure_cma_prefetch);'
p5131
aS'\t\tif (ret)'
p5132
aS'\t\t\treturn ret;'
p5133
ag119
as(I805
I807
tp5134
(lp5135
S'\t\tstart = (unsigned long)data.flush_data.vaddr +'
p5136
aS'\t\t\tdata.flush_data.offset;'
p5137
aS'\t\tend = start + data.flush_data.length;'
p5138
as(I849
I855
tp5139
(lp5140
S'\t\tret = ion_walk_heaps(client, data.prefetch_data.heap_id,'
p5141
aS'\t\t\t\t     ION_HEAP_TYPE_SECURE_DMA,'
p5142
aS'\t\t\t\t     (void *)data.prefetch_data.len,'
p5143
aS'\t\t\t\t     ion_secure_cma_drain_pool);'
p5144
ag119
aS'\t\tif (ret)'
p5145
aS'\t\t\treturn ret;'
p5146
asss(S'drivers/staging/android/ion/ion.c'
p5147
S'ion_sync_for_device'
p5148
I1508
tp5149
(dp5150
g9
(I1508
I1535
tp5151
sg11
I2
sg12
g13
sg14
(dp5152
(I1526
I1530
tp5153
(lp5154
S'\tif (!is_buffer_hlos_assigned(buffer)) {'
p5155
aS'\t\tpr_err("%s: cannot sync a secure dmabuf\\n", __func__);'
p5156
aS'\t\tdma_buf_put(dmabuf);'
p5157
aS'\t\treturn -EINVAL;'
p5158
aS'\t}'
p5159
asss(g4864
g5000
I331
tp5160
(dp5161
g27
(dp5162
(I347
I347
tp5163
(lp5164
S'\tif (flags & ION_FLAG_SECURE)'
p5165
assg9
(I331
I365
tp5166
sg11
I6
sg12
g13
sg14
(dp5167
(I347
I347
tp5168
(lp5169
S'\tif (!is_buffer_hlos_assigned(ion_handle_buffer(handle)))'
p5170
asssssS'CVE-2019-2308'
p5171
(dp5172
S'1fb9158725c8_sdm845-perf'
p5173
(dp5174
(S'drivers/char/adsprpc.c'
p5175
S'fastrpc_munmap_on_dsp'
p5176
I2471
tp5177
(dp5178
g27
(dp5179
(I2489
I2489
tp5180
(lp5181
S'\tioctl.inv.handle = 1;'
p5182
assg9
(I2471
I2510
tp5183
sg11
I5
sg12
g13
sg14
(dp5184
(I2489
I2489
tp5185
(lp5186
S'\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5187
asss(g5175
S'fastrpc_internal_invoke'
p5188
I1942
tp5189
(dp5190
g9
(I1942
I2057
tp5191
sg11
I4
sg12
g13
sg14
(dp5192
(I1957
I1964
tp5193
(lp5194
S'\tif (!kernel) {'
p5195
aS'\t\tVERIFY(err, invoke->handle != FASTRPC_STATIC_HANDLE_KERNEL);'
p5196
aS'\t\tif (err) {'
p5197
aS'\t\t\tpr_err("adsprpc: ERROR: %s: user application %s trying to send a kernel RPC message to channel %d",'
p5198
aS'\t\t\t\t__func__, current->comm, cid);'
p5199
aS'\t\t\tgoto bail;'
p5200
aS'\t\t}'
p5201
aS'\t}'
p5202
asss(g5175
S'fastrpc_init_process'
p5203
I2081
tp5204
(dp5205
g27
(dp5206
(I2104
I2104
tp5207
(lp5208
S'\t\tioctl.inv.handle = 1;'
p5209
as(I2199
I2199
tp5210
(lp5211
S'\t\tioctl.inv.handle = 1;'
p5212
as(I2285
I2285
tp5213
(lp5214
S'\t\tioctl.inv.handle = 1;'
p5215
assg9
(I2081
I2319
tp5216
sg11
I2
sg12
g13
sg14
(dp5217
(I2104
I2104
tp5218
(lp5219
S'\t\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5220
as(I2199
I2199
tp5221
(lp5222
S'\t\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5223
as(I2285
I2285
tp5224
(lp5225
S'\t\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5226
asss(g5175
S'fastrpc_mmap_on_dsp'
p5227
I2349
tp5228
(dp5229
g27
(dp5230
(I2383
I2383
tp5231
(lp5232
S'\tioctl.inv.handle = 1;'
p5233
assg9
(I2349
I2416
tp5234
sg11
I6
sg12
g13
sg14
(dp5235
(I2383
I2383
tp5236
(lp5237
S'\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5238
asss(g5175
S'fastrpc_release_current_dsp_process'
p5239
I2321
tp5240
(dp5241
g27
(dp5242
(I2337
I2337
tp5243
(lp5244
S'\tioctl.inv.handle = 1;'
p5245
assg9
(I2321
I2347
tp5246
sg11
I1
sg12
g13
sg14
(dp5247
(I2337
I2337
tp5248
(lp5249
S'\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5250
asss(g5175
S'fastrpc_munmap_on_dsp_rh'
p5251
I2418
tp5252
(dp5253
g27
(dp5254
(I2438
I2438
tp5255
(lp5256
S'\t\tioctl.inv.handle = 1;'
p5257
assg9
(I2418
I2469
tp5258
sg11
I4
sg12
g13
sg14
(dp5259
(I2438
I2438
tp5260
(lp5261
S'\t\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5262
assssS'0c755962c9cc_sdm845-perf'
p5263
(dp5264
(g5175
g5251
I2448
tp5265
(dp5266
g27
(dp5267
(I2460
I2461
tp5268
(lp5269
S'\t\tremote_arg_t ra[1];'
p5270
aS'\t\tint err = 0;'
p5271
as(I2474
I2475
tp5272
(lp5273
S'\t\tioctl.inv.handle = 1;'
p5274
aS'\t\tioctl.inv.sc = REMOTE_SCALARS_MAKE(7, 0, 1);'
p5275
as(I2466
I2467
tp5276
(lp5277
S'\t\tra[0].buf.pv = (void *)&routargs;'
p5278
aS'\t\tra[0].buf.len = sizeof(routargs);'
p5279
as(I2480
I2481
tp5280
(lp5281
S'\t\tif (fl == NULL)'
p5282
aS'\t\t\tgoto bail;'
p5283
assg9
(I2448
I2504
tp5284
sg11
I4
sg12
g13
sg14
(dp5285
(I2460
I2461
tp5286
(lp5287
S'\t\tremote_arg_t ra[2];'
p5288
ag119
as(I2466
I2472
tp5289
(lp5290
S'\t\tif (fl == NULL)'
p5291
aS'\t\t\tgoto bail;'
p5292
aS'\t\ttgid = fl->tgid;'
p5293
aS'\t\tra[0].buf.pv = (void *)&tgid;'
p5294
aS'\t\tra[0].buf.len = sizeof(tgid);'
p5295
aS'\t\tra[1].buf.pv = (void *)&routargs;'
p5296
aS'\t\tra[1].buf.len = sizeof(routargs);'
p5297
as(I2480
I2480
tp5298
(lp5299
g119
as(I2474
I2475
tp5300
(lp5301
S'\t\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5302
aS'\t\tioctl.inv.sc = REMOTE_SCALARS_MAKE(9, 1, 1);'
p5303
as(I2453
I2453
tp5304
(lp5305
S'\tint tgid = 0;'
p5306
assssS'1f01db5a42cc_sdm845-perf'
p5307
(dp5308
(g5175
g5188
I1972
tp5309
(dp5310
g27
(dp5311
(I2049
I2049
tp5312
(lp5313
g119
assg9
(I1972
I2088
tp5314
sg11
I4
sg12
g13
sg14
(dp5315
(I2049
I2050
tp5316
(lp5317
S'\tif (ctx->handle)'
p5318
aS'\t\tglink_rx_done(ctx->handle, ctx->ptr, true);'
p5319
as(I1987
I1994
tp5320
(lp5321
S'\tif (!kernel) {'
p5322
aS'\t\tVERIFY(err, invoke->handle != FASTRPC_STATIC_HANDLE_KERNEL);'
p5323
aS'\t\tif (err) {'
p5324
aS'\t\t\tpr_err("adsprpc: ERROR: %s: user application %s trying to send a kernel RPC message to channel %d",'
p5325
aS'\t\t\t\t__func__, current->comm, cid);'
p5326
aS'\t\t\tgoto bail;'
p5327
aS'\t\t}'
p5328
aS'\t}'
p5329
assssS'7dca8885b04d_sdm845-perf'
p5330
(dp5331
(g5175
g5251
I2448
tp5332
(dp5333
g27
(dp5334
(I2460
I2461
tp5335
(lp5336
S'\t\tremote_arg_t ra[1];'
p5337
aS'\t\tint err = 0;'
p5338
as(I2474
I2475
tp5339
(lp5340
S'\t\tioctl.inv.handle = 1;'
p5341
aS'\t\tioctl.inv.sc = REMOTE_SCALARS_MAKE(7, 0, 1);'
p5342
as(I2466
I2467
tp5343
(lp5344
S'\t\tra[0].buf.pv = (void *)&routargs;'
p5345
aS'\t\tra[0].buf.len = sizeof(routargs);'
p5346
as(I2480
I2481
tp5347
(lp5348
S'\t\tif (fl == NULL)'
p5349
aS'\t\t\tgoto bail;'
p5350
assg9
(I2448
I2516
tp5351
sg11
I4
sg12
g13
sg14
(dp5352
(I2480
I2480
tp5353
(lp5354
g119
as(I2474
I2475
tp5355
(lp5356
S'\t\tioctl.inv.handle = FASTRPC_STATIC_HANDLE_KERNEL;'
p5357
aS'\t\tioctl.inv.sc = REMOTE_SCALARS_MAKE(9, 1, 1);'
p5358
as(I2453
I2453
tp5359
(lp5360
S'\tint tgid = 0;'
p5361
as(I2460
I2461
tp5362
(lp5363
S'\t\tremote_arg_t ra[2];'
p5364
ag119
as(I2466
I2472
tp5365
(lp5366
S'\t\tif (fl == NULL)'
p5367
aS'\t\t\tgoto bail;'
p5368
aS'\t\ttgid = fl->tgid;'
p5369
aS'\t\tra[0].buf.pv = (void *)&tgid;'
p5370
aS'\t\tra[0].buf.len = sizeof(tgid);'
p5371
aS'\t\tra[1].buf.pv = (void *)&routargs;'
p5372
aS'\t\tra[1].buf.len = sizeof(routargs);'
p5373
as(I2484
I2494
tp5374
(lp5375
S'\t\tif (err == AEE_EUNSUPPORTED) {'
p5376
aS'\t\t\tremote_arg_t ra[1];'
p5377
ag119
aS'\t\t\tpr_warn("ADSPRPC:Failed to get security key with updated remote call, falling back to older method");'
p5378
aS'\t\t\tra[0].buf.pv = (void *)&routargs;'
p5379
aS'\t\t\tra[0].buf.len = sizeof(routargs);'
p5380
aS'\t\t\tioctl.inv.sc = REMOTE_SCALARS_MAKE(7, 0, 1);'
p5381
aS'\t\t\tioctl.inv.pra = ra;'
p5382
aS'\t\t\tVERIFY(err, 0 == (err = fastrpc_internal_invoke(fl,'
p5383
aS'\t\t\t\tFASTRPC_MODE_PARALLEL, 1, &ioctl)));'
p5384
aS'\t\t}'
p5385
as(I2497
I2497
tp5386
(lp5387
g119
asssssS'CVE-2019-10544'
p5388
(dp5389
S'70f432282130_sdm845-perf'
p5390
(dp5391
(S'drivers/char/diag/diag_masks.c'
p5392
S'diag_cmd_get_msg_mask'
p5393
I689
tp5394
(dp5395
g27
(dp5396
(I707
I707
tp5397
(lp5398
S'\t    !mask_info) {'
p5399
assg9
(I689
I764
tp5400
sg11
I5
sg12
g13
sg14
(dp5401
(I707
I707
tp5402
(lp5403
S'\t    !mask_info || (src_len < sizeof(struct diag_build_mask_req_t))) {'
p5404
assssS'a77c16d4981b_sdm845-perf'
p5405
(dp5406
(g5392
g5393
I689
tp5407
(dp5408
g27
(dp5409
(I706
I707
tp5410
(lp5411
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p5412
aS'\t    !mask_info) {'
p5413
assg9
(I689
I764
tp5414
sg11
I5
sg12
g13
sg14
(dp5415
(I706
I707
tp5416
(lp5417
S'\tif (!src_buf || !dest_buf || dest_len <= 0 ||'
p5418
aS'\t    !mask_info || (src_len < sizeof(struct diag_build_mask_req_t))) {'
p5419
asssssS'CVE-2019-10547'
p5420
(dp5421
S'70f432282130_sdm845-perf'
p5422
(dp5423
(S'drivers/soc/qcom/secure_buffer.c'
p5424
S'hyp_assign_table'
p5425
I281
tp5426
(dp5427
g27
(dp5428
(I336
I336
tp5429
(lp5430
S'out_free:'
p5431
as(I293
I294
tp5432
(lp5433
S'\tint batch_start, batch_end;'
p5434
aS'\tu64 batch_size;'
p5435
as(I313
I313
tp5436
(lp5437
S'\t\tgoto out_free;'
p5438
as(I292
I293
tp5439
(lp5440
S'\tstruct mem_prot_info *sg_table_copy;'
p5441
aS'\tsize_t sg_table_copy_size;'
p5442
as(I329
I330
tp5443
(lp5444
S'\tdmac_flush_range(sg_table_copy,'
p5445
aS'\t\t\t (void *)sg_table_copy + sg_table_copy_size);'
p5446
as(I332
I365
tp5447
(lp5448
S'\tbatch_start = 0;'
p5449
aS'\twhile (batch_start < table->nents) {'
p5450
aS'\t\t/* Ensure no size zero batches */'
p5451
aS'\t\tbatch_size = sg_table_copy[batch_start].size;'
p5452
aS'\t\tbatch_end = batch_start + 1;'
p5453
aS'\t\twhile (1) {'
p5454
aS'\t\t\tu64 size;'
p5455
ag119
aS'\t\t\tif (batch_end >= table->nents)'
p5456
aS'\t\t\t\tbreak;'
p5457
aS'\t\t\tif (batch_end - batch_start >= BATCH_MAX_SECTIONS)'
p5458
aS'\t\t\t\tbreak;'
p5459
ag119
aS'\t\t\tsize = sg_table_copy[batch_end].size;'
p5460
aS'\t\t\tif (size + batch_size >= BATCH_MAX_SIZE)'
p5461
aS'\t\t\t\tbreak;'
p5462
ag119
aS'\t\t\tbatch_size += size;'
p5463
aS'\t\t\tbatch_end++;'
p5464
aS'\t\t}'
p5465
ag119
aS'\t\tdesc.args[0] = virt_to_phys(&sg_table_copy[batch_start]);'
p5466
aS'\t\tdesc.args[1] = (batch_end - batch_start) *'
p5467
aS'\t\t\t\tsizeof(sg_table_copy[0]);'
p5468
ag119
aS'\t\tret = scm_call2(SCM_SIP_FNID(SCM_SVC_MP,'
p5469
aS'\t\t\t\tMEM_PROT_ASSIGN_ID), &desc);'
p5470
aS'\t\tif (ret) {'
p5471
aS'\t\t\tpr_info("%s: Failed to assign memory protection, ret = %d\\n",'
p5472
aS'\t\t\t\t__func__, ret);'
p5473
aS'\t\t\tbreak;'
p5474
aS'\t\t}'
p5475
aS'\t\tbatch_start = batch_end;'
p5476
aS'\t}'
p5477
as(I318
I325
tp5478
(lp5479
S'\tsg_table_copy = get_info_list_from_table(table, &sg_table_copy_size);'
p5480
aS'\tif (!sg_table_copy) {'
p5481
aS'\t\tret = -ENOMEM;'
p5482
aS'\t\tgoto out_unlock;'
p5483
aS'\t}'
p5484
ag119
aS'\tdesc.args[0] = virt_to_phys(sg_table_copy);'
p5485
aS'\tdesc.args[1] = sg_table_copy_size;'
p5486
as(I334
I334
tp5487
(lp5488
S'out_unlock:'
p5489
assg9
(I281
I339
tp5490
sg11
I6
sg12
g13
sg14
(dp5491
(I293
I295
tp5492
(lp5493
S'\tif (!table || !table->sgl || !source_vm_list || !source_nelems ||'
p5494
aS'\t    !dest_vmids || !dest_perms || !dest_nelems)'
p5495
aS'\t\treturn -EINVAL;'
p5496
as(I336
I336
tp5497
(lp5498
S'out_free_source:'
p5499
as(I313
I313
tp5500
(lp5501
S'\t\tgoto out_free_source;'
p5502
as(I332
I332
tp5503
(lp5504
S'\tret = batched_hyp_assign(table, &desc);'
p5505
asssssS'CVE-2018-11919'
p5506
(dp5507
S'7c0a471aa20a_sdm845-perf'
p5508
(dp5509
(S'drivers/soc/qcom/msm_bus/msm_bus_fabric_adhoc.c'
p5510
S'msm_bus_device_init'
p5511
I960
tp5512
(dp5513
g27
(dp5514
(I974
I977
tp5515
(lp5516
S'\t\tMSM_BUS_ERR("%s:Bus node alloc failed\\n", __func__);'
p5517
aS'\t\tkfree(bus_dev);'
p5518
aS'\t\tbus_dev = NULL;'
p5519
aS'\t\tgoto exit_device_init;'
p5520
as(I991
I997
tp5521
(lp5522
S'\tif (msm_bus_copy_node_info(pdata, bus_dev) < 0) {'
p5523
aS'\t\tdevm_kfree(bus_dev, bus_node);'
p5524
aS'\t\tdevm_kfree(bus_dev, node_info);'
p5525
aS'\t\tkfree(bus_dev);'
p5526
aS'\t\tbus_dev = NULL;'
p5527
aS'\t\tgoto exit_device_init;'
p5528
aS'\t}'
p5529
as(I999
I999
tp5530
(lp5531
S'\tif (ret < 0) {'
p5532
as(I1002
I1010
tp5533
(lp5534
S'\t\tdevm_kfree(bus_dev, bus_node);'
p5535
aS'\t\tdevm_kfree(bus_dev, node_info->dev_connections);'
p5536
aS'\t\tdevm_kfree(bus_dev, node_info->connections);'
p5537
aS'\t\tdevm_kfree(bus_dev, node_info->black_connections);'
p5538
aS'\t\tdevm_kfree(bus_dev, node_info->black_listed_connections);'
p5539
aS'\t\tdevm_kfree(bus_dev, node_info);'
p5540
aS'\t\tkfree(bus_dev);'
p5541
aS'\t\tbus_dev = NULL;'
p5542
aS'\t\tgoto exit_device_init;'
p5543
as(I1006
I1007
tp5544
(lp5545
g119
aS'exit_device_init:'
p5546
as(I983
I987
tp5547
(lp5548
S'\t\tMSM_BUS_ERR("%s:Bus node info alloc failed\\n", __func__);'
p5549
aS'\t\tdevm_kfree(bus_dev, bus_node);'
p5550
aS'\t\tkfree(bus_dev);'
p5551
aS'\t\tbus_dev = NULL;'
p5552
aS'\t\tgoto exit_device_init;'
p5553
assg9
(I960
I1014
tp5554
sg11
I1
sg12
g13
sg14
(dp5555
(I1002
I1002
tp5556
(lp5557
S'\t\tgoto err_put_device;'
p5558
as(I1007
I1013
tp5559
(lp5560
g119
aS'err_put_device:'
p5561
aS'\tput_device(bus_dev);'
p5562
aS'\tbus_dev = NULL;'
p5563
aS'\tkfree(bus_node);'
p5564
aS'err_device_init:'
p5565
aS'\treturn ERR_PTR(ret);'
p5566
as(I999
I999
tp5567
(lp5568
S'\tif (ret) {'
p5569
as(I974
I975
tp5570
(lp5571
S'\t\tret = -ENOMEM;'
p5572
aS'\t\tgoto err_device_init;'
p5573
as(I983
I984
tp5574
(lp5575
S'\t\tret = -ENOMEM;'
p5576
aS'\t\tgoto err_put_device;'
p5577
as(I991
I993
tp5578
(lp5579
S'\tret = msm_bus_copy_node_info(pdata, bus_dev);'
p5580
aS'\tif (ret)'
p5581
aS'\t\tgoto err_put_device;'
p5582
asss(g5510
S'msm_bus_device_probe'
p5583
I1136
tp5584
(dp5585
g27
(dp5586
(I1160
I1160
tp5587
(lp5588
S'\t\tif (!node_dev) {'
p5589
as(I1163
I1163
tp5590
(lp5591
S'\t\t\tret = -ENXIO;'
p5592
assg9
(I1136
I1211
tp5593
sg11
I1
sg12
g13
sg14
(dp5594
(I1160
I1160
tp5595
(lp5596
S'\t\tif (IS_ERR(node_dev)) {'
p5597
as(I1163
I1163
tp5598
(lp5599
S'\t\t\tret = PTR_ERR(node_dev);'
p5600
asss(S'drivers/soc/qcom/msm_bus/msm_bus_fabric_rpmh.c'
p5601
S'msm_bus_device_probe'
p5602
I1702
tp5603
(dp5604
g27
(dp5605
(I1732
I1732
tp5606
(lp5607
S'\t\t\tret = -ENXIO;'
p5608
as(I1729
I1729
tp5609
(lp5610
S'\t\tif (!node_dev) {'
p5611
assg9
(I1702
I1800
tp5612
sg11
I1
sg12
g13
sg14
(dp5613
(I1732
I1732
tp5614
(lp5615
S'\t\t\tret = PTR_ERR(node_dev);'
p5616
as(I1729
I1729
tp5617
(lp5618
S'\t\tif (IS_ERR(node_dev)) {'
p5619
asss(g5601
S'msm_bus_device_init'
p5620
I1468
tp5621
(dp5622
g27
(dp5623
(I1482
I1485
tp5624
(lp5625
S'\t\tMSM_BUS_ERR("%s:Bus node alloc failed\\n", __func__);'
p5626
aS'\t\tkfree(bus_dev);'
p5627
aS'\t\tbus_dev = NULL;'
p5628
aS'\t\tgoto exit_device_init;'
p5629
as(I1519
I1525
tp5630
(lp5631
S'\tif (msm_bus_copy_node_info(pdata, bus_dev) < 0) {'
p5632
aS'\t\tdevm_kfree(bus_dev, bus_node);'
p5633
aS'\t\tdevm_kfree(bus_dev, node_info);'
p5634
aS'\t\tkfree(bus_dev);'
p5635
aS'\t\tbus_dev = NULL;'
p5636
aS'\t\tgoto exit_device_init;'
p5637
aS'\t}'
p5638
as(I1527
I1527
tp5639
(lp5640
S'\tif (ret < 0) {'
p5641
as(I1530
I1538
tp5642
(lp5643
S'\t\tdevm_kfree(bus_dev, bus_node);'
p5644
aS'\t\tdevm_kfree(bus_dev, node_info->dev_connections);'
p5645
aS'\t\tdevm_kfree(bus_dev, node_info->connections);'
p5646
aS'\t\tdevm_kfree(bus_dev, node_info->black_connections);'
p5647
aS'\t\tdevm_kfree(bus_dev, node_info->black_listed_connections);'
p5648
aS'\t\tdevm_kfree(bus_dev, node_info);'
p5649
aS'\t\tkfree(bus_dev);'
p5650
aS'\t\tbus_dev = NULL;'
p5651
aS'\t\tgoto exit_device_init;'
p5652
as(I1534
I1535
tp5653
(lp5654
g119
aS'exit_device_init:'
p5655
as(I1474
I1474
tp5656
(lp5657
S'\tint ret = 0, i = 0;'
p5658
as(I1491
I1495
tp5659
(lp5660
S'\t\tMSM_BUS_ERR("%s:Bus node info alloc failed\\n", __func__);'
p5661
aS'\t\tdevm_kfree(bus_dev, bus_node);'
p5662
aS'\t\tkfree(bus_dev);'
p5663
aS'\t\tbus_dev = NULL;'
p5664
aS'\t\tgoto exit_device_init;'
p5665
as(I1503
I1504
tp5666
(lp5667
S'\t\tif (!bus_node->qos_bcms)'
p5668
aS'\t\t\tgoto exit_device_init;'
p5669
assg9
(I1468
I1542
tp5670
sg11
I1
sg12
g13
sg14
(dp5671
(I1482
I1483
tp5672
(lp5673
S'\t\tret = -ENOMEM;'
p5674
aS'\t\tgoto err_device_init;'
p5675
as(I1530
I1530
tp5676
(lp5677
S'\t\tgoto err_put_device;'
p5678
as(I1535
I1541
tp5679
(lp5680
g119
aS'err_put_device:'
p5681
aS'\tput_device(bus_dev);'
p5682
aS'\tbus_dev = NULL;'
p5683
aS'\tkfree(bus_node);'
p5684
aS'err_device_init:'
p5685
aS'\treturn ERR_PTR(ret);'
p5686
as(I1527
I1527
tp5687
(lp5688
S'\tif (ret) {'
p5689
as(I1503
I1506
tp5690
(lp5691
S'\t\tif (!bus_node->qos_bcms) {'
p5692
aS'\t\t\tret = -ENOMEM;'
p5693
aS'\t\t\tgoto err_put_device;'
p5694
aS'\t\t}'
p5695
as(I1474
I1474
tp5696
(lp5697
S'\tint ret = -ENODEV, i = 0;'
p5698
as(I1491
I1492
tp5699
(lp5700
S'\t\tret = -ENOMEM;'
p5701
aS'\t\tgoto err_put_device;'
p5702
as(I1519
I1521
tp5703
(lp5704
S'\tret = msm_bus_copy_node_info(pdata, bus_dev);'
p5705
aS'\tif (ret)'
p5706
aS'\t\tgoto err_put_device;'
p5707
asssssS'CVE-2019-2301'
p5708
(dp5709
S'29de98dbc8df_sdm845-perf'
p5710
(dp5711
(S'drivers/soc/qcom/glink_spi_xprt.c'
p5712
S'glink_spi_xprt_rx_cmd'
p5713
I478
tp5714
(dp5715
g9
(I478
I522
tp5716
sg11
I3
sg12
g13
sg14
(dp5717
(I487
I493
tp5718
(lp5719
S'\tif ((read_id > (einfo->rx_fifo_start + einfo->fifo_size)) ||'
p5720
aS'\t\t(read_id < einfo->rx_fifo_start)) {'
p5721
aS'\t\tpr_err("%s: Invalid rx_fifo_read: %d, start: %d, size: %d\\n",'
p5722
aS'\t\t\t__func__, read_id, einfo->rx_fifo_start,'
p5723
aS'\t\t\teinfo->fifo_size);'
p5724
aS'\t\treturn -EINVAL;'
p5725
aS'\t}'
p5726
asss(g5712
S'process_rx_cmd'
p5727
I709
tp5728
(dp5729
g27
(dp5730
(I732
I732
tp5731
(lp5732
S'\tstruct command *cmd;'
p5733
as(I736
I736
tp5734
(lp5735
S'\tint offset = 0;'
p5736
assg9
(I709
I888
tp5737
sg11
I3
sg12
g13
sg14
(dp5738
(I752
I753
tp5739
(lp5740
S'\t\tif (offset + sizeof(*cmd) > rx_size)'
p5741
aS'\t\t\tgoto err;'
p5742
as(I736
I736
tp5743
(lp5744
S'\tuint64_t offset = 0;'
p5745
as(I772
I773
tp5746
(lp5747
S'\t\t\tif (name_len > GLINK_NAME_SIZE)'
p5748
aS'\t\t\t\tgoto err;'
p5749
as(I851
I852
tp5750
(lp5751
S'\t\t\tif (offset + sizeof(*rx_sd_descp) > rx_size)'
p5752
aS'\t\t\t\tgoto err;'
p5753
as(I732
I732
tp5754
(lp5755
S'\tstruct command *cmd = NULL;'
p5756
as(I840
I841
tp5757
(lp5758
S'\t\t\tif (offset + sizeof(*rx_descp) > rx_size)'
p5759
aS'\t\t\t\tgoto err;'
p5760
as(I881
I887
tp5761
(lp5762
S'\treturn;'
p5763
aS'err:'
p5764
aS'\tsrcu_read_unlock(&einfo->use_ref, rcu_id);'
p5765
aS'\tif (cmd)'
p5766
aS'\t\tpr_err("%s: invalid size of rx_data: %d, cmd : %d\\n",'
p5767
aS'\t\t\t__func__, rx_size, cmd->id);'
p5768
aS'\treturn;'
p5769
as(I803
I804
tp5770
(lp5771
S'\t\t\t\tif (offset + sizeof(*intents) > rx_size)'
p5772
aS'\t\t\t\t\tgoto err;'
p5773
as(I775
I777
tp5774
(lp5775
S'\t\t\tif (offset + ALIGN(name_len, FIFO_ALIGNMENT) >'
p5776
aS'\t\t\t\trx_size)'
p5777
aS'\t\t\t\tgoto err;'
p5778
asssssS'CVE-2017-18595'
p5779
(dp5780
S'2866abf7acbc_sdm845-perf'
p5781
(dp5782
(S'kernel/trace/trace.c'
p5783
S'allocate_trace_buffer'
p5784
I7099
tp5785
(dp5786
g9
(I7099
I7123
tp5787
sg11
I3
sg12
g13
sg14
(dp5788
(I7114
I7114
tp5789
(lp5790
S'\t\tbuf->buffer = NULL;'
p5791
asssssS'CVE-2019-2260'
p5792
(dp5793
S'c36d54c34fef_sdm845-perf'
p5794
(dp5795
(S'kernel/events/core.c'
p5796
S'perf_event_exit_cpu'
p5797
I11214
tp5798
(dp5799
g27
(dp5800
(I11216
I11216
tp5801
(lp5802
S'\tper_cpu(is_hotplugging, cpu) = true;'
p5803
assg9
(I11214
I11221
tp5804
sg11
I1
sg12
g13
sg14
(dp5805
(I11216
I11217
tp5806
(lp5807
g119
aS'\tmutex_lock(&pmus_lock);'
p5808
as(I11219
I11219
tp5809
(lp5810
S'\tmutex_unlock(&pmus_lock);'
p5811
assssS'f332617ebb03_sdm845-perf'
p5812
(dp5813
(g5796
S'perf_event_zombie_cleanup'
p5814
I11130
tp5815
(dp5816
g27
(dp5817
(I11148
I11148
tp5818
(lp5819
S'\t\tperf_event_release_kernel(event);'
p5820
assg9
(I11130
I11154
tp5821
sg11
I1
sg12
g13
sg14
(dp5822
(I11148
I11148
tp5823
(lp5824
S'\t\t__perf_event_release_kernel(event);'
p5825
asss(g5796
S'perf_event_release_kernel'
p5826
I4421
tp5827
(dp5828
g27
(dp5829
(I4429
I4540
tp5830
(lp5831
S'\t\tevent->state = PERF_EVENT_STATE_ZOMBIE;'
p5832
ag119
aS'\t\tspin_lock(&zombie_list_lock);'
p5833
aS'\t\tlist_add_tail(&event->zombie_entry, &zombie_list);'
p5834
aS'\t\tspin_unlock(&zombie_list_lock);'
p5835
ag119
aS'\t\treturn 0;'
p5836
aS'\t}'
p5837
aS'#endif'
p5838
ag119
aS'\t/*'
p5839
aS'\t * If we got here through err_file: fput(event_file); we will not have'
p5840
aS'\t * attached to a context yet.'
p5841
aS'\t */'
p5842
aS'\tif (!ctx) {'
p5843
aS'\t\tWARN_ON_ONCE(event->attach_state &'
p5844
aS'\t\t\t\t(PERF_ATTACH_CONTEXT|PERF_ATTACH_GROUP));'
p5845
aS'\t\tgoto no_ctx;'
p5846
aS'\t}'
p5847
ag119
aS'\tif (!is_kernel_event(event)) {'
p5848
aS'\t\tperf_remove_from_owner(event);'
p5849
aS'\t}'
p5850
ag119
aS'\tctx = perf_event_ctx_lock(event);'
p5851
aS'\tWARN_ON_ONCE(ctx->parent_ctx);'
p5852
aS'\tperf_remove_from_context(event, DETACH_GROUP);'
p5853
ag119
aS'\tif (perf_event_delete_kernel_shared(event) > 0) {'
p5854
aS'\t\tperf_event__state_init(event);'
p5855
aS'\t\tperf_install_in_context(ctx, event, event->cpu);'
p5856
ag119
aS'\t\tperf_event_ctx_unlock(event, ctx);'
p5857
ag119
aS'\t\tperf_event_enable(event);'
p5858
ag119
aS'\t\treturn 0;'
p5859
aS'\t}'
p5860
ag119
aS'\traw_spin_lock_irq(&ctx->lock);'
p5861
aS'\t/*'
p5862
aS'\t * Mark this even as STATE_DEAD, there is no external reference to it'
p5863
aS'\t * anymore.'
p5864
aS'\t *'
p5865
aS'\t * Anybody acquiring event->child_mutex after the below loop _must_'
p5866
aS'\t * also see this, most importantly inherit_event() which will avoid'
p5867
aS'\t * placing more children on the list.'
p5868
aS'\t *'
p5869
aS'\t * Thus this guarantees that we will in fact observe and kill _ALL_'
p5870
aS'\t * child events.'
p5871
aS'\t */'
p5872
aS'\tevent->state = PERF_EVENT_STATE_DEAD;'
p5873
aS'\traw_spin_unlock_irq(&ctx->lock);'
p5874
ag119
aS'\tperf_event_ctx_unlock(event, ctx);'
p5875
ag119
aS'again:'
p5876
aS'\tmutex_lock(&event->child_mutex);'
p5877
aS'\tlist_for_each_entry(child, &event->child_list, child_list) {'
p5878
ag119
aS'\t\t/*'
p5879
aS'\t\t * Cannot change, child events are not migrated, see the'
p5880
aS'\t\t * comment with perf_event_ctx_lock_nested().'
p5881
aS'\t\t */'
p5882
aS'\t\tctx = lockless_dereference(child->ctx);'
p5883
aS'\t\t/*'
p5884
aS'\t\t * Since child_mutex nests inside ctx::mutex, we must jump'
p5885
aS'\t\t * through hoops. We start by grabbing a reference on the ctx.'
p5886
aS'\t\t *'
p5887
aS'\t\t * Since the event cannot get freed while we hold the'
p5888
aS'\t\t * child_mutex, the context must also exist and have a !0'
p5889
aS'\t\t * reference count.'
p5890
aS'\t\t */'
p5891
aS'\t\tget_ctx(ctx);'
p5892
ag119
aS'\t\t/*'
p5893
aS'\t\t * Now that we have a ctx ref, we can drop child_mutex, and'
p5894
aS'\t\t * acquire ctx::mutex without fear of it going away. Then we'
p5895
aS'\t\t * can re-acquire child_mutex.'
p5896
aS'\t\t */'
p5897
aS'\t\tmutex_unlock(&event->child_mutex);'
p5898
aS'\t\tmutex_lock(&ctx->mutex);'
p5899
aS'\t\tmutex_lock(&event->child_mutex);'
p5900
ag119
aS'\t\t/*'
p5901
aS'\t\t * Now that we hold ctx::mutex and child_mutex, revalidate our'
p5902
aS"\t\t * state, if child is still the first entry, it didn't get freed"
p5903
aS'\t\t * and we can continue doing so.'
p5904
aS'\t\t */'
p5905
aS'\t\ttmp = list_first_entry_or_null(&event->child_list,'
p5906
aS'\t\t\t\t\t       struct perf_event, child_list);'
p5907
aS'\t\tif (tmp == child) {'
p5908
aS'\t\t\tperf_remove_from_context(child, DETACH_GROUP);'
p5909
aS'\t\t\tlist_del(&child->child_list);'
p5910
aS'\t\t\tfree_event(child);'
p5911
aS'\t\t\t/*'
p5912
aS'\t\t\t * This matches the refcount bump in inherit_event();'
p5913
aS"\t\t\t * this can't be the last reference."
p5914
aS'\t\t\t */'
p5915
aS'\t\t\tput_event(event);'
p5916
aS'\t\t}'
p5917
ag119
aS'\t\tmutex_unlock(&event->child_mutex);'
p5918
aS'\t\tmutex_unlock(&ctx->mutex);'
p5919
aS'\t\tput_ctx(ctx);'
p5920
aS'\t\tgoto again;'
p5921
aS'\t}'
p5922
aS'\tmutex_unlock(&event->child_mutex);'
p5923
ag119
aS'no_ctx:'
p5924
aS"\tput_event(event); /* Must be the 'last' reference */"
p5925
aS'\treturn 0;'
p5926
as(I4423
I4424
tp5927
(lp5928
S'\tstruct perf_event_context *ctx = event->ctx;'
p5929
aS'\tstruct perf_event *child, *tmp;'
p5930
as(I4425
I4433
tp5931
(lp5932
S'\t/*'
p5933
aS'\t * If the cpu associated to this event is offline, set the event as a'
p5934
aS'\t *  zombie event. The cleanup of the cpu would be done if the CPU is'
p5935
aS'\t *  back online.'
p5936
aS'\t */'
p5937
aS'#if defined CONFIG_HOTPLUG_CPU || defined CONFIG_KEXEC_CORE'
p5938
aS'\tif (event->cpu != -1 && !cpu_online(event->cpu)) {'
p5939
aS'\t\tif (event->state == PERF_EVENT_STATE_ZOMBIE)'
p5940
aS'\t\t\treturn 0;'
p5941
assg9
(I4421
I4430
tp5942
sg11
I1
sg12
g13
sg14
(dp5943
(I4425
I4427
tp5944
(lp5945
S'\tmutex_lock(&pmus_lock);'
p5946
aS'\tret = __perf_event_release_kernel(event);'
p5947
aS'\tmutex_unlock(&pmus_lock);'
p5948
as(I4423
I4423
tp5949
(lp5950
S'\tint ret;'
p5951
as(I4429
I4429
tp5952
(lp5953
S'\treturn ret;'
p5954
asss(g5796
g5797
I11251
tp5955
(dp5956
g9
(I11251
I11258
tp5957
sg11
I1
sg12
g13
sg14
(dp5958
(I11256
I11256
tp5959
(lp5960
S'\tmutex_unlock(&pmus_lock);'
p5961
as(I11253
I11253
tp5962
(lp5963
S'\tmutex_lock(&pmus_lock);'
p5964
asss(g5796
S'perf_event_start_swevents'
p5965
I11156
tp5966
(dp5967
g9
(I11156
I11181
tp5968
sg11
I1
sg12
g13
sg14
(dp5969
(I11178
I11179
tp5970
(lp5971
S'\tmutex_unlock(&pmus_lock);'
p5972
ag119
as(I11163
I11163
tp5973
(lp5974
S'\tmutex_lock(&pmus_lock);'
p5975
asssssS'CVE-2019-2283'
p5976
(dp5977
S'70f432282130_sdm845-perf'
p5978
(dp5979
(S'drivers/soc/qcom/glink_smem_native_xprt.c'
p5980
S'fifo_write_body'
p5981
I526
tp5982
(dp5983
g9
(I526
I568
tp5984
sg11
I4
sg12
g13
sg14
(dp5985
(I536
I539
tp5986
(lp5987
S'\tif (read_index >= fifo_size || *write_index >= fifo_size) {'
p5988
aS'\t\tWARN_ON_ONCE(1);'
p5989
aS'\t\treturn -EINVAL;'
p5990
aS'\t}'
p5991
asss(g5980
S'fifo_read'
p5992
I475
tp5993
(dp5994
g9
(I475
I515
tp5995
sg11
I3
sg12
g13
sg14
(dp5996
(I486
I489
tp5997
(lp5998
S'\tif (read_index >= fifo_size || write_index >= fifo_size) {'
p5999
aS'\t\tWARN_ON_ONCE(1);'
p6000
aS'\t\treturn -EINVAL;'
p6001
aS'\t}'
p6002
assssS'2dc9dcdbb971_sdm845-perf'
p6003
(dp6004
(g5980
g5981
I524
tp6005
(dp6006
g9
(I524
I564
tp6007
sg11
I4
sg12
g13
sg14
(dp6008
(I534
I535
tp6009
(lp6010
S'\tif (read_index >= fifo_size || *write_index >= fifo_size)'
p6011
aS'\t\treturn 0;'
p6012
asss(g5980
g5992
I475
tp6013
(dp6014
g9
(I475
I513
tp6015
sg11
I3
sg12
g13
sg14
(dp6016
(I486
I487
tp6017
(lp6018
S'\tif (read_index >= fifo_size || write_index >= fifo_size)'
p6019
aS'\t\treturn 0;'
p6020
assssS'c36d54c34fef_sdm845-perf'
p6021
(dp6022
(g5980
g5981
I524
tp6023
(dp6024
g9
(I524
I564
tp6025
sg11
I4
sg12
g13
sg14
(dp6026
(I534
I535
tp6027
(lp6028
S'\tif (read_index > fifo_size && *write_index > fifo_size)'
p6029
aS'\t\treturn 0;'
p6030
asss(g5980
g5992
I475
tp6031
(dp6032
g9
(I475
I513
tp6033
sg11
I3
sg12
g13
sg14
(dp6034
(I486
I487
tp6035
(lp6036
S'\tif (read_index > fifo_size && write_index > fifo_size)'
p6037
aS'\t\treturn 0;'
p6038
asssssS'CVE-2019-2287'
p6039
(dp6040
S'de6abb23dc05_sdm845-perf'
p6041
(dp6042
(S'drivers/media/platform/msm/vidc/hfi_response_handler.c'
p6043
S'hfi_fill_codec_info'
p6044
I749
tp6045
(dp6046
g9
(I749
I819
tp6047
sg11
I2
sg12
g13
sg14
(dp6048
(I798
I802
tp6049
(lp6050
S'\t\t\tif (codec_count == VIDC_MAX_SESSIONS) {'
p6051
aS'\t\t\t\tdprintk(VIDC_ERR,'
p6052
aS'\t\t\t\t\t"Max supported sessions reached");'
p6053
aS'\t\t\t\tbreak;'
p6054
aS'\t\t\t}'
p6055
as(I782
I786
tp6056
(lp6057
S'\t\t\tif (codec_count == VIDC_MAX_DECODE_SESSIONS) {'
p6058
aS'\t\t\t\tdprintk(VIDC_ERR,'
p6059
aS'\t\t\t\t\t"Max supported decoder sessions reached");'
p6060
aS'\t\t\t\tbreak;'
p6061
aS'\t\t\t}'
p6062
assssS'da65e2d8778e_sdm845-perf'
p6063
(dp6064
(g6043
g6044
I799
tp6065
(dp6066
g27
(dp6067
(I800
I800
tp6068
(lp6069
S'\t\tstruct vidc_hal_sys_init_done *sys_init_done) {'
p6070
as(I866
I867
tp6071
(lp6072
S'\t\tstruct hfi_max_sessions_supported *prop ='
p6073
aS'\t\t\t(struct hfi_max_sessions_supported *)'
p6074
assg9
(I799
I882
tp6075
sg11
I3
sg12
g13
sg14
(dp6076
(I866
I871
tp6077
(lp6078
S'\t\tstruct hfi_max_sessions_supported *prop;'
p6079
ag119
aS'\t\tif (!validate_pkt_size(rem_size - sizeof(u32), sizeof(struct'
p6080
aS'\t\t\t\thfi_max_sessions_supported)))'
p6081
aS'\t\t\treturn -E2BIG;'
p6082
aS'\t\tprop = (struct hfi_max_sessions_supported *)'
p6083
as(I837
I841
tp6084
(lp6085
S'\t\t\tif (codec_count == VIDC_MAX_DECODE_SESSIONS) {'
p6086
aS'\t\t\t\tdprintk(VIDC_ERR,'
p6087
aS'\t\t\t\t\t"Max supported decoder sessions reached");'
p6088
aS'\t\t\t\tbreak;'
p6089
aS'\t\t\t}'
p6090
as(I800
I800
tp6091
(lp6092
S'\t\tstruct vidc_hal_sys_init_done *sys_init_done, u32 rem_size) {'
p6093
as(I853
I857
tp6094
(lp6095
S'\t\t\tif (codec_count == VIDC_MAX_SESSIONS) {'
p6096
aS'\t\t\t\tdprintk(VIDC_ERR,'
p6097
aS'\t\t\t\t\t"Max supported sessions reached");'
p6098
aS'\t\t\t\tbreak;'
p6099
aS'\t\t\t}'
p6100
as(I820
I821
tp6101
(lp6102
S'\t\trem_size -='
p6103
aS'\t\t\tsizeof(struct hfi_codec_supported) + sizeof(u32);'
p6104
as(I810
I812
tp6105
(lp6106
S'\t\tif (!validate_pkt_size(rem_size - sizeof(u32),'
p6107
aS'\t\t\t\t       sizeof(struct hfi_codec_supported)))'
p6108
aS'\t\t\treturn -E2BIG;'
p6109
as(I876
I877
tp6110
(lp6111
S'\t\trem_size -='
p6112
aS'\t\t\tsizeof(struct hfi_max_sessions_supported) + sizeof(u32);'
p6113
as(I862
I863
tp6114
(lp6115
S'\tif (!validate_pkt_size(rem_size, sizeof(u32)))'
p6116
aS'\t\treturn -E2BIG;'
p6117
asssssS'CVE-2018-20961'
p6118
(dp6119
S'e7da47f2cfe8_sdm845-perf'
p6120
(dp6121
(S'drivers/usb/gadget/u_f.h'
p6122
S'free_ep_req'
p6123
I65
tp6124
(dp6125
g9
(I65
I71
tp6126
sg11
I2
sg12
g13
sg14
(dp6127
(I67
I67
tp6128
(lp6129
S'\tWARN_ON(req->buf == NULL);'
p6130
as(I69
I69
tp6131
(lp6132
S'\treq->buf = NULL;'
p6133
asss(S'drivers/usb/gadget/function/f_midi.c'
p6134
S'f_midi_set_alt'
p6135
I370
tp6136
(dp6137
g27
(dp6138
(I416
I416
tp6139
(lp6140
S'\t\t\tfree_ep_req(midi->out_ep, req);'
p6141
assg9
(I370
I423
tp6142
sg11
I3
sg12
g13
sg14
(dp6143
(I416
I417
tp6144
(lp6145
S'\t\t\tif (req->buf != NULL)'
p6146
aS'\t\t\t\tfree_ep_req(midi->out_ep, req);'
p6147
asssssS'CVE-2019-2284'
p6148
(dp6149
S'1d7b97667c43_sdm845-perf'
p6150
(dp6151
(S'drivers/media/platform/msm/camera/cam_req_mgr/cam_req_mgr_core.c'
p6152
S'cam_req_mgr_link'
p6153
I2416
tp6154
(dp6155
g27
(dp6156
(I2446
I2447
tp6157
(lp6158
S'\tmutex_lock(&g_crm_core_dev->crm_lock);'
p6159
ag119
assg9
(I2416
I2521
tp6160
sg11
I1
sg12
g13
sg14
(dp6161
(I2435
I2436
tp6162
(lp6163
S'\tmutex_lock(&g_crm_core_dev->crm_lock);'
p6164
ag119
as(I2442
I2442
tp6165
(lp6166
S'\t\tmutex_unlock(&g_crm_core_dev->crm_lock);'
p6167
asssssS'CVE-2018-1000204'
p6168
(dp6169
S'98ae89537923_sdm845-perf'
p6170
(dp6171
(S'drivers/scsi/sg.c'
p6172
S'sg_build_indirect'
p6173
I1852
tp6174
(dp6175
g27
(dp6176
(I1900
I1900
tp6177
(lp6178
S'\t\tschp->pages[k] = alloc_pages(gfp_mask, order);'
p6179
assg9
(I1852
I1934
tp6180
sg11
I3
sg12
g13
sg14
(dp6181
(I1900
I1900
tp6182
(lp6183
S'\t\tschp->pages[k] = alloc_pages(gfp_mask | __GFP_ZERO, order);'
p6184
asssssS'CVE-2018-3564'
p6185
(dp6186
S'd7461eb53ce1_sdm845-perf'
p6187
(dp6188
(S'drivers/char/adsprpc.c'
p6189
S'fastrpc_file_free'
p6190
I2894
tp6191
(dp6192
g27
(dp6193
(I2922
I2922
tp6194
(lp6195
S'\tfastrpc_buf_list_free(fl);'
p6196
assg9
(I2894
I2961
tp6197
sg11
I1
sg12
g13
sg14
(dp6198
(I2922
I2922
tp6199
(lp6200
S'\tfastrpc_cached_buf_list_free(fl);'
p6201
as(I2954
I2954
tp6202
(lp6203
S'\tfastrpc_remote_buf_list_free(fl);'
p6204
as(I2919
I2920
tp6205
(lp6206
S'\tif (!IS_ERR_OR_NULL(fl->init_mem))'
p6207
aS'\t\tfastrpc_buf_free(fl->init_mem, 0);'
p6208
as(I2958
I2958
tp6209
(lp6210
S'\tmutex_destroy(&fl->map_mutex);'
p6211
as(I2910
I2910
tp6212
(lp6213
S'\tkfree(fl->debug_buf);'
p6214
assssS'3f308e403e30_sdm845-perf'
p6215
(dp6216
(g6189
g6190
I2707
tp6217
(dp6218
g9
(I2707
I2770
tp6219
sg11
I1
sg12
g13
sg14
(dp6220
(I2767
I2767
tp6221
(lp6222
S'\tmutex_destroy(&fl->map_mutex);'
p6223
assssS'c2cff6971db3_sdm845-perf'
p6224
(dp6225
(g6189
g6190
I2772
tp6226
(dp6227
g9
(I2772
I2836
tp6228
sg11
I1
sg12
g13
sg14
(dp6229
(I2788
I2788
tp6230
(lp6231
S'\tkfree(fl->debug_buf);'
p6232
as(I2833
I2833
tp6233
(lp6234
S'\tmutex_destroy(&fl->map_mutex);'
p6235
assssS'd5d55ba074e6_sdm845-perf'
p6236
(dp6237
(g6189
S'fastrpc_device_release'
p6238
I2300
tp6239
(dp6240
g27
(dp6241
(I2309
I2309
tp6242
(lp6243
S'\t\tmutex_destroy(&fl->map_mutex);'
p6244
assg9
(I2300
I2313
tp6245
sg11
I2
sg12
g13
ssssS'CVE-2019-9245'
p6246
(dp6247
S'de6abb23dc05_sdm845-perf'
p6248
(dp6249
(S'fs/f2fs/xattr.c'
p6250
S'f2fs_getxattr'
p6251
I472
tp6252
(dp6253
g27
(dp6254
(I490
I490
tp6255
(lp6256
S'\t\t\t\t&entry, &base_addr);'
p6257
assg9
(I472
I515
tp6258
sg11
I6
sg12
g13
sg14
(dp6259
(I490
I490
tp6260
(lp6261
S'\t\t\t\t&entry, &base_addr, &base_size);'
p6262
as(I479
I479
tp6263
(lp6264
S'\tint base_size;'
p6265
as(I504
I508
tp6266
(lp6267
g119
aS'\t\tif (base_size - (pval - (char *)base_addr) < size) {'
p6268
aS'\t\t\terror = -ERANGE;'
p6269
aS'\t\t\tgoto out;'
p6270
aS'\t\t}'
p6271
asss(g6250
S'lookup_all_xattrs'
p6272
I288
tp6273
(dp6274
g27
(dp6275
(I302
I303
tp6276
(lp6277
S'\ttxattr_addr = f2fs_kzalloc(F2FS_I_SB(inode),'
p6278
aS'\t\t\tinline_size + size + XATTR_PADDING_SIZE, GFP_NOFS);'
p6279
as(I291
I291
tp6280
(lp6281
S'\t\t\t\tvoid **base_addr)'
p6282
as(I315
I315
tp6283
(lp6284
S'\t\tif (*xe)'
p6285
assg9
(I288
I345
tp6286
sg11
I8
sg12
g13
sg14
(dp6287
(I302
I303
tp6288
(lp6289
S'\t*base_size = inline_size + size + XATTR_PADDING_SIZE;'
p6290
aS'\ttxattr_addr = f2fs_kzalloc(F2FS_I_SB(inode), *base_size, GFP_NOFS);'
p6291
as(I315
I316
tp6292
(lp6293
S'\t\tif (*xe) {'
p6294
aS'\t\t\t*base_size = inline_size;'
p6295
as(I291
I291
tp6296
(lp6297
S'\t\t\t\tvoid **base_addr, int *base_size)'
p6298
as(I318
I318
tp6299
(lp6300
S'\t\t}'
p6301
assssS'a42d482efe49_sdm845-perf'
p6302
(dp6303
(g6250
g6272
I300
tp6304
(dp6305
g27
(dp6306
(I361
I361
tp6307
(lp6308
S'\tkzfree(txattr_addr);'
p6309
as(I314
I315
tp6310
(lp6311
S'\ttxattr_addr = f2fs_kzalloc(F2FS_I_SB(inode),'
p6312
aS'\t\t\tinline_size + size + XATTR_PADDING_SIZE, GFP_NOFS);'
p6313
as(I347
I347
tp6314
(lp6315
S'\t*xe = __find_xattr(cur_addr, index, len, name);'
p6316
as(I308
I308
tp6317
(lp6318
S'\tunsigned int size = xnid ? VALID_XATTR_BLOCK_SIZE : 0;'
p6319
as(I329
I329
tp6320
(lp6321
S'\t\tif (*xe)'
p6322
as(I311
I311
tp6323
(lp6324
S'\tif (!size && !inline_size)'
p6325
as(I305
I305
tp6326
(lp6327
S'\tvoid *cur_addr, *txattr_addr, *last_addr = NULL;'
p6328
as(I303
I303
tp6329
(lp6330
S'\t\t\t\tvoid **base_addr)'
p6331
assg9
(I300
I363
tp6332
sg11
I8
sg12
g13
sg14
(dp6333
(I305
I306
tp6334
(lp6335
S'\tvoid *cur_addr, *txattr_addr, *last_txattr_addr;'
p6336
aS'\tvoid *last_addr = NULL;'
p6337
as(I314
I315
tp6338
(lp6339
S'\t*base_size = XATTR_SIZE(xnid, inode) + XATTR_PADDING_SIZE;'
p6340
aS'\ttxattr_addr = f2fs_kzalloc(F2FS_I_SB(inode), *base_size, GFP_NOFS);'
p6341
as(I332
I332
tp6342
(lp6343
S'\t\t}'
p6344
as(I361
I361
tp6345
(lp6346
S'\tkvfree(txattr_addr);'
p6347
as(I311
I311
tp6348
(lp6349
S'\tif (!xnid && !inline_size)'
p6350
as(I329
I330
tp6351
(lp6352
S'\t\tif (*xe) {'
p6353
aS'\t\t\t*base_size = inline_size;'
p6354
as(I347
I351
tp6355
(lp6356
S'\t*xe = __find_xattr(cur_addr, last_txattr_addr, index, len, name);'
p6357
aS'\tif (!*xe) {'
p6358
aS'\t\terr = -EFAULT;'
p6359
aS'\t\tgoto out;'
p6360
aS'\t}'
p6361
as(I319
I320
tp6362
(lp6363
S'\tlast_txattr_addr = (void *)txattr_addr + XATTR_SIZE(xnid, inode);'
p6364
ag119
as(I303
I303
tp6365
(lp6366
S'\t\t\t\tvoid **base_addr, int *base_size)'
p6367
asss(g6250
g6251
I490
tp6368
(dp6369
g27
(dp6370
(I508
I508
tp6371
(lp6372
S'\t\t\t\t&entry, &base_addr);'
p6373
as(I531
I531
tp6374
(lp6375
S'\tkzfree(base_addr);'
p6376
assg9
(I490
I533
tp6377
sg11
I6
sg12
g13
sg14
(dp6378
(I522
I526
tp6379
(lp6380
g119
aS'\t\tif (base_size - (pval - (char *)base_addr) < size) {'
p6381
aS'\t\t\terror = -ERANGE;'
p6382
aS'\t\t\tgoto out;'
p6383
aS'\t\t}'
p6384
as(I531
I531
tp6385
(lp6386
S'\tkvfree(base_addr);'
p6387
as(I497
I497
tp6388
(lp6389
S'\tint base_size;'
p6390
as(I508
I508
tp6391
(lp6392
S'\t\t\t\t&entry, &base_addr, &base_size);'
p6393
assssS'7bb76790999d_sdm845-perf'
p6394
(dp6395
(g6250
g6272
I300
tp6396
(dp6397
g27
(dp6398
(I364
I364
tp6399
(lp6400
S'\tkzfree(txattr_addr);'
p6401
as(I314
I315
tp6402
(lp6403
S'\ttxattr_addr = f2fs_kzalloc(F2FS_I_SB(inode),'
p6404
aS'\t\t\tinline_size + size + XATTR_PADDING_SIZE, GFP_NOFS);'
p6405
as(I347
I347
tp6406
(lp6407
S'\t*xe = __find_xattr(cur_addr, index, len, name);'
p6408
as(I308
I308
tp6409
(lp6410
S'\tunsigned int size = xnid ? VALID_XATTR_BLOCK_SIZE : 0;'
p6411
as(I329
I329
tp6412
(lp6413
S'\t\tif (*xe)'
p6414
as(I311
I311
tp6415
(lp6416
S'\tif (!size && !inline_size)'
p6417
as(I305
I305
tp6418
(lp6419
S'\tvoid *cur_addr, *txattr_addr, *last_addr = NULL;'
p6420
as(I303
I303
tp6421
(lp6422
S'\t\t\t\tvoid **base_addr)'
p6423
assg9
(I300
I366
tp6424
sg11
I8
sg12
g13
sg14
(dp6425
(I305
I306
tp6426
(lp6427
S'\tvoid *cur_addr, *txattr_addr, *last_txattr_addr;'
p6428
aS'\tvoid *last_addr = NULL;'
p6429
as(I332
I332
tp6430
(lp6431
S'\t\t}'
p6432
as(I314
I315
tp6433
(lp6434
S'\t*base_size = XATTR_SIZE(xnid, inode) + XATTR_PADDING_SIZE;'
p6435
aS'\ttxattr_addr = f2fs_kzalloc(F2FS_I_SB(inode), *base_size, GFP_NOFS);'
p6436
as(I364
I364
tp6437
(lp6438
S'\tkvfree(txattr_addr);'
p6439
as(I311
I311
tp6440
(lp6441
S'\tif (!xnid && !inline_size)'
p6442
as(I329
I330
tp6443
(lp6444
S'\t\tif (*xe) {'
p6445
aS'\t\t\t*base_size = inline_size;'
p6446
as(I347
I354
tp6447
(lp6448
S'\t*xe = __find_xattr(cur_addr, last_txattr_addr, index, len, name);'
p6449
aS'\tif (!*xe) {'
p6450
aS'\t\tf2fs_err(F2FS_I_SB(inode), "inode (%lu) has corrupted xattr",'
p6451
aS'\t\t\t\t\t\t\t\tinode->i_ino);'
p6452
aS'\t\tset_sbi_flag(F2FS_I_SB(inode), SBI_NEED_FSCK);'
p6453
aS'\t\terr = -EFSCORRUPTED;'
p6454
aS'\t\tgoto out;'
p6455
aS'\t}'
p6456
as(I319
I320
tp6457
(lp6458
S'\tlast_txattr_addr = (void *)txattr_addr + XATTR_SIZE(xnid, inode);'
p6459
ag119
as(I303
I303
tp6460
(lp6461
S'\t\t\t\tvoid **base_addr, int *base_size)'
p6462
asssssS'CVE-2019-10558'
p6463
(dp6464
S'33ef3ba97d39_sdm845-perf'
p6465
(dp6466
(S'drivers/char/adsprpc.c'
p6467
S'put_args'
p6468
I1688
tp6469
(dp6470
g27
(dp6471
(I1699
I1699
tp6472
(lp6473
S'\tremote_arg64_t *rpra = ctx->rpra;'
p6474
assg9
(I1688
I1745
tp6475
sg11
I3
sg12
g13
sg14
(dp6476
(I1699
I1699
tp6477
(lp6478
S'\tremote_arg64_t *rpra = ctx->lrpra;'
p6479
asss(g6467
S'context_free'
p6480
I1263
tp6481
(dp6482
g9
(I1263
I1292
tp6483
sg11
I1
sg12
g13
sg14
(dp6484
(I1278
I1278
tp6485
(lp6486
S'\tfastrpc_buf_free(ctx->lbuf, 1);'
p6487
asss(g6467
S'inv_args'
p6488
I1802
tp6489
(dp6490
g27
(dp6491
(I1806
I1806
tp6492
(lp6493
S'\tremote_arg64_t *rpra = ctx->rpra;'
p6494
assg9
(I1802
I1837
tp6495
sg11
I1
sg12
g13
sg14
(dp6496
(I1806
I1806
tp6497
(lp6498
S'\tremote_arg64_t *rpra = ctx->lrpra;'
p6499
asss(g6467
S'get_args'
p6500
I1422
tp6501
(dp6502
g27
(dp6503
(I1434
I1434
tp6504
(lp6505
S'\tsize_t rlen = 0, copylen = 0, metalen = 0;'
p6506
as(I1492
I1492
tp6507
(lp6508
S'\t/* calculate len requreed for copying */'
p6509
as(I1629
I1629
tp6510
(lp6511
S'\t\trpra[i].buf.pv = (args - ctx->overps[oix]->offset);'
p6512
as(I1590
I1590
tp6513
(lp6514
S'\t\trpra[i].buf.pv = buf;'
p6515
as(I1556
I1556
tp6516
(lp6517
S'\tfor (i = 0; rpra && i < inbufs + outbufs; ++i) {'
p6518
as(I1677
I1680
tp6519
(lp6520
S'\tfor (i = bufs; rpra && i < bufs + handles; i++) {'
p6521
aS'\t\trpra[i].dma.fd = ctx->fds[i];'
p6522
aS'\t\trpra[i].dma.len = (uint32_t)lpra[i].buf.len;'
p6523
aS'\t\trpra[i].dma.offset = (uint32_t)(uintptr_t)lpra[i].buf.pv;'
p6524
as(I1561
I1562
tp6525
(lp6526
S'\t\trpra[i].buf.pv = 0;'
p6527
aS'\t\trpra[i].buf.len = len;'
p6528
as(I1662
I1662
tp6529
(lp6530
S'\t\tif (rpra && rpra[i].buf.len && ctx->overps[oix]->mstart) {'
p6531
as(I1610
I1610
tp6532
(lp6533
S'\tfor (oix = 0; rpra && oix < inbufs + outbufs; ++oix) {'
p6534
as(I1425
I1425
tp6535
(lp6536
S'\tremote_arg64_t *rpra;'
p6537
assg9
(I1422
I1686
tp6538
sg11
I2
sg12
g13
sg14
(dp6539
(I1434
I1434
tp6540
(lp6541
S'\tsize_t rlen = 0, copylen = 0, metalen = 0, lrpralen = 0;'
p6542
as(I1556
I1556
tp6543
(lp6544
S'\tfor (i = 0; rpra && lrpra && i < inbufs + outbufs; ++i) {'
p6545
as(I1610
I1610
tp6546
(lp6547
S'\tfor (oix = 0; rpra && lrpra && oix < inbufs + outbufs; ++oix) {'
p6548
as(I1629
I1630
tp6549
(lp6550
S'\t\trpra[i].buf.pv = lrpra[i].buf.pv ='
p6551
aS'\t\t\t (args - ctx->overps[oix]->offset);'
p6552
as(I1590
I1590
tp6553
(lp6554
S'\t\trpra[i].buf.pv = lrpra[i].buf.pv = buf;'
p6555
as(I1492
I1505
tp6556
(lp6557
S'\t/* allocate new local rpra buffer */'
p6558
aS'\tlrpralen = (size_t)&list[0];'
p6559
aS'\tif (lrpralen) {'
p6560
aS'\t\terr = fastrpc_buf_alloc(ctx->fl, lrpralen, 0, 0, 0, &ctx->lbuf);'
p6561
aS'\t\tif (err)'
p6562
aS'\t\t\tgoto bail;'
p6563
aS'\t}'
p6564
aS'\tif (ctx->lbuf->virt)'
p6565
aS'\t\tmemset(ctx->lbuf->virt, 0, lrpralen);'
p6566
ag119
aS'\tlrpra = ctx->lbuf->virt;'
p6567
aS'\tctx->lrpra = lrpra;'
p6568
ag119
aS'\t/* calculate len required for copying */'
p6569
as(I1561
I1562
tp6570
(lp6571
S'\t\trpra[i].buf.pv = lrpra[i].buf.pv = 0;'
p6572
aS'\t\trpra[i].buf.len = lrpra[i].buf.len = len;'
p6573
as(I1677
I1681
tp6574
(lp6575
S'\tfor (i = bufs; rpra && lrpra && i < bufs + handles; i++) {'
p6576
aS'\t\trpra[i].dma.fd = lrpra[i].dma.fd = ctx->fds[i];'
p6577
aS'\t\trpra[i].dma.len = lrpra[i].dma.len = (uint32_t)lpra[i].buf.len;'
p6578
aS'\t\trpra[i].dma.offset = lrpra[i].dma.offset ='
p6579
aS'\t\t\t (uint32_t)(uintptr_t)lpra[i].buf.pv;'
p6580
as(I1662
I1663
tp6581
(lp6582
S'\t\tif (rpra && lrpra && rpra[i].buf.len &&'
p6583
aS'\t\t\tctx->overps[oix]->mstart) {'
p6584
as(I1425
I1425
tp6585
(lp6586
S'\tremote_arg64_t *rpra, *lrpra;'
p6587
asssssS'CVE-2019-10556'
p6588
(dp6589
S'bb1dd12b9a61_sdm845-perf'
p6590
(dp6591
(S'drivers/gpu/drm/msm/dsi-staging/dsi_display.c'
p6592
S'debugfs_dump_info_read'
p6593
I999
tp6594
(dp6595
g9
(I999
I1051
tp6596
sg11
I4
sg12
g13
sg14
(dp6597
(I1039
I1041
tp6598
(lp6599
S'\tif (len > user_len)'
p6600
aS'\t\tlen = user_len;'
p6601
ag119
asssssS'CVE-2018-19824'
p6602
(dp6603
S'c36d54c34fef_sdm845-perf'
p6604
(dp6605
(S'sound/usb/card.c'
p6606
S'usb_audio_probe'
p6607
I626
tp6608
(dp6609
g27
(dp6610
(I751
I751
tp6611
(lp6612
S'\t\tatomic_dec(&chip->active);'
p6613
assg9
(I626
I754
tp6614
sg11
I2
sg12
g13
sg14
(dp6615
(I745
I748
tp6616
(lp6617
S'\t\t/* chip->active is inside the chip->card object,'
p6618
aS'\t\t * decrement before memory is possibly returned.'
p6619
aS'\t\t */'
p6620
aS'\t\tatomic_dec(&chip->active);'
p6621
asssssS'CVE-2019-14079'
p6622
(dp6623
S'7dca8885b04d_sdm845-perf'
p6624
(dp6625
(S'drivers/usb/gadget/udc/core.c'
p6626
S'usb_gadget_map_request_by_dev'
p6627
I835
tp6628
(dp6629
g9
(I835
I865
tp6630
sg11
I3
sg12
g13
sg14
(dp6631
(I860
I861
tp6632
(lp6633
g119
aS'\t\treq->dma_mapped = 1;'
p6634
asss(g6626
S'usb_gadget_unmap_request_by_dev'
p6635
I875
tp6636
(dp6637
g27
(dp6638
(I886
I886
tp6639
(lp6640
S'\t} else if (req->dma != DMA_ERROR_CODE) {'
p6641
assg9
(I875
I891
tp6642
sg11
I3
sg12
g13
sg14
(dp6643
(I889
I889
tp6644
(lp6645
S'\t\treq->dma_mapped = 0;'
p6646
as(I886
I886
tp6647
(lp6648
S'\t} else if (req->dma_mapped) {'
p6649
asssssS'CVE-2020-0030'
p6650
(dp6651
S'7bb76790999d_sdm845-perf'
p6652
(dp6653
(S'drivers/android/binder.c'
p6654
S'binder_thread_release'
p6655
I4716
tp6656
(dp6657
g27
(dp6658
(I4731
I4731
tp6659
(lp6660
S'\tproc->tmp_ref++;'
p6661
assg9
(I4716
I4800
tp6662
sg11
I2
sg12
g13
sg14
(dp6663
(I4772
I4783
tp6664
(lp6665
g119
aS'\t/*'
p6666
aS'\t * If this thread used poll, make sure we remove the waitqueue'
p6667
aS'\t * from any epoll data structures holding it with POLLFREE.'
p6668
aS"\t * waitqueue_active() is safe to use here because we're holding"
p6669
aS'\t * the inner lock.'
p6670
aS'\t */'
p6671
aS'\tif ((thread->looper & BINDER_LOOPER_STATE_POLL) &&'
p6672
aS'\t    waitqueue_active(&thread->wait)) {'
p6673
aS'\t\twake_up_poll(&thread->wait, POLLHUP | POLLFREE);'
p6674
aS'\t}'
p6675
ag119
as(I4731
I4731
tp6676
(lp6677
S'\tatomic_inc(&proc->tmp_ref);'
p6678
as(I4786
I4794
tp6679
(lp6680
S'\t/*'
p6681
aS'\t * This is needed to avoid races between wake_up_poll() above and'
p6682
aS'\t * and ep_remove_waitqueue() called for other reasons (eg the epoll file'
p6683
aS'\t * descriptor being closed); ep_remove_waitqueue() holds an RCU read'
p6684
aS"\t * lock, so we can be sure it's done after calling synchronize_rcu()."
p6685
aS'\t */'
p6686
aS'\tif (thread->looper & BINDER_LOOPER_STATE_POLL)'
p6687
aS'\t\tsynchronize_rcu();'
p6688
ag119
assssS'83ca41f3fcc1_sdm845-perf'
p6689
(dp6690
(g6654
g6655
I4482
tp6691
(dp6692
g9
(I4482
I4566
tp6693
sg11
I2
sg12
g13
sg14
(dp6694
(I4538
I4549
tp6695
(lp6696
g119
aS'\t/*'
p6697
aS'\t * If this thread used poll, make sure we remove the waitqueue'
p6698
aS'\t * from any epoll data structures holding it with POLLFREE.'
p6699
aS"\t * waitqueue_active() is safe to use here because we're holding"
p6700
aS'\t * the inner lock.'
p6701
aS'\t */'
p6702
aS'\tif ((thread->looper & BINDER_LOOPER_STATE_POLL) &&'
p6703
aS'\t    waitqueue_active(&thread->wait)) {'
p6704
aS'\t\twake_up_poll(&thread->wait, POLLHUP | POLLFREE);'
p6705
aS'\t}'
p6706
ag119
as(I4552
I4560
tp6707
(lp6708
S'\t/*'
p6709
aS'\t * This is needed to avoid races between wake_up_poll() above and'
p6710
aS'\t * and ep_remove_waitqueue() called for other reasons (eg the epoll file'
p6711
aS'\t * descriptor being closed); ep_remove_waitqueue() holds an RCU read'
p6712
aS"\t * lock, so we can be sure it's done after calling synchronize_rcu()."
p6713
aS'\t */'
p6714
aS'\tif (thread->looper & BINDER_LOOPER_STATE_POLL)'
p6715
aS'\t\tsynchronize_rcu();'
p6716
ag119
asssssS'CVE-2019-2333'
p6717
(dp6718
S'6c6aaf4e8330_sdm845-perf'
p6719
(dp6720
(S'drivers/platform/msm/ipa/ipa_v3/ipa_intf.c'
p6721
S'ipa3_read'
p6722
I721
tp6723
(dp6724
g27
(dp6725
(I764
I765
tp6726
(lp6727
S'\t\t\t\tif (copy_to_user(buf, msg->buff,'
p6728
aS'\t\t\t\t\t\t  msg->meta.msg_len)) {'
p6729
assg9
(I721
I812
tp6730
sg11
I4
sg12
g13
sg14
(dp6731
(I764
I772
tp6732
(lp6733
S'\t\t\t\tif (count >= msg->meta.msg_len) {'
p6734
aS'\t\t\t\t\tif (copy_to_user(buf, msg->buff,'
p6735
aS'\t\t\t\t\t\t\tmsg->meta.msg_len)) {'
p6736
aS'\t\t\t\t\t\tret = -EFAULT;'
p6737
aS'\t\t\t\t\t\tkfree(msg);'
p6738
aS'\t\t\t\t\t\tmsg = NULL;'
p6739
aS'\t\t\t\t\t\tbreak;'
p6740
aS'\t\t\t\t\t}'
p6741
aS'\t\t\t\t} else {'
p6742
as(I748
I753
tp6743
(lp6744
S'\t\t\tif (count < sizeof(struct ipa_msg_meta)) {'
p6745
aS'\t\t\t\tkfree(msg);'
p6746
aS'\t\t\t\tmsg = NULL;'
p6747
aS'\t\t\t\tret = -EFAULT;'
p6748
aS'\t\t\t\tbreak;'
p6749
aS'\t\t\t}'
p6750
asss(S'drivers/platform/msm/ipa/ipa_v2/ipa_intf.c'
p6751
S'ipa_read'
p6752
I715
tp6753
(dp6754
g27
(dp6755
(I756
I757
tp6756
(lp6757
S'\t\t\t\tif (copy_to_user(buf, msg->buff,'
p6758
aS'\t\t\t\t\t\t  msg->meta.msg_len)) {'
p6759
as(I747
I747
tp6760
(lp6761
S'\t\t\t\t\t  sizeof(struct ipa_msg_meta))) {'
p6762
assg9
(I715
I805
tp6763
sg11
I4
sg12
g13
sg14
(dp6764
(I756
I764
tp6765
(lp6766
S'\t\t\t\tif (count >= msg->meta.msg_len) {'
p6767
aS'\t\t\t\t\tif (copy_to_user(buf, msg->buff,'
p6768
aS'\t\t\t\t\t\t\tmsg->meta.msg_len)) {'
p6769
aS'\t\t\t\t\t\tkfree(msg);'
p6770
aS'\t\t\t\t\t\tmsg = NULL;'
p6771
aS'\t\t\t\t\t\tret = -EFAULT;'
p6772
aS'\t\t\t\t\t\tbreak;'
p6773
aS'\t\t\t\t\t}'
p6774
aS'\t\t\t\t} else {'
p6775
as(I740
I745
tp6776
(lp6777
S'\t\t\tif (count < sizeof(struct ipa_msg_meta)) {'
p6778
aS'\t\t\t\tkfree(msg);'
p6779
aS'\t\t\t\tmsg = NULL;'
p6780
aS'\t\t\t\tret = -EFAULT;'
p6781
aS'\t\t\t\tbreak;'
p6782
aS'\t\t\t}'
p6783
as(I747
I747
tp6784
(lp6785
S'\t\t\t\t\tsizeof(struct ipa_msg_meta))) {'
p6786
asssssS'CVE-2019-14029'
p6787
(dp6788
S'7bb76790999d_sdm845-perf'
p6789
(dp6790
(S'drivers/gpu/msm/adreno_dispatch.c'
p6791
S'adreno_dispatcher_queue_cmds'
p6792
I1378
tp6793
(dp6794
g9
(I1378
I1508
tp6795
sg11
I5
sg12
g13
sg14
(dp6796
(I1414
I1429
tp6797
(lp6798
S'\t/*'
p6799
aS'\t * If there is only one drawobj in the array and it is of'
p6800
aS'\t * type SYNCOBJ_TYPE, skip comparing user_ts as it can be 0'
p6801
aS'\t */'
p6802
aS'\tif (!(count == 1 && drawobj[0]->type == SYNCOBJ_TYPE) &&'
p6803
aS'\t\t(drawctxt->base.flags & KGSL_CONTEXT_USER_GENERATED_TS)) {'
p6804
aS'\t\t/*'
p6805
aS'\t\t * User specified timestamps need to be greater than the last'
p6806
aS'\t\t * issued timestamp in the context'
p6807
aS'\t\t */'
p6808
aS'\t\tif (timestamp_cmp(drawctxt->timestamp, user_ts) >= 0) {'
p6809
aS'\t\t\tspin_unlock(&drawctxt->lock);'
p6810
aS'\t\t\treturn -ERANGE;'
p6811
aS'\t\t}'
p6812
aS'\t}'
p6813
ag119
asssssS'CVE-2019-2330'
p6814
(dp6815
S'19a8101c2309_sdm845-perf'
p6816
(dp6817
(S'drivers/staging/android/ion/ion_system_heap.c'
p6818
S'alloc_from_pool_preferred'
p6819
I270
tp6820
(dp6821
g9
(I270
I314
tp6822
sg11
I4
sg12
g13
sg14
(dp6823
(I312
I312
tp6824
(lp6825
S'force_alloc:'
p6826
as(I278
I280
tp6827
(lp6828
S'\tif (buffer->flags & ION_FLAG_POOL_FORCE_ALLOC)'
p6829
aS'\t\tgoto force_alloc;'
p6830
ag119
asssssS'CVE-2018-13893'
p6831
(dp6832
S'd7461eb53ce1_sdm845-perf'
p6833
(dp6834
(S'drivers/char/diag/diag_masks.c'
p6835
S'diag_cmd_get_ssid_range'
p6836
I572
tp6837
(dp6838
g27
(dp6839
(I613
I613
tp6840
(lp6841
S'\trsp.count = driver->msg_mask_tbl_count;'
p6842
as(I617
I617
tp6843
(lp6844
S'\tfor (i = 0; i <  driver->msg_mask_tbl_count; i++, mask_ptr++) {'
p6845
assg9
(I572
I631
tp6846
sg11
I5
sg12
g13
sg14
(dp6847
(I617
I617
tp6848
(lp6849
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask_ptr++) {'
p6850
as(I607
I608
tp6851
(lp6852
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p6853
aS'\t\tdriver->msg_mask_tbl_count;'
p6854
as(I613
I613
tp6855
(lp6856
S'\trsp.count = msg_mask_tbl_count;'
p6857
as(I577
I577
tp6858
(lp6859
S'\tuint8_t msg_mask_tbl_count = 0;'
p6860
asss(g6835
S'diag_log_mask_copy'
p6861
I1795
tp6862
(dp6863
g27
(dp6864
(I1801
I1801
tp6865
(lp6866
S'\tif (!src)'
p6867
assg9
(I1795
I1834
tp6868
sg11
I2
sg12
g13
sg14
(dp6869
(I1804
I1804
tp6870
(lp6871
S'\tmutex_init(&dest->lock);'
p6872
as(I1801
I1801
tp6873
(lp6874
S'\tif (!src || !dest)'
p6875
asss(g6835
S'diag_cmd_get_msg_mask'
p6876
I688
tp6877
(dp6878
g27
(dp6879
(I742
I742
tp6880
(lp6881
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p6882
assg9
(I688
I763
tp6883
sg11
I5
sg12
g13
sg14
(dp6884
(I725
I726
tp6885
(lp6886
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p6887
aS'\t\t\tdriver->msg_mask_tbl_count;'
p6888
as(I742
I742
tp6889
(lp6890
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p6891
as(I694
I694
tp6892
(lp6893
S'\tuint8_t msg_mask_tbl_count = 0;'
p6894
asss(g6835
S'diag_cmd_set_msg_mask'
p6895
I765
tp6896
(dp6897
g27
(dp6898
(I816
I816
tp6899
(lp6900
S'\t\tif (i < (driver->msg_mask_tbl_count - 1)) {'
p6901
as(I811
I811
tp6902
(lp6903
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p6904
assg9
(I765
I914
tp6905
sg11
I5
sg12
g13
sg14
(dp6906
(I816
I816
tp6907
(lp6908
S'\t\tif (i < (msg_mask_tbl_count - 1)) {'
p6909
as(I811
I813
tp6910
(lp6911
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p6912
aS'\t\t\tdriver->msg_mask_tbl_count;'
p6913
aS'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p6914
as(I778
I778
tp6915
(lp6916
S'\tuint8_t msg_mask_tbl_count = 0;'
p6917
asss(g6835
S'diag_send_msg_mask_update'
p6918
I333
tp6919
(dp6920
g27
(dp6921
(I392
I392
tp6922
(lp6923
S'\tmsg_mask_tbl_count_local = driver->msg_mask_tbl_count;'
p6924
as(I339
I339
tp6925
(lp6926
S'\tuint8_t msg_mask_tbl_count_local;'
p6927
as(I369
I369
tp6928
(lp6929
S'\t\t\tif (upd && driver->md_session_map[upd])'
p6930
as(I361
I361
tp6931
(lp6932
S'\t\t\tif (driver->md_session_map[peripheral])'
p6933
assg9
(I333
I474
tp6934
sg11
I3
sg12
g13
sg14
(dp6935
(I339
I339
tp6936
(lp6937
S'\tuint8_t msg_mask_tbl_count_local = 0;'
p6938
as(I372
I373
tp6939
(lp6940
S'\t\t\t\tmd_session_info = driver->md_session_map[upd];'
p6941
aS'\t\t\t}'
p6942
as(I392
I395
tp6943
(lp6944
S'\tif (md_session_info)'
p6945
aS'\t\tmsg_mask_tbl_count_local = md_session_info->msg_mask_tbl_count;'
p6946
aS'\telse'
p6947
aS'\t\tmsg_mask_tbl_count_local = driver->msg_mask_tbl_count;'
p6948
as(I361
I361
tp6949
(lp6950
S'\t\t\tif (driver->md_session_map[peripheral]) {'
p6951
as(I345
I345
tp6952
(lp6953
S'\tstruct diag_md_session_t *md_session_info = NULL;'
p6954
as(I369
I369
tp6955
(lp6956
S'\t\t\tif (upd && driver->md_session_map[upd]) {'
p6957
as(I364
I366
tp6958
(lp6959
S'\t\t\t\tmd_session_info ='
p6960
aS'\t\t\t\t\tdriver->md_session_map[peripheral];'
p6961
aS'\t\t\t}'
p6962
asss(g6835
S'diag_copy_to_user_msg_mask'
p6963
I2103
tp6964
(dp6965
g27
(dp6966
(I2137
I2137
tp6967
(lp6968
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p6969
assg9
(I2103
I2179
tp6970
sg11
I3
sg12
g13
sg14
(dp6971
(I2137
I2139
tp6972
(lp6973
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p6974
aS'\t\t\tdriver->msg_mask_tbl_count;'
p6975
aS'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p6976
as(I2112
I2112
tp6977
(lp6978
S'\tuint8_t msg_mask_tbl_count = 0;'
p6979
asss(g6835
S'diag_build_time_mask_init'
p6980
I1981
tp6981
(dp6982
g9
(I1981
I1998
tp6983
sg11
I1
sg12
g13
sg14
(dp6984
(I1986
I1986
tp6985
(lp6986
S'\tmutex_init(&msg_bt_mask.lock);'
p6987
asss(g6835
S'diag_event_mask_init'
p6988
I2049
tp6989
(dp6990
g9
(I2049
I2065
tp6991
sg11
I1
sg12
g13
sg14
(dp6992
(I2053
I2053
tp6993
(lp6994
S'\tmutex_init(&event_mask.lock);'
p6995
asss(g6835
S'diag_log_mask_init'
p6996
I2015
tp6997
(dp6998
g9
(I2015
I2032
tp6999
sg11
I1
sg12
g13
sg14
(dp7000
(I2019
I2019
tp7001
(lp7002
S'\tmutex_init(&log_mask.lock);'
p7003
asss(S'drivers/char/diag/diagchar_core.c'
p7004
S'diag_md_session_create'
p7005
I1284
tp7006
(dp7007
g27
(dp7008
(I1339
I1339
tp7009
(lp7010
S'\terr = diag_msg_mask_copy(new_session->msg_mask, &msg_mask);'
p7011
as(I1377
I1377
tp7012
(lp7013
S'\tdiag_msg_mask_free(new_session->msg_mask);'
p7014
assg9
(I1284
I1385
tp7015
sg11
I3
sg12
g13
sg14
(dp7016
(I1377
I1378
tp7017
(lp7018
S'\tdiag_msg_mask_free(new_session->msg_mask,'
p7019
aS'\t\tnew_session);'
p7020
as(I1339
I1341
tp7021
(lp7022
S'\tnew_session->msg_mask_tbl_count = 0;'
p7023
aS'\terr = diag_msg_mask_copy(new_session, new_session->msg_mask,'
p7024
aS'\t\t&msg_mask);'
p7025
asss(g6835
S'__diag_mask_init'
p7026
I1756
tp7027
(dp7028
g27
(dp7029
(I1779
I1779
tp7030
(lp7031
S'\tmutex_init(&mask_info->lock);'
p7032
assg9
(I1756
I1780
tp7033
sg11
I3
sg12
g13
ss(g6835
S'diag_event_mask_copy'
p7034
I2067
tp7035
(dp7036
g9
(I2067
I2087
tp7037
sg11
I2
sg12
g13
sg14
(dp7038
(I2075
I2075
tp7039
(lp7040
S'\tmutex_init(&dest->lock);'
p7041
asss(g6835
S'diag_cmd_set_all_msg_mask'
p7042
I916
tp7043
(dp7044
g27
(dp7045
(I965
I965
tp7046
(lp7047
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p7048
assg9
(I916
I1006
tp7049
sg11
I5
sg12
g13
sg14
(dp7050
(I961
I962
tp7051
(lp7052
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p7053
aS'\t\t\tdriver->msg_mask_tbl_count;'
p7054
as(I965
I965
tp7055
(lp7056
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p7057
as(I926
I926
tp7058
(lp7059
S'\tuint8_t msg_mask_tbl_count = 0;'
p7060
asss(g6835
S'diag_msg_mask_init'
p7061
I1862
tp7062
(dp7063
g9
(I1862
I1883
tp7064
sg11
I1
sg12
g13
sg14
(dp7065
(I1870
I1870
tp7066
(lp7067
g119
as(I1866
I1866
tp7068
(lp7069
S'\tmutex_init(&msg_mask.lock);'
p7070
asss(g7004
S'diag_md_session_exit'
p7071
I1256
tp7072
(dp7073
g27
(dp7074
(I1267
I1267
tp7075
(lp7076
S'\t\t\tdiag_msg_mask_free(session_info->msg_mask);'
p7077
assg9
(I1256
I1282
tp7078
sg11
I1
sg12
g13
sg14
(dp7079
(I1267
I1268
tp7080
(lp7081
S'\t\t\tdiag_msg_mask_free(session_info->msg_mask,'
p7082
aS'\t\t\t\tsession_info);'
p7083
asss(g6835
S'diag_msg_mask_copy'
p7084
I1885
tp7085
(dp7086
g27
(dp7087
(I1914
I1914
tp7088
(lp7089
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++) {'
p7090
as(I1885
I1885
tp7091
(lp7092
S'int diag_msg_mask_copy(struct diag_mask_info *dest, struct diag_mask_info *src)'
p7093
as(I1896
I1898
tp7094
(lp7095
S'\terr = __diag_mask_init(dest, MSG_MASK_SIZE, APPS_BUF_SIZE);'
p7096
aS'\tif (err)'
p7097
aS'\t\treturn err;'
p7098
assg9
(I1885
I1931
tp7099
sg11
I3
sg12
g13
sg14
(dp7100
(I1885
I1886
tp7101
(lp7102
S'int diag_msg_mask_copy(struct diag_md_session_t *new_session,'
p7103
aS'\tstruct diag_mask_info *dest, struct diag_mask_info *src)'
p7104
as(I1896
I1896
tp7105
(lp7106
S'\tmutex_init(&dest->lock);'
p7107
as(I1899
I1908
tp7108
(lp7109
S'\tnew_session->msg_mask_tbl_count ='
p7110
aS'\t\tdriver->msg_mask_tbl_count;'
p7111
aS'\terr = __diag_mask_init(dest,'
p7112
aS'\t\t(new_session->msg_mask_tbl_count *'
p7113
aS'\t\tsizeof(struct diag_msg_mask_t)), APPS_BUF_SIZE);'
p7114
aS'\tif (err) {'
p7115
aS'\t\tmutex_unlock(&driver->msg_mask_lock);'
p7116
aS'\t\tmutex_unlock(&dest->lock);'
p7117
aS'\t\treturn err;'
p7118
aS'\t}'
p7119
as(I1914
I1914
tp7120
(lp7121
S'\tfor (i = 0; i < new_session->msg_mask_tbl_count; i++) {'
p7122
asss(g6835
S'diag_msg_mask_free'
p7123
I1933
tp7124
(dp7125
g27
(dp7126
(I1952
I1952
tp7127
(lp7128
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p7129
as(I1933
I1933
tp7130
(lp7131
S'void diag_msg_mask_free(struct diag_mask_info *mask_info)'
p7132
assg9
(I1933
I1962
tp7133
sg11
I2
sg12
g13
sg14
(dp7134
(I1933
I1934
tp7135
(lp7136
S'void diag_msg_mask_free(struct diag_mask_info *mask_info,'
p7137
aS'\tstruct diag_md_session_t *session_info)'
p7138
as(I1952
I1955
tp7139
(lp7140
S'\tmsg_mask_tbl_count = (session_info) ?'
p7141
aS'\t\tsession_info->msg_mask_tbl_count :'
p7142
aS'\t\tdriver->msg_mask_tbl_count;'
p7143
aS'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p7144
as(I1938
I1938
tp7145
(lp7146
S'\tuint8_t msg_mask_tbl_count = 0;'
p7147
asss(g7004
S'diag_md_session_close'
p7148
I1387
tp7149
(dp7150
g27
(dp7151
(I1406
I1406
tp7152
(lp7153
S'\tdiag_msg_mask_free(session_info->msg_mask);'
p7154
assg9
(I1387
I1424
tp7155
sg11
I1
sg12
g13
sg14
(dp7156
(I1406
I1407
tp7157
(lp7158
S'\tdiag_msg_mask_free(session_info->msg_mask,'
p7159
aS'\t\tsession_info);'
p7160
assssS'70f432282130_sdm845-perf'
p7161
(dp7162
(g6835
g6876
I689
tp7163
(dp7164
g27
(dp7165
(I707
I707
tp7166
(lp7167
S'\t    !mask_info) {'
p7168
as(I743
I743
tp7169
(lp7170
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p7171
assg9
(I689
I764
tp7172
sg11
I5
sg12
g13
sg14
(dp7173
(I695
I695
tp7174
(lp7175
S'\tuint8_t msg_mask_tbl_count = 0;'
p7176
as(I726
I727
tp7177
(lp7178
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p7179
aS'\t\t\tdriver->msg_mask_tbl_count;'
p7180
as(I707
I707
tp7181
(lp7182
S'\t    !mask_info || (src_len < sizeof(struct diag_build_mask_req_t))) {'
p7183
as(I743
I743
tp7184
(lp7185
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p7186
assssS'a77c16d4981b_sdm845-perf'
p7187
(dp7188
(g6835
g6876
I689
tp7189
(dp7190
g27
(dp7191
(I706
I707
tp7192
(lp7193
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p7194
aS'\t    !mask_info) {'
p7195
as(I743
I743
tp7196
(lp7197
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p7198
assg9
(I689
I764
tp7199
sg11
I5
sg12
g13
sg14
(dp7200
(I726
I727
tp7201
(lp7202
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p7203
aS'\t\t\tdriver->msg_mask_tbl_count;'
p7204
as(I706
I707
tp7205
(lp7206
S'\tif (!src_buf || !dest_buf || dest_len <= 0 ||'
p7207
aS'\t    !mask_info || (src_len < sizeof(struct diag_build_mask_req_t))) {'
p7208
as(I695
I695
tp7209
(lp7210
S'\tuint8_t msg_mask_tbl_count = 0;'
p7211
as(I743
I743
tp7212
(lp7213
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p7214
asss(g6835
g6895
I766
tp7215
(dp7216
g27
(dp7217
(I785
I786
tp7218
(lp7219
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p7220
aS'\t    !mask_info) {'
p7221
as(I812
I812
tp7222
(lp7223
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p7224
as(I817
I817
tp7225
(lp7226
S'\t\tif (i < (driver->msg_mask_tbl_count - 1)) {'
p7227
as(I870
I870
tp7228
(lp7229
S'\t\tmemcpy(mask->ptr + offset, src_buf + header_len, mask_size);'
p7230
assg9
(I766
I917
tp7231
sg11
I5
sg12
g13
sg14
(dp7232
(I785
I786
tp7233
(lp7234
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p7235
aS'\t\t(src_len < sizeof(struct diag_msg_build_mask_t))) {'
p7236
as(I812
I814
tp7237
(lp7238
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p7239
aS'\t\t\tdriver->msg_mask_tbl_count;'
p7240
aS'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p7241
as(I870
I872
tp7242
(lp7243
S'\t\tif (mask_size && src_len >= header_len + mask_size)'
p7244
aS'\t\t\tmemcpy(mask->ptr + offset, src_buf + header_len,'
p7245
aS'\t\t\t\tmask_size);'
p7246
as(I779
I779
tp7247
(lp7248
S'\tuint8_t msg_mask_tbl_count = 0;'
p7249
as(I817
I817
tp7250
(lp7251
S'\t\tif (i < (msg_mask_tbl_count - 1)) {'
p7252
asss(g6835
g7042
I919
tp7253
(dp7254
g27
(dp7255
(I968
I968
tp7256
(lp7257
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p7258
as(I935
I936
tp7259
(lp7260
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p7261
aS'\t    !mask_info) {'
p7262
assg9
(I919
I1009
tp7263
sg11
I5
sg12
g13
sg14
(dp7264
(I964
I965
tp7265
(lp7266
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p7267
aS'\t\t\tdriver->msg_mask_tbl_count;'
p7268
as(I968
I968
tp7269
(lp7270
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p7271
as(I935
I936
tp7272
(lp7273
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p7274
aS'\t\t(src_len < sizeof(struct diag_msg_config_rsp_t))) {'
p7275
as(I929
I929
tp7276
(lp7277
S'\tuint8_t msg_mask_tbl_count = 0;'
p7278
assssS'c36d54c34fef_sdm845-perf'
p7279
(dp7280
(g6835
g7026
I1756
tp7281
(dp7282
g27
(dp7283
(I1780
I1780
tp7284
(lp7285
S'\tmutex_init(&mask_info->lock);'
p7286
assg9
(I1756
I1781
tp7287
sg11
I3
sg12
g13
sg14
(dp7288
(I1775
I1775
tp7289
(lp7290
S'\t\t\tmask_info->ptr = NULL;'
p7291
assssS'7dca8885b04d_sdm845-perf'
p7292
(dp7293
(g6835
g6895
I766
tp7294
(dp7295
g27
(dp7296
(I785
I786
tp7297
(lp7298
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p7299
aS'\t    !mask_info) {'
p7300
as(I899
I899
tp7301
(lp7302
S'\tmemcpy(dest_buf + write_len, src_buf + header_len, mask_size);'
p7303
as(I812
I812
tp7304
(lp7305
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p7306
as(I817
I817
tp7307
(lp7308
S'\t\tif (i < (driver->msg_mask_tbl_count - 1)) {'
p7309
as(I870
I870
tp7310
(lp7311
S'\t\tmemcpy(mask->ptr + offset, src_buf + header_len, mask_size);'
p7312
assg9
(I766
I918
tp7313
sg11
I5
sg12
g13
sg14
(dp7314
(I785
I786
tp7315
(lp7316
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p7317
aS'\t\t(src_len < sizeof(struct diag_msg_build_mask_t))) {'
p7318
as(I779
I779
tp7319
(lp7320
S'\tuint8_t msg_mask_tbl_count = 0;'
p7321
as(I870
I872
tp7322
(lp7323
S'\t\tif (mask_size && src_len >= header_len + mask_size)'
p7324
aS'\t\t\tmemcpy(mask->ptr + offset, src_buf + header_len,'
p7325
aS'\t\t\t\tmask_size);'
p7326
as(I899
I900
tp7327
(lp7328
S'\tif (mask_size && src_len >= header_len + mask_size)'
p7329
aS'\t\tmemcpy(dest_buf + write_len, src_buf + header_len, mask_size);'
p7330
as(I817
I817
tp7331
(lp7332
S'\t\tif (i < (msg_mask_tbl_count - 1)) {'
p7333
as(I812
I814
tp7334
(lp7335
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p7336
aS'\t\t\tdriver->msg_mask_tbl_count;'
p7337
aS'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p7338
asssssS'CVE-2018-20169'
p7339
(dp7340
S'c36d54c34fef_sdm845-perf'
p7341
(dp7342
(S'drivers/usb/core/usb.c'
p7343
S'__usb_get_extra_descriptor'
p7344
I751
tp7345
(dp7346
g27
(dp7347
(I752
I752
tp7348
(lp7349
S'\t\t\t       unsigned char type, void **ptr)'
p7350
as(I759
I759
tp7351
(lp7352
S'\t\tif (header->bLength < 2) {'
p7353
as(I768
I768
tp7354
(lp7355
S'\t\tif (header->bDescriptorType == type) {'
p7356
assg9
(I751
I777
tp7357
sg11
I5
sg12
g13
sg14
(dp7358
(I752
I752
tp7359
(lp7360
S'\t\t\t       unsigned char type, void **ptr, size_t minsize)'
p7361
as(I759
I759
tp7362
(lp7363
S'\t\tif (header->bLength < 2 || header->bLength > size) {'
p7364
as(I768
I768
tp7365
(lp7366
S'\t\tif (header->bDescriptorType == type && header->bLength >= minsize) {'
p7367
asssssS'CVE-2019-2293'
p7368
(dp7369
S'a5bdc9ebe5cf_sdm845-perf'
p7370
(dp7371
(S'drivers/media/platform/msm/camera/cam_isp/isp_hw_mgr/cam_ife_hw_mgr.c'
p7372
S'cam_ife_mgr_acquire_hw'
p7373
I1485
tp7374
(dp7375
g27
(dp7376
(I1485
I1486
tp7377
(lp7378
S'static int cam_ife_mgr_acquire_hw(void *hw_mgr_priv,'
p7379
aS'\t\t\t\t\tvoid *acquire_hw_args)'
p7380
as(I1493
I1493
tp7381
(lp7382
S'\tstruct cam_isp_resource           *isp_resource = NULL;'
p7383
as(I1549
I1549
tp7384
(lp7385
S'\tisp_resource = (struct cam_isp_resource *)acquire_args->acquire_info;'
p7386
as(I1556
I1582
tp7387
(lp7388
S'\tfor (i = 0; i < acquire_args->num_acq; i++) {'
p7389
aS'\t\tif (isp_resource[i].resource_id != CAM_ISP_RES_ID_PORT)'
p7390
aS'\t\t\tcontinue;'
p7391
ag119
aS'\t\tCAM_DBG(CAM_ISP,'
p7392
aS'\t\t\t"start copy from user handle %lld with len = %d",'
p7393
aS'\t\t\tisp_resource[i].res_hdl,'
p7394
aS'\t\t\tisp_resource[i].length);'
p7395
ag119
aS'\t\tin_port = memdup_user((void __user *)isp_resource[i].res_hdl,'
p7396
aS'\t\t\tisp_resource[i].length);'
p7397
aS'\t\tif (!IS_ERR(in_port)) {'
p7398
aS'\t\t\trc = cam_ife_mgr_acquire_hw_for_ctx(ife_ctx, in_port,'
p7399
aS'\t\t\t\t&num_pix_port_per_in, &num_rdi_port_per_in);'
p7400
aS'\t\t\ttotal_pix_port += num_pix_port_per_in;'
p7401
aS'\t\t\ttotal_rdi_port += num_rdi_port_per_in;'
p7402
ag119
aS'\t\t\tkfree(in_port);'
p7403
aS'\t\t\tif (rc) {'
p7404
aS'\t\t\t\tCAM_ERR(CAM_ISP, "can not acquire resource");'
p7405
aS'\t\t\t\tgoto free_res;'
p7406
aS'\t\t\t}'
p7407
aS'\t\t} else {'
p7408
aS'\t\t\tCAM_ERR(CAM_ISP,'
p7409
aS'\t\t\t\t"Copy from user failed with in_port = %pK",'
p7410
aS'\t\t\t\tin_port);'
p7411
aS'\t\t\trc = -EFAULT;'
p7412
assg9
(I1485
I1609
tp7413
sg11
I2
sg12
g13
sg14
(dp7414
(I1549
I1553
tp7415
(lp7416
S'\tacquire_hw_info ='
p7417
aS'\t\t(struct cam_isp_acquire_hw_info *)acquire_args->acquire_info;'
p7418
aS'\tin_port = (struct cam_isp_in_port_info *)'
p7419
aS'\t\t((uint8_t *)&acquire_hw_info->data +'
p7420
aS'\t\t acquire_hw_info->input_info_offset);'
p7421
as(I1567
I1577
tp7422
(lp7423
S'\t\trc = cam_ife_mgr_acquire_hw_for_ctx(ife_ctx, in_port,'
p7424
aS'\t\t\t&num_pix_port_per_in, &num_rdi_port_per_in);'
p7425
aS'\t\ttotal_pix_port += num_pix_port_per_in;'
p7426
aS'\t\ttotal_rdi_port += num_rdi_port_per_in;'
p7427
ag119
aS'\t\tif (rc) {'
p7428
aS'\t\t\tCAM_ERR(CAM_ISP, "can not acquire resource");'
p7429
aS'\t\t\tgoto free_res;'
p7430
aS'\t\t}'
p7431
aS'\t\tin_port = (struct cam_isp_in_port_info *)((uint8_t *)in_port +'
p7432
aS'\t\t\tin_port_length);'
p7433
as(I1556
I1564
tp7434
(lp7435
S'\tfor (i = 0; i < acquire_hw_info->num_inputs; i++) {'
p7436
aS'\t\tin_port_length = sizeof(struct cam_isp_in_port_info) +'
p7437
aS'\t\t\t(in_port->num_out_res - 1) *'
p7438
aS'\t\t\tsizeof(struct cam_isp_out_port_info);'
p7439
aS'\t\ttotal_in_port_length += in_port_length;'
p7440
ag119
aS'\t\tif (total_in_port_length > acquire_hw_info->input_info_size) {'
p7441
aS'\t\t\tCAM_ERR(CAM_ISP, "buffer size is not enough");'
p7442
aS'\t\t\trc = -EINVAL;'
p7443
as(I1498
I1500
tp7444
(lp7445
S'\tuint32_t                           in_port_length = 0;'
p7446
aS'\tuint32_t                           total_in_port_length = 0;'
p7447
aS'\tstruct cam_isp_acquire_hw_info    *acquire_hw_info = NULL;'
p7448
as(I1485
I1485
tp7449
(lp7450
S'static int cam_ife_mgr_acquire_hw(void *hw_mgr_priv, void *acquire_hw_args)'
p7451
assssS'476904464103_sdm845-perf'
p7452
(dp7453
(g7372
g7373
I1487
tp7454
(dp7455
g27
(dp7456
(I1563
I1563
tp7457
(lp7458
S'\t\tin_port = memdup_user((void __user *)isp_resource[i].res_hdl,'
p7459
assg9
(I1487
I1641
tp7460
sg11
I2
sg12
g13
sg14
(dp7461
(I1575
I1592
tp7462
(lp7463
S'\t\t\tif (in_port->num_out_res > CAM_IFE_HW_OUT_RES_MAX) {'
p7464
aS'\t\t\t\tCAM_ERR(CAM_ISP, "too many output res %d",'
p7465
aS'\t\t\t\t\tin_port->num_out_res);'
p7466
aS'\t\t\t\trc = -EINVAL;'
p7467
aS'\t\t\t\tkfree(in_port);'
p7468
aS'\t\t\t\tgoto free_res;'
p7469
aS'\t\t\t}'
p7470
ag119
aS'\t\t\tin_port_length = sizeof(struct cam_isp_in_port_info) +'
p7471
aS'\t\t\t\t(in_port->num_out_res - 1) *'
p7472
aS'\t\t\t\tsizeof(struct cam_isp_out_port_info);'
p7473
aS'\t\t\tif (in_port_length > isp_resource[i].length) {'
p7474
aS'\t\t\t\tCAM_ERR(CAM_ISP, "buffer size is not enough");'
p7475
aS'\t\t\t\trc = -EINVAL;'
p7476
aS'\t\t\t\tkfree(in_port);'
p7477
aS'\t\t\t\tgoto free_res;'
p7478
aS'\t\t\t}'
p7479
ag119
as(I1563
I1572
tp7480
(lp7481
S'\t\tin_port_length = sizeof(struct cam_isp_in_port_info);'
p7482
ag119
aS'\t\tif (in_port_length > isp_resource[i].length) {'
p7483
aS'\t\t\tCAM_ERR(CAM_ISP, "buffer size is not enough");'
p7484
aS'\t\t\trc = -EINVAL;'
p7485
aS'\t\t\tgoto free_res;'
p7486
aS'\t\t}'
p7487
ag119
aS'\t\tin_port = memdup_user('
p7488
aS'\t\t\tu64_to_user_ptr(isp_resource[i].res_hdl),'
p7489
as(I1502
I1502
tp7490
(lp7491
S'\tuint32_t                           in_port_length = 0;'
p7492
assssS'f5bee8dc8d4a_sdm845-perf'
p7493
(dp7494
(g7372
g7373
I1355
tp7495
(dp7496
g9
(I1355
I1500
tp7497
sg11
I2
sg12
g13
sg14
(dp7498
(I1431
I1438
tp7499
(lp7500
S'\t\tin_port_length = sizeof(struct cam_isp_in_port_info);'
p7501
ag119
aS'\t\tif (in_port_length > isp_resource[i].length) {'
p7502
aS'\t\t\tCAM_ERR(CAM_ISP, "buffer size is not enough");'
p7503
aS'\t\t\trc = -EINVAL;'
p7504
aS'\t\t\tgoto free_res;'
p7505
aS'\t\t}'
p7506
ag119
as(I1442
I1451
tp7507
(lp7508
S'\t\t\tin_port_length = sizeof(struct cam_isp_in_port_info) +'
p7509
aS'\t\t\t\t(in_port->num_out_res - 1) *'
p7510
aS'\t\t\t\tsizeof(struct cam_isp_out_port_info);'
p7511
aS'\t\t\tif (in_port_length > isp_resource[i].length) {'
p7512
aS'\t\t\t\tCAM_ERR(CAM_ISP, "buffer size is not enough");'
p7513
aS'\t\t\t\trc = -EINVAL;'
p7514
aS'\t\t\t\tkfree(in_port);'
p7515
aS'\t\t\t\tgoto free_res;'
p7516
aS'\t\t\t}'
p7517
ag119
as(I1370
I1370
tp7518
(lp7519
S'\tuint32_t                           in_port_length = 0;'
p7520
assssS'f332617ebb03_sdm845-perf'
p7521
(dp7522
(g7372
g7373
I1483
tp7523
(dp7524
g27
(dp7525
(I1559
I1559
tp7526
(lp7527
S'\t\tin_port = memdup_user((void __user *)isp_resource[i].res_hdl,'
p7528
assg9
(I1483
I1629
tp7529
sg11
I2
sg12
g13
sg14
(dp7530
(I1571
I1580
tp7531
(lp7532
S'\t\t\tin_port_length = sizeof(struct cam_isp_in_port_info) +'
p7533
aS'\t\t\t\t(in_port->num_out_res - 1) *'
p7534
aS'\t\t\t\tsizeof(struct cam_isp_out_port_info);'
p7535
aS'\t\t\tif (in_port_length > isp_resource[i].length) {'
p7536
aS'\t\t\t\tCAM_ERR(CAM_ISP, "buffer size is not enough");'
p7537
aS'\t\t\t\trc = -EINVAL;'
p7538
aS'\t\t\t\tkfree(in_port);'
p7539
aS'\t\t\t\tgoto free_res;'
p7540
aS'\t\t\t}'
p7541
ag119
as(I1559
I1568
tp7542
(lp7543
S'\t\tin_port_length = sizeof(struct cam_isp_in_port_info);'
p7544
ag119
aS'\t\tif (in_port_length > isp_resource[i].length) {'
p7545
aS'\t\t\tCAM_ERR(CAM_ISP, "buffer size is not enough");'
p7546
aS'\t\t\trc = -EINVAL;'
p7547
aS'\t\t\tgoto free_res;'
p7548
aS'\t\t}'
p7549
ag119
aS'\t\tin_port = memdup_user('
p7550
aS'\t\t\tu64_to_user_ptr(isp_resource[i].res_hdl),'
p7551
as(I1498
I1498
tp7552
(lp7553
S'\tuint32_t                           in_port_length = 0;'
p7554
asssssS'CVE-2019-14049'
p7555
(dp7556
S'a5bdc9ebe5cf_sdm845-perf'
p7557
(dp7558
(S'drivers/staging/android/ion/ion_system_heap.c'
p7559
S'ion_system_heap_allocate'
p7560
I340
tp7561
(dp7562
g27
(dp7563
(I484
I484
tp7564
(lp7565
S'\tbuffer->flags |= ION_PRIV_FLAG_SHRINKER_FREE;'
p7566
assg9
(I340
I510
tp7567
sg11
I5
sg12
g13
sg14
(dp7568
(I484
I484
tp7569
(lp7570
S'\tbuffer->private_flags |= ION_PRIV_FLAG_SHRINKER_FREE;'
p7571
as(I365
I371
tp7572
(lp7573
S'\tif (ion_heap_is_system_heap_type(buffer->heap->type) &&'
p7574
aS'\t    is_secure_vmid_valid(vmid)) {'
p7575
aS'\t\tpr_info("%s: System heap doesn\'t support secure allocations\\n",'
p7576
aS'\t\t\t__func__);'
p7577
aS'\t\treturn -EINVAL;'
p7578
aS'\t}'
p7579
ag119
assssS'b2550ae3f313_sdm845-perf'
p7580
(dp7581
(g7559
g7560
I340
tp7582
(dp7583
g9
(I340
I510
tp7584
sg11
I5
sg12
g13
sg14
(dp7585
(I365
I371
tp7586
(lp7587
S'\tif (ion_heap_is_system_heap_type(buffer->heap->type) &&'
p7588
aS'\t    is_secure_vmid_valid(vmid)) {'
p7589
aS'\t\tpr_info("%s: System heap doesn\'t support secure allocations\\n",'
p7590
aS'\t\t\t__func__);'
p7591
aS'\t\treturn -EINVAL;'
p7592
aS'\t}'
p7593
ag119
asssssS'CVE-2019-10528'
p7594
(dp7595
S'a5bdc9ebe5cf_sdm845-perf'
p7596
(dp7597
(S'drivers/char/diag/diagchar_core.c'
p7598
S'diag_close_logging_process'
p7599
I445
tp7600
(dp7601
g27
(dp7602
(I472
I473
tp7603
(lp7604
g119
aS'\tparams.req_mode = USB_MODE;'
p7605
as(I463
I467
tp7606
(lp7607
S'\t\tdiag_clear_masks(session_info);'
p7608
ag119
aS'\tmutex_lock(&driver->diag_maskclear_mutex);'
p7609
aS'\tdriver->mask_clear = 1;'
p7610
aS'\tmutex_unlock(&driver->diag_maskclear_mutex);'
p7611
as(I455
I455
tp7612
(lp7613
S'\tif (!session_info)'
p7614
as(I466
I468
tp7615
(lp7616
S'\tsession_mask = session_info->peripheral_mask;'
p7617
aS'\tdiag_md_session_close(session_info);'
p7618
ag119
as(I491
I491
tp7619
(lp7620
g119
assg9
(I445
I496
tp7621
sg11
I1
sg12
g13
sg14
(dp7622
(I453
I453
tp7623
(lp7624
S'\tmutex_lock(&driver->md_session_lock);'
p7625
as(I472
I475
tp7626
(lp7627
S'\tif (driver->transport_set == DIAG_ROUTE_TO_PCIE)'
p7628
aS'\t\tparams.req_mode = PCIE_MODE;'
p7629
aS'\telse'
p7630
aS'\t\tparams.req_mode = USB_MODE;'
p7631
as(I458
I460
tp7632
(lp7633
S'\t}'
p7634
aS'\tsession_mask = session_info->peripheral_mask;'
p7635
aS'\tmutex_unlock(&driver->md_session_lock);'
p7636
as(I455
I456
tp7637
(lp7638
S'\tif (!session_info) {'
p7639
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p7640
as(I463
I463
tp7641
(lp7642
S'\t\tdiag_clear_masks(pid);'
p7643
as(I491
I493
tp7644
(lp7645
S'\tmutex_lock(&driver->md_session_lock);'
p7646
aS'\tdiag_md_session_close(pid);'
p7647
aS'\tmutex_unlock(&driver->md_session_lock);'
p7648
asss(g7598
S'diag_md_session_check'
p7649
I1530
tp7650
(dp7651
g27
(dp7652
(I1608
I1609
tp7653
(lp7654
S'\t\tif (~change_mask & session_info->peripheral_mask) {'
p7655
aS'\t\t\terr = diag_md_peripheral_switch(session_info,'
p7656
as(I1568
I1568
tp7657
(lp7658
g119
as(I1597
I1597
tp7659
(lp7660
S'\t\tif ((change_mask & session_info->peripheral_mask)'
p7661
as(I1622
I1622
tp7662
(lp7663
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p7664
as(I1557
I1558
tp7665
(lp7666
S'\tif (req_mode == DIAG_USB_MODE) {'
p7667
aS'\t\tif (curr_mode == DIAG_USB_MODE)'
p7668
as(I1634
I1634
tp7669
(lp7670
S'\t\t\terr = diag_md_peripheral_switch(session_info,'
p7671
as(I1625
I1625
tp7672
(lp7673
S'\t\tmutex_unlock(&driver->md_session_lock);'
p7674
as(I1591
I1591
tp7675
(lp7676
S'\t\tmutex_lock(&driver->md_session_lock);'
p7677
as(I1592
I1593
tp7678
(lp7679
S'\t\tmutex_unlock(&driver->md_session_lock);'
p7680
ag119
as(I1612
I1613
tp7681
(lp7682
S'\t\t\tdiag_md_session_close(session_info);'
p7683
ag119
as(I1534
I1534
tp7684
(lp7685
S'\tint i, bit = 0, err = 0;'
p7686
as(I1553
I1553
tp7687
(lp7688
S'\tif (req_mode != DIAG_USB_MODE && req_mode != DIAG_MEMORY_DEVICE_MODE)'
p7689
as(I1579
I1579
tp7690
(lp7691
S'\t\tif (!change_mask)'
p7692
assg9
(I1530
I1662
tp7693
sg11
I4
sg12
g13
sg14
(dp7694
(I1553
I1554
tp7695
(lp7696
S'\tif (req_mode != DIAG_USB_MODE && req_mode != DIAG_MEMORY_DEVICE_MODE &&'
p7697
aS'\t\treq_mode != DIAG_PCIE_MODE)'
p7698
as(I1608
I1609
tp7699
(lp7700
S'\t\tif (~change_mask & peripheral_mask) {'
p7701
aS'\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p7702
as(I1634
I1638
tp7703
(lp7704
S'\t\t\tif (driver->transport_set == DIAG_ROUTE_TO_PCIE)'
p7705
aS'\t\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p7706
aS'\t\t\t\t\tchange_mask, DIAG_PCIE_MODE);'
p7707
aS'\t\t\telse'
p7708
aS'\t\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p7709
as(I1565
I1565
tp7710
(lp7711
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p7712
as(I1557
I1558
tp7713
(lp7714
S'\tif (req_mode == DIAG_USB_MODE || req_mode == DIAG_PCIE_MODE) {'
p7715
aS'\t\tif (curr_mode == req_mode)'
p7716
as(I1546
I1546
tp7717
(lp7718
S'\tcase DIAG_PCIE_MODE:'
p7719
as(I1597
I1598
tp7720
(lp7721
S'\t\tperipheral_mask = session_info->peripheral_mask;'
p7722
aS'\t\tif ((change_mask & peripheral_mask)'
p7723
as(I1650
I1656
tp7724
(lp7725
S'\t\t\tmutex_lock(&driver->hdlc_disable_mutex);'
p7726
aS'\t\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p7727
aS'\t\t\t\tif ((param->peripheral_mask > 0) &&'
p7728
aS'\t\t\t\t\t(param->peripheral_mask & (1 << i)))'
p7729
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] = 0;'
p7730
aS'\t\t\t}'
p7731
aS'\t\t\tmutex_unlock(&driver->hdlc_disable_mutex);'
p7732
as(I1602
I1602
tp7733
(lp7734
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p7735
as(I1623
I1623
tp7736
(lp7737
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p7738
as(I1560
I1561
tp7739
(lp7740
g119
aS'\t\tmutex_lock(&driver->md_session_lock);'
p7741
as(I1612
I1613
tp7742
(lp7743
S'\t\t\tdiag_md_session_close(current->tgid);'
p7744
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p7745
as(I1640
I1640
tp7746
(lp7747
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p7748
as(I1582
I1582
tp7749
(lp7750
S'\t\t}'
p7751
as(I1534
I1534
tp7752
(lp7753
S'\tint i, bit = 0, err = 0, peripheral_mask = 0;'
p7754
as(I1594
I1594
tp7755
(lp7756
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p7757
as(I1642
I1642
tp7758
(lp7759
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p7760
as(I1579
I1580
tp7761
(lp7762
S'\t\tif (!change_mask) {'
p7763
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p7764
as(I1631
I1631
tp7765
(lp7766
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p7767
asss(g7598
S'diag_user_process_apps_data'
p7768
I3189
tp7769
(dp7770
g27
(dp7771
(I3249
I3253
tp7772
(lp7773
S'\tsession_info = diag_md_session_get_peripheral(APPS_DATA);'
p7774
aS'\tif (session_info)'
p7775
aS'\t\thdlc_disabled = session_info->hdlc_disabled;'
p7776
aS'\telse'
p7777
aS'\t\thdlc_disabled = driver->hdlc_disabled;'
p7778
as(I3196
I3196
tp7779
(lp7780
S'\tstruct diag_md_session_t *session_info = NULL;'
p7781
as(I3257
I3257
tp7782
(lp7783
S'\tmutex_unlock(&driver->hdlc_disable_mutex);'
p7784
assg9
(I3189
I3272
tp7785
sg11
I3
sg12
g13
sg14
(dp7786
(I3249
I3250
tp7787
(lp7788
S'\thdlc_disabled = driver->p_hdlc_disabled[APPS_DATA];'
p7789
aS'\tmutex_unlock(&driver->hdlc_disable_mutex);'
p7790
assssS'8ac6e23e1acb_sdm845-perf'
p7791
(dp7792
(S'drivers/char/diag/diag_masks.c'
p7793
S'diag_cmd_get_log_mask'
p7794
I1187
tp7795
(dp7796
g27
(dp7797
(I1188
I1189
tp7798
(lp7799
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p7800
aS'\t\t\t\t struct diag_md_session_t *info)'
p7801
as(I1198
I1198
tp7802
(lp7803
S'\tstruct diag_log_config_req_t *req;'
p7804
as(I1207
I1208
tp7805
(lp7806
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p7807
aS'\t    !mask_info) {'
p7808
as(I1227
I1227
tp7809
(lp7810
S'\treq = (struct diag_log_config_req_t *)src_buf;'
p7811
as(I1222
I1222
tp7812
(lp7813
S'\tif (!diag_apps_responds())'
p7814
assg9
(I1187
I1289
tp7815
sg11
I5
sg12
g13
sg14
(dp7816
(I1218
I1218
tp7817
(lp7818
S'\t\tmutex_unlock(&driver->md_session_lock);'
p7819
as(I1188
I1188
tp7820
(lp7821
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p7822
as(I1222
I1223
tp7823
(lp7824
S'\tif (!diag_apps_responds()) {'
p7825
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p7826
as(I1245
I1245
tp7827
(lp7828
S'\t\tmutex_unlock(&driver->md_session_lock);'
p7829
as(I1212
I1212
tp7830
(lp7831
S'\t\tmutex_unlock(&driver->md_session_lock);'
p7832
as(I1225
I1225
tp7833
(lp7834
S'\t}'
p7835
as(I1201
I1204
tp7836
(lp7837
S'\tstruct diag_md_session_t *info = NULL;'
p7838
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p7839
aS'\tinfo = diag_md_session_get_pid(pid);'
p7840
as(I1287
I1287
tp7841
(lp7842
S'\tmutex_unlock(&driver->md_session_lock);'
p7843
as(I1198
I1198
tp7844
(lp7845
S'\tstruct diag_log_config_get_req_t *req;'
p7846
as(I1207
I1208
tp7847
(lp7848
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p7849
aS'\t\tsrc_len < sizeof(struct diag_log_config_get_req_t)) {'
p7850
as(I1227
I1227
tp7851
(lp7852
S'\treq = (struct diag_log_config_get_req_t *)src_buf;'
p7853
assssS'e276e60d848d_sdm845-perf'
p7854
(dp7855
(S'drivers/char/diag/diagfwd.c'
p7856
S'diag_process_apps_pkt'
p7857
I1023
tp7858
(dp7859
g27
(dp7860
(I1158
I1158
tp7861
(lp7862
S'\telse if ((*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p7863
as(I1040
I1040
tp7864
(lp7865
S'\tmask_ret = diag_process_apps_masks(buf, len, info);'
p7866
as(I1042
I1042
tp7867
(lp7868
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, mask_ret, info);'
p7869
as(I1131
I1131
tp7870
(lp7871
S'\t\treturn len;'
p7872
as(I1146
I1146
tp7873
(lp7874
S'\telse if ((*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p7875
as(I1036
I1036
tp7876
(lp7877
S'\tif (!buf)'
p7878
as(I1208
I1208
tp7879
(lp7880
S'\telse if ((*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p7881
as(I1047
I1056
tp7882
(lp7883
S'\tentry.cmd_code = (uint16_t)(*(uint8_t *)temp);'
p7884
aS'\ttemp += sizeof(uint8_t);'
p7885
aS'\tentry.subsys_id = (uint16_t)(*(uint8_t *)temp);'
p7886
aS'\ttemp += sizeof(uint8_t);'
p7887
aS'\tentry.cmd_code_hi = (uint16_t)(*(uint16_t *)temp);'
p7888
aS'\tentry.cmd_code_lo = (uint16_t)(*(uint16_t *)temp);'
p7889
aS'\ttemp += sizeof(uint16_t);'
p7890
ag119
aS'\tpr_debug("diag: In %s, received cmd %02x %02x %02x\\n",'
p7891
aS'\t\t __func__, entry.cmd_code, entry.subsys_id, entry.cmd_code_hi);'
p7892
as(I1154
I1154
tp7893
(lp7894
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p7895
as(I1250
I1250
tp7896
(lp7897
S'\t\telse if (*buf == 0x7c) {'
p7898
as(I1023
I1024
tp7899
(lp7900
S'int diag_process_apps_pkt(unsigned char *buf, int len,'
p7901
aS'\t\t\tstruct diag_md_session_t *info)'
p7902
as(I1259
I1259
tp7903
(lp7904
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 14, info);'
p7905
as(I1184
I1185
tp7906
(lp7907
S'\telse if ((*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p7908
aS'\t\t(*(buf+2) == 0x03)) {'
p7909
as(I1226
I1226
tp7910
(lp7911
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p7912
as(I1094
I1095
tp7913
(lp7914
S'\t\t\t\tinfo->peripheral_mask) ||'
p7915
aS'\t\t\t\t(pd_mask & info->peripheral_mask))'
p7916
as(I1125
I1127
tp7917
(lp7918
S'\t\tlen = diag_process_stm_cmd(buf, driver->apps_rsp_buf);'
p7919
aS'\t\tif (len > 0) {'
p7920
aS'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, len, info);'
p7921
as(I1218
I1218
tp7922
(lp7923
S'\telse if ((*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p7924
as(I1101
I1101
tp7925
(lp7926
S'\t\t\t\tdiag_send_error_rsp(buf, len, info);'
p7927
as(I1025
I1026
tp7928
(lp7929
S'\tint i;'
p7930
aS'\tint mask_ret;'
p7931
as(I1204
I1204
tp7932
(lp7933
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 5, info);'
p7934
as(I1114
I1114
tp7935
(lp7936
S'\tif ((*buf == 0x4b) && (*(buf+1) == 0x12) &&'
p7937
as(I1166
I1166
tp7938
(lp7939
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p7940
as(I1120
I1120
tp7941
(lp7942
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 8, info);'
p7943
as(I1278
I1278
tp7944
(lp7945
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p7946
as(I1246
I1246
tp7947
(lp7948
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 55, info);'
p7949
as(I1122
I1122
tp7950
(lp7951
S'\t} else if ((*buf == 0x4b) && (*(buf+1) == 0x12) &&'
p7952
as(I1174
I1174
tp7953
(lp7954
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 1, info);'
p7955
as(I1214
I1214
tp7956
(lp7957
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 6, info);'
p7958
as(I1242
I1242
tp7959
(lp7960
S'\t\tif (*buf == 0x00) {'
p7961
as(I1134
I1134
tp7962
(lp7963
S'\telse if ((*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p7964
as(I1317
I1317
tp7965
(lp7966
S'\t\tdiag_send_error_rsp(buf, len, info);'
p7967
as(I1142
I1142
tp7968
(lp7969
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p7970
as(I1194
I1194
tp7971
(lp7972
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 16, info);'
p7973
as(I1070
I1070
tp7974
(lp7975
S'\tif (*buf == DIAG_CMD_LOG_ON_DMND && driver->log_on_demand_support &&'
p7976
as(I1266
I1266
tp7977
(lp7978
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p7979
as(I1170
I1170
tp7980
(lp7981
S'\telse if ((chk_apps_master()) && (*buf == 0x3A)) {'
p7982
as(I1077
I1077
tp7983
(lp7984
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p7985
as(I1199
I1199
tp7986
(lp7987
S'\telse if ((*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p7988
assg9
(I1023
I1320
tp7989
sg11
I3
sg12
g13
sg14
(dp7990
(I1259
I1259
tp7991
(lp7992
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 14, pid);'
p7993
as(I1120
I1120
tp7994
(lp7995
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 8, pid);'
p7996
as(I1131
I1131
tp7997
(lp7998
S'\t\treturn write_len;'
p7999
as(I1094
I1094
tp8000
(lp8001
S'\t\t\t\tp_mask) || (pd_mask & p_mask))'
p8002
as(I1036
I1036
tp8003
(lp8004
S'\tif (!buf || len <= 0)'
p8005
as(I1042
I1042
tp8006
(lp8007
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, mask_ret, pid);'
p8008
as(I1170
I1171
tp8009
(lp8010
S'\telse if ((len >= sizeof(uint8_t)) && (chk_apps_master()) &&'
p8011
aS'\t\t(*buf == 0x3A)) {'
p8012
as(I1070
I1071
tp8013
(lp8014
S'\tif ((len >= sizeof(uint8_t)) && *buf == DIAG_CMD_LOG_ON_DMND &&'
p8015
aS'\t\tdriver->log_on_demand_support &&'
p8016
as(I1250
I1250
tp8017
(lp8018
S'\t\telse if ((len >= sizeof(uint8_t)) && *buf == 0x7c) {'
p8019
as(I1077
I1077
tp8020
(lp8021
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8022
as(I1142
I1142
tp8023
(lp8024
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8025
as(I1184
I1185
tp8026
(lp8027
S'\telse if ((len >= (3 * sizeof(uint8_t))) &&'
p8028
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x32) && (*(buf+2) == 0x03)) {'
p8029
as(I1226
I1226
tp8030
(lp8031
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8032
as(I1158
I1159
tp8033
(lp8034
S'\telse if ((len >= ((2 * sizeof(uint8_t)) + sizeof(uint16_t))) &&'
p8035
aS'\t\t(*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8036
as(I1101
I1101
tp8037
(lp8038
S'\t\t\t\tdiag_send_error_rsp(buf, len, pid);'
p8039
as(I1218
I1219
tp8040
(lp8041
S'\telse if ((len >= (4 * sizeof(uint8_t))) &&'
p8042
aS'\t\t(*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8043
as(I1208
I1209
tp8044
(lp8045
S'\telse if ((len >= (4 * sizeof(uint8_t))) &&'
p8046
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p8047
as(I1278
I1278
tp8048
(lp8049
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8050
as(I1047
I1068
tp8051
(lp8052
S'\tif (len >= sizeof(uint8_t)) {'
p8053
aS'\t\tentry.cmd_code = (uint16_t)(*(uint8_t *)temp);'
p8054
aS'\t\tpr_debug("diag: received cmd_code %02x\\n", entry.cmd_code);'
p8055
aS'\t}'
p8056
aS'\tif (len >= (2 * sizeof(uint8_t))) {'
p8057
aS'\t\ttemp += sizeof(uint8_t);'
p8058
aS'\t\tentry.subsys_id = (uint16_t)(*(uint8_t *)temp);'
p8059
aS'\t\tpr_debug("diag: received subsys_id %02x\\n", entry.subsys_id);'
p8060
aS'\t}'
p8061
aS'\tif (len == (3 * sizeof(uint8_t))) {'
p8062
aS'\t\ttemp += sizeof(uint8_t);'
p8063
aS'\t\tentry.cmd_code_hi = (uint16_t)(*(uint8_t *)temp);'
p8064
aS'\t\tentry.cmd_code_lo = (uint16_t)(*(uint8_t *)temp);'
p8065
aS'\t\tpr_debug("diag: received cmd_code_hi %02x\\n",'
p8066
aS'\t\t\tentry.cmd_code_hi);'
p8067
aS'\t} else if (len >= (2 * sizeof(uint8_t)) + sizeof(uint16_t)) {'
p8068
aS'\t\ttemp += sizeof(uint8_t);'
p8069
aS'\t\tentry.cmd_code_hi = (uint16_t)(*(uint16_t *)temp);'
p8070
aS'\t\tentry.cmd_code_lo = (uint16_t)(*(uint16_t *)temp);'
p8071
aS'\t\tpr_debug("diag: received cmd_code_hi %02x\\n",'
p8072
aS'\t\t\tentry.cmd_code_hi);'
p8073
aS'\t}'
p8074
as(I1292
I1308
tp8075
(lp8076
S'\t\tperipheral ='
p8077
aS'\t\t\tdiag_md_session_match_pid_peripheral(pid, 0);'
p8078
aS'\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p8079
aS'\t\t\tif (peripheral > 0 && info) {'
p8080
aS'\t\t\t\tif (peripheral & (1 << i))'
p8081
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p8082
aS'\t\t\t\t\tinfo->hdlc_disabled;'
p8083
aS'\t\t\t\telse if (!diag_md_session_get_peripheral(i))'
p8084
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p8085
aS'\t\t\t\t\tdriver->hdlc_disabled;'
p8086
aS'\t\t\t} else {'
p8087
aS'\t\t\t\tif (!diag_md_session_get_peripheral(i))'
p8088
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p8089
aS'\t\t\t\t\tdriver->hdlc_disabled;'
p8090
aS'\t\t\t}'
p8091
aS'\t\t}'
p8092
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p8093
as(I1199
I1200
tp8094
(lp8095
S'\telse if ((len >= (4 * sizeof(uint8_t))) &&'
p8096
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p8097
as(I1023
I1023
tp8098
(lp8099
S'int diag_process_apps_pkt(unsigned char *buf, int len, int pid)'
p8100
as(I1025
I1026
tp8101
(lp8102
S'\tint i, p_mask = 0;'
p8103
aS'\tint mask_ret, peripheral = -EINVAL;'
p8104
as(I1204
I1204
tp8105
(lp8106
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 5, pid);'
p8107
as(I1242
I1242
tp8108
(lp8109
S'\t\tif ((len >= sizeof(uint8_t)) && *buf == 0x00) {'
p8110
as(I1166
I1166
tp8111
(lp8112
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8113
as(I1146
I1147
tp8114
(lp8115
S'\telse if ((len >= ((2 * sizeof(uint8_t)) + sizeof(uint16_t))) &&'
p8116
aS'\t\t(*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8117
as(I1040
I1040
tp8118
(lp8119
S'\tmask_ret = diag_process_apps_masks(buf, len, pid);'
p8120
as(I1086
I1087
tp8121
(lp8122
S'\t\tmutex_lock(&driver->md_session_lock);'
p8123
aS'\t\tinfo = diag_md_session_get_pid(pid);'
p8124
as(I1174
I1174
tp8125
(lp8126
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 1, pid);'
p8127
as(I1214
I1214
tp8128
(lp8129
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 6, pid);'
p8130
as(I1089
I1090
tp8131
(lp8132
S'\t\t\tp_mask = info->peripheral_mask;'
p8133
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p8134
as(I1125
I1128
tp8135
(lp8136
S'\t\twrite_len = diag_process_stm_cmd(buf, len,'
p8137
aS'\t\t\tdriver->apps_rsp_buf);'
p8138
aS'\t\tif (write_len > 0) {'
p8139
aS'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8140
as(I1114
I1115
tp8141
(lp8142
S'\tif ((len >= (4 * sizeof(uint8_t))) &&'
p8143
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x12) &&'
p8144
as(I1317
I1317
tp8145
(lp8146
S'\t\tdiag_send_error_rsp(buf, len, pid);'
p8147
as(I1194
I1194
tp8148
(lp8149
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 16, pid);'
p8150
as(I1034
I1034
tp8151
(lp8152
S'\tstruct diag_md_session_t *info = NULL;'
p8153
as(I1097
I1097
tp8154
(lp8155
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p8156
as(I1134
I1135
tp8157
(lp8158
S'\telse if ((len >= ((2 * sizeof(uint8_t)) + sizeof(uint16_t))) &&'
p8159
aS'\t\t(*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8160
as(I1266
I1266
tp8161
(lp8162
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8163
as(I1246
I1246
tp8164
(lp8165
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 55, pid);'
p8166
as(I1122
I1123
tp8167
(lp8168
S'\t} else if ((len >= ((2 * sizeof(uint8_t)) + sizeof(uint16_t))) &&'
p8169
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x12) &&'
p8170
as(I1154
I1154
tp8171
(lp8172
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8173
as(I1286
I1287
tp8174
(lp8175
S'\t\tmutex_lock(&driver->md_session_lock);'
p8176
aS'\t\tinfo = diag_md_session_get_pid(pid);'
p8177
assssS'70f432282130_sdm845-perf'
p8178
(dp8179
(g7793
S'diag_cmd_get_build_mask'
p8180
I633
tp8181
(dp8182
g27
(dp8183
(I644
I644
tp8184
(lp8185
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0) {'
p8186
as(I634
I635
tp8187
(lp8188
S'\t\t\t\t   unsigned char *dest_buf, int dest_len,'
p8189
aS'\t\t\t\t   struct diag_md_session_t *info)'
p8190
assg9
(I633
I687
tp8191
sg11
I5
sg12
g13
sg14
(dp8192
(I644
I645
tp8193
(lp8194
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p8195
aS'\t\tsrc_len < sizeof(struct diag_build_mask_req_t)) {'
p8196
as(I663
I664
tp8197
(lp8198
S'\t\tif (!build_mask->ptr)'
p8199
aS'\t\t\tcontinue;'
p8200
as(I634
I634
tp8201
(lp8202
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p8203
asss(g7793
S'diag_cmd_get_msg_mask'
p8204
I689
tp8205
(dp8206
g27
(dp8207
(I720
I720
tp8208
(lp8209
S'\tif (!diag_apps_responds())'
p8210
as(I690
I691
tp8211
(lp8212
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p8213
aS'\t\t\t\t struct diag_md_session_t *info)'
p8214
as(I707
I707
tp8215
(lp8216
S'\t    !mask_info) {'
p8217
as(I743
I743
tp8218
(lp8219
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p8220
assg9
(I689
I764
tp8221
sg11
I5
sg12
g13
sg14
(dp8222
(I720
I721
tp8223
(lp8224
S'\tif (!diag_apps_responds()) {'
p8225
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p8226
as(I700
I703
tp8227
(lp8228
S'\tstruct diag_md_session_t *info = NULL;'
p8229
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p8230
aS'\tinfo = diag_md_session_get_pid(pid);'
p8231
as(I726
I727
tp8232
(lp8233
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p8234
aS'\t\t\tdriver->msg_mask_tbl_count;'
p8235
as(I717
I717
tp8236
(lp8237
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8238
as(I762
I762
tp8239
(lp8240
S'\tmutex_unlock(&driver->md_session_lock);'
p8241
as(I740
I740
tp8242
(lp8243
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8244
as(I711
I711
tp8245
(lp8246
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8247
as(I695
I695
tp8248
(lp8249
S'\tuint8_t msg_mask_tbl_count = 0;'
p8250
as(I690
I690
tp8251
(lp8252
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p8253
as(I707
I707
tp8254
(lp8255
S'\t    !mask_info || (src_len < sizeof(struct diag_build_mask_req_t))) {'
p8256
as(I743
I745
tp8257
(lp8258
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p8259
aS'\t\tif (!mask->ptr)'
p8260
aS'\t\t\tcontinue;'
p8261
as(I723
I723
tp8262
(lp8263
S'\t}'
p8264
asss(g7856
g7857
I1019
tp8265
(dp8266
g27
(dp8267
(I1149
I1149
tp8268
(lp8269
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p8270
as(I1312
I1312
tp8271
(lp8272
S'\t\tdiag_send_error_rsp(buf, len, info);'
p8273
as(I1165
I1165
tp8274
(lp8275
S'\telse if ((chk_apps_master()) && (*buf == 0x3A)) {'
p8276
as(I1021
I1022
tp8277
(lp8278
S'\tint i;'
p8279
aS'\tint mask_ret;'
p8280
as(I1123
I1123
tp8281
(lp8282
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, len, info);'
p8283
as(I1209
I1209
tp8284
(lp8285
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 6, info);'
p8286
as(I1097
I1097
tp8287
(lp8288
S'\t\t\t\tdiag_send_error_rsp(buf, len, info);'
p8289
as(I1203
I1203
tp8290
(lp8291
S'\telse if ((*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p8292
as(I1116
I1116
tp8293
(lp8294
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 8, info);'
p8295
as(I1141
I1141
tp8296
(lp8297
S'\telse if ((*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8298
as(I1213
I1213
tp8299
(lp8300
S'\telse if ((*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8301
as(I1129
I1129
tp8302
(lp8303
S'\telse if ((*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8304
as(I1038
I1038
tp8305
(lp8306
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, mask_ret, info);'
p8307
as(I1237
I1237
tp8308
(lp8309
S'\t\tif (*buf == 0x00) {'
p8310
as(I1179
I1180
tp8311
(lp8312
S'\telse if ((*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p8313
aS'\t\t(*(buf+2) == 0x03)) {'
p8314
as(I1073
I1073
tp8315
(lp8316
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p8317
as(I1036
I1036
tp8318
(lp8319
S'\tmask_ret = diag_process_apps_masks(buf, len, info);'
p8320
as(I1043
I1052
tp8321
(lp8322
S'\tentry.cmd_code = (uint16_t)(*(uint8_t *)temp);'
p8323
aS'\ttemp += sizeof(uint8_t);'
p8324
aS'\tentry.subsys_id = (uint16_t)(*(uint8_t *)temp);'
p8325
aS'\ttemp += sizeof(uint8_t);'
p8326
aS'\tentry.cmd_code_hi = (uint16_t)(*(uint16_t *)temp);'
p8327
aS'\tentry.cmd_code_lo = (uint16_t)(*(uint16_t *)temp);'
p8328
aS'\ttemp += sizeof(uint16_t);'
p8329
ag119
aS'\tpr_debug("diag: In %s, received cmd %02x %02x %02x\\n",'
p8330
aS'\t\t __func__, entry.cmd_code, entry.subsys_id, entry.cmd_code_hi);'
p8331
as(I1254
I1254
tp8332
(lp8333
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 14, info);'
p8334
as(I1241
I1241
tp8335
(lp8336
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 55, info);'
p8337
as(I1273
I1273
tp8338
(lp8339
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p8340
as(I1137
I1137
tp8341
(lp8342
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p8343
as(I1110
I1110
tp8344
(lp8345
S'\tif ((*buf == 0x4b) && (*(buf+1) == 0x12) &&'
p8346
as(I1090
I1091
tp8347
(lp8348
S'\t\t\t\tinfo->peripheral_mask) ||'
p8349
aS'\t\t\t\t(pd_mask & info->peripheral_mask))'
p8350
as(I1153
I1153
tp8351
(lp8352
S'\telse if ((*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8353
as(I1245
I1245
tp8354
(lp8355
S'\t\telse if (*buf == 0x7c) {'
p8356
as(I1189
I1189
tp8357
(lp8358
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 16, info);'
p8359
as(I1194
I1194
tp8360
(lp8361
S'\telse if ((*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p8362
as(I1066
I1066
tp8363
(lp8364
S'\tif (*buf == DIAG_CMD_LOG_ON_DMND && driver->log_on_demand_support &&'
p8365
as(I1261
I1261
tp8366
(lp8367
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p8368
as(I1161
I1161
tp8369
(lp8370
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p8371
as(I1169
I1169
tp8372
(lp8373
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 1, info);'
p8374
as(I1032
I1032
tp8375
(lp8376
S'\tif (!buf)'
p8377
as(I1221
I1221
tp8378
(lp8379
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p8380
as(I1118
I1118
tp8381
(lp8382
S'\t} else if ((*buf == 0x4b) && (*(buf+1) == 0x12) &&'
p8383
as(I1019
I1020
tp8384
(lp8385
S'int diag_process_apps_pkt(unsigned char *buf, int len,'
p8386
aS'\t\t\tstruct diag_md_session_t *info)'
p8387
as(I1199
I1199
tp8388
(lp8389
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 5, info);'
p8390
assg9
(I1019
I1315
tp8391
sg11
I3
sg12
g13
sg14
(dp8392
(I1312
I1312
tp8393
(lp8394
S'\t\tdiag_send_error_rsp(buf, len, pid);'
p8395
as(I1110
I1111
tp8396
(lp8397
S'\tif ((len >= (4 * sizeof(uint8_t))) &&'
p8398
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x12) &&'
p8399
as(I1237
I1237
tp8400
(lp8401
S'\t\tif ((len >= sizeof(uint8_t)) && *buf == 0x00) {'
p8402
as(I1030
I1030
tp8403
(lp8404
S'\tstruct diag_md_session_t *info = NULL;'
p8405
as(I1213
I1214
tp8406
(lp8407
S'\telse if ((len >= (4 * sizeof(uint8_t))) &&'
p8408
aS'\t\t(*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8409
as(I1036
I1036
tp8410
(lp8411
S'\tmask_ret = diag_process_apps_masks(buf, len, pid);'
p8412
as(I1273
I1273
tp8413
(lp8414
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8415
as(I1161
I1161
tp8416
(lp8417
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8418
as(I1118
I1119
tp8419
(lp8420
S'\t} else if ((len >= ((2 * sizeof(uint8_t)) + sizeof(uint16_t))) &&'
p8421
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x12) &&'
p8422
as(I1194
I1195
tp8423
(lp8424
S'\telse if ((len >= (4 * sizeof(uint8_t))) &&'
p8425
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p8426
as(I1261
I1261
tp8427
(lp8428
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8429
as(I1043
I1064
tp8430
(lp8431
S'\tif (len >= sizeof(uint8_t)) {'
p8432
aS'\t\tentry.cmd_code = (uint16_t)(*(uint8_t *)temp);'
p8433
aS'\t\tpr_debug("diag: received cmd_code %02x\\n", entry.cmd_code);'
p8434
aS'\t}'
p8435
aS'\tif (len >= (2 * sizeof(uint8_t))) {'
p8436
aS'\t\ttemp += sizeof(uint8_t);'
p8437
aS'\t\tentry.subsys_id = (uint16_t)(*(uint8_t *)temp);'
p8438
aS'\t\tpr_debug("diag: received subsys_id %02x\\n", entry.subsys_id);'
p8439
aS'\t}'
p8440
aS'\tif (len == (3 * sizeof(uint8_t))) {'
p8441
aS'\t\ttemp += sizeof(uint8_t);'
p8442
aS'\t\tentry.cmd_code_hi = (uint16_t)(*(uint8_t *)temp);'
p8443
aS'\t\tentry.cmd_code_lo = (uint16_t)(*(uint8_t *)temp);'
p8444
aS'\t\tpr_debug("diag: received cmd_code_hi %02x\\n",'
p8445
aS'\t\t\tentry.cmd_code_hi);'
p8446
aS'\t} else if (len >= (2 * sizeof(uint8_t)) + sizeof(uint16_t)) {'
p8447
aS'\t\ttemp += sizeof(uint8_t);'
p8448
aS'\t\tentry.cmd_code_hi = (uint16_t)(*(uint16_t *)temp);'
p8449
aS'\t\tentry.cmd_code_lo = (uint16_t)(*(uint16_t *)temp);'
p8450
aS'\t\tpr_debug("diag: received cmd_code_hi %02x\\n",'
p8451
aS'\t\t\tentry.cmd_code_hi);'
p8452
aS'\t}'
p8453
as(I1281
I1282
tp8454
(lp8455
S'\t\tmutex_lock(&driver->md_session_lock);'
p8456
aS'\t\tinfo = diag_md_session_get_pid(pid);'
p8457
as(I1082
I1083
tp8458
(lp8459
S'\t\tmutex_lock(&driver->md_session_lock);'
p8460
aS'\t\tinfo = diag_md_session_get_pid(pid);'
p8461
as(I1149
I1149
tp8462
(lp8463
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8464
as(I1021
I1022
tp8465
(lp8466
S'\tint i, p_mask = 0;'
p8467
aS'\tint mask_ret, peripheral = -EINVAL;'
p8468
as(I1038
I1038
tp8469
(lp8470
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, mask_ret, pid);'
p8471
as(I1073
I1073
tp8472
(lp8473
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8474
as(I1179
I1180
tp8475
(lp8476
S'\telse if ((len >= (3 * sizeof(uint8_t))) &&'
p8477
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x32) && (*(buf+2) == 0x03)) {'
p8478
as(I1287
I1303
tp8479
(lp8480
S'\t\tperipheral ='
p8481
aS'\t\t\tdiag_md_session_match_pid_peripheral(pid, 0);'
p8482
aS'\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p8483
aS'\t\t\tif (peripheral > 0 && info) {'
p8484
aS'\t\t\t\tif (peripheral & (1 << i))'
p8485
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p8486
aS'\t\t\t\t\tinfo->hdlc_disabled;'
p8487
aS'\t\t\t\telse if (!diag_md_session_get_peripheral(i))'
p8488
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p8489
aS'\t\t\t\t\tdriver->hdlc_disabled;'
p8490
aS'\t\t\t} else {'
p8491
aS'\t\t\t\tif (!diag_md_session_get_peripheral(i))'
p8492
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p8493
aS'\t\t\t\t\tdriver->hdlc_disabled;'
p8494
aS'\t\t\t}'
p8495
aS'\t\t}'
p8496
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p8497
as(I1245
I1245
tp8498
(lp8499
S'\t\telse if ((len >= sizeof(uint8_t)) && *buf == 0x7c) {'
p8500
as(I1153
I1154
tp8501
(lp8502
S'\telse if ((len >= ((2 * sizeof(uint8_t)) + sizeof(uint16_t))) &&'
p8503
aS'\t\t(*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8504
as(I1019
I1019
tp8505
(lp8506
S'int diag_process_apps_pkt(unsigned char *buf, int len, int pid)'
p8507
as(I1066
I1067
tp8508
(lp8509
S'\tif ((len >= sizeof(uint8_t)) && *buf == DIAG_CMD_LOG_ON_DMND &&'
p8510
aS'\t\tdriver->log_on_demand_support &&'
p8511
as(I1254
I1254
tp8512
(lp8513
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 14, pid);'
p8514
as(I1090
I1090
tp8515
(lp8516
S'\t\t\t\tp_mask) || (pd_mask & p_mask))'
p8517
as(I1241
I1241
tp8518
(lp8519
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 55, pid);'
p8520
as(I1209
I1209
tp8521
(lp8522
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 6, pid);'
p8523
as(I1129
I1130
tp8524
(lp8525
S'\telse if ((len >= ((2 * sizeof(uint8_t)) + sizeof(uint16_t))) &&'
p8526
aS'\t\t(*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8527
as(I1169
I1169
tp8528
(lp8529
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 1, pid);'
p8530
as(I1203
I1204
tp8531
(lp8532
S'\telse if ((len >= (4 * sizeof(uint8_t))) &&'
p8533
aS'\t\t(*buf == 0x4b) && (*(buf+1) == 0x32) &&'
p8534
as(I1085
I1086
tp8535
(lp8536
S'\t\t\tp_mask = info->peripheral_mask;'
p8537
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p8538
as(I1221
I1221
tp8539
(lp8540
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8541
as(I1123
I1123
tp8542
(lp8543
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, len, pid);'
p8544
as(I1141
I1142
tp8545
(lp8546
S'\telse if ((len >= ((2 * sizeof(uint8_t)) + sizeof(uint16_t))) &&'
p8547
aS'\t\t(*buf == DIAG_CMD_DIAG_SUBSYS) &&'
p8548
as(I1116
I1116
tp8549
(lp8550
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 8, pid);'
p8551
as(I1097
I1097
tp8552
(lp8553
S'\t\t\t\tdiag_send_error_rsp(buf, len, pid);'
p8554
as(I1137
I1137
tp8555
(lp8556
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p8557
as(I1165
I1166
tp8558
(lp8559
S'\telse if ((len >= sizeof(uint8_t)) && (chk_apps_master()) &&'
p8560
aS'\t\t(*buf == 0x3A)) {'
p8561
as(I1093
I1093
tp8562
(lp8563
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p8564
as(I1032
I1032
tp8565
(lp8566
S'\tif (!buf || len <= 0)'
p8567
as(I1189
I1189
tp8568
(lp8569
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 16, pid);'
p8570
as(I1199
I1199
tp8571
(lp8572
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 5, pid);'
p8573
assssS'a77c16d4981b_sdm845-perf'
p8574
(dp8575
(g7856
S'diag_process_non_hdlc_pkt'
p8576
I1692
tp8577
(dp8578
g27
(dp8579
(I1692
I1693
tp8580
(lp8581
S'void diag_process_non_hdlc_pkt(unsigned char *buf, int len,'
p8582
aS'\t\t\t       struct diag_md_session_t *info)'
p8583
as(I1748
I1748
tp8584
(lp8585
S'\t\t\tdiag_hdlc_start_recovery(buf, len, info);'
p8586
as(I1783
I1783
tp8587
(lp8588
S'\t\t\tdiag_hdlc_start_recovery(buf, len, info);'
p8589
as(I1800
I1800
tp8590
(lp8591
S'\t\t\tdiag_hdlc_start_recovery(buf, len, info);'
p8592
as(I1752
I1752
tp8593
(lp8594
S'\t\t\t\t\t    actual_pkt->length, info);'
p8595
as(I1774
I1775
tp8596
(lp8597
S'\t\t\tdiag_hdlc_start_recovery(buf, len, info);'
p8598
aS'\t\t\tdiag_send_error_rsp(buf, len, info);'
p8599
as(I1806
I1806
tp8600
(lp8601
S'\t\t\t\t\t    actual_pkt->length, info);'
p8602
assg9
(I1692
I1817
tp8603
sg11
I3
sg12
g13
sg14
(dp8604
(I1692
I1692
tp8605
(lp8606
S'void diag_process_non_hdlc_pkt(unsigned char *buf, int len, int pid)'
p8607
as(I1748
I1748
tp8608
(lp8609
S'\t\t\tdiag_hdlc_start_recovery(buf, (len - read_bytes), pid);'
p8610
as(I1783
I1783
tp8611
(lp8612
S'\t\t\tdiag_hdlc_start_recovery(buf, (len - read_bytes), pid);'
p8613
as(I1800
I1800
tp8614
(lp8615
S'\t\t\tdiag_hdlc_start_recovery(buf, (len - read_bytes), pid);'
p8616
as(I1752
I1752
tp8617
(lp8618
S'\t\t\t\t\t    actual_pkt->length, pid);'
p8619
as(I1774
I1775
tp8620
(lp8621
S'\t\t\tdiag_hdlc_start_recovery(buf, (len - read_bytes), pid);'
p8622
aS'\t\t\tdiag_send_error_rsp(buf, (len - read_bytes), pid);'
p8623
as(I1806
I1806
tp8624
(lp8625
S'\t\t\t\t\t    actual_pkt->length, pid);'
p8626
asss(g7793
S'diag_cmd_set_log_mask'
p8627
I1328
tp8628
(dp8629
g27
(dp8630
(I1349
I1350
tp8631
(lp8632
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p8633
aS'\t    !mask_info) {'
p8634
as(I1330
I1330
tp8635
(lp8636
S'\t\t\t\t struct diag_md_session_t *info)'
p8637
as(I1424
I1424
tp8638
(lp8639
S'\t\tif (mask_size > 0)'
p8640
as(I1435
I1435
tp8641
(lp8642
S'\tif (diag_check_update(APPS_DATA))'
p8643
as(I1467
I1467
tp8644
(lp8645
S'\t\tif (!diag_check_update(i))'
p8646
assg9
(I1328
I1479
tp8647
sg11
I5
sg12
g13
sg14
(dp8648
(I1360
I1360
tp8649
(lp8650
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8651
as(I1467
I1467
tp8652
(lp8653
S'\t\tif (!diag_check_update(i, pid))'
p8654
as(I1354
I1354
tp8655
(lp8656
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8657
as(I1349
I1350
tp8658
(lp8659
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p8660
aS'\t\tsrc_len < sizeof(struct diag_log_config_req_t)) {'
p8661
as(I1435
I1436
tp8662
(lp8663
S'\tmutex_unlock(&driver->md_session_lock);'
p8664
aS'\tif (diag_check_update(APPS_DATA, pid))'
p8665
as(I1370
I1370
tp8666
(lp8667
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8668
as(I1424
I1424
tp8669
(lp8670
S'\t\tif (mask_size > 0 && src_len >= read_len + mask_size)'
p8671
as(I1343
I1346
tp8672
(lp8673
S'\tstruct diag_md_session_t *info = NULL;'
p8674
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p8675
aS'\tinfo = diag_md_session_get_pid(pid);'
p8676
as(I1330
I1330
tp8677
(lp8678
S'\t\t\t\t int pid)'
p8679
as(I1387
I1388
tp8680
(lp8681
S'\t\tif (!mask || !mask->ptr)'
p8682
aS'\t\t\tcontinue;'
p8683
asss(g7598
S'diag_user_process_raw_data'
p8684
I3192
tp8685
(dp8686
g27
(dp8687
(I3233
I3233
tp8688
(lp8689
S'\t\t\t\t\t\ttoken_offset)) {'
p8690
as(I3200
I3200
tp8691
(lp8692
S'\tstruct diag_md_session_t *info = NULL;'
p8693
as(I3255
I3255
tp8694
(lp8695
S'\t\t\t\t\t\tinfo);'
p8696
as(I3251
I3254
tp8697
(lp8698
S'\t\tmutex_lock(&driver->md_session_lock);'
p8699
aS'\t\tinfo = diag_md_session_get_pid(current->tgid);'
p8700
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p8701
aS'\t\tret = diag_process_apps_pkt(user_space_data, len, info);'
p8702
as(I3218
I3218
tp8703
(lp8704
S'\tremote_proc = diag_get_remote(*(int *)user_space_data);'
p8705
assg9
(I3192
I3261
tp8706
sg11
I2
sg12
g13
sg14
(dp8707
(I3218
I3219
tp8708
(lp8709
S'\tif (len >= sizeof(int))'
p8710
aS'\t\tremote_proc = diag_get_remote(*(int *)user_space_data);'
p8711
as(I3251
I3252
tp8712
(lp8713
S'\t\tret = diag_process_apps_pkt(user_space_data, len,'
p8714
aS'\t\t\tcurrent->tgid);'
p8715
as(I3255
I3255
tp8716
(lp8717
S'\t\t\t\t\t\tcurrent->tgid);'
p8718
as(I3233
I3233
tp8719
(lp8720
S'\t\t\t\t\t\ttoken_offset, len)) {'
p8721
asss(g7793
S'diag_cmd_set_all_msg_mask'
p8722
I919
tp8723
(dp8724
g27
(dp8725
(I920
I921
tp8726
(lp8727
S'\t\t\t\t     unsigned char *dest_buf, int dest_len,'
p8728
aS'\t\t\t\t     struct diag_md_session_t *info)'
p8729
as(I978
I979
tp8730
(lp8731
g119
aS'\tif (diag_check_update(APPS_DATA))'
p8732
as(I935
I936
tp8733
(lp8734
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p8735
aS'\t    !mask_info) {'
p8736
as(I997
I997
tp8737
(lp8738
S'\t\tif (!diag_check_update(i))'
p8739
as(I968
I972
tp8740
(lp8741
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p8742
aS'\t\tmutex_lock(&mask->lock);'
p8743
aS'\t\tmemset(mask->ptr, req->rt_mask,'
p8744
aS'\t\t       mask->range * sizeof(uint32_t));'
p8745
aS'\t\tmutex_unlock(&mask->lock);'
p8746
assg9
(I919
I1009
tp8747
sg11
I5
sg12
g13
sg14
(dp8748
(I968
I974
tp8749
(lp8750
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p8751
aS'\t\tif (mask && mask->ptr) {'
p8752
aS'\t\t\tmutex_lock(&mask->lock);'
p8753
aS'\t\t\tmemset(mask->ptr, req->rt_mask,'
p8754
aS'\t\t\t       mask->range * sizeof(uint32_t));'
p8755
aS'\t\t\tmutex_unlock(&mask->lock);'
p8756
aS'\t\t}'
p8757
as(I997
I997
tp8758
(lp8759
S'\t\tif (!diag_check_update(i, pid))'
p8760
as(I964
I965
tp8761
(lp8762
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p8763
aS'\t\t\tdriver->msg_mask_tbl_count;'
p8764
as(I928
I932
tp8765
(lp8766
S'\tstruct diag_md_session_t *info = NULL;'
p8767
aS'\tuint8_t msg_mask_tbl_count = 0;'
p8768
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p8769
aS'\tinfo = diag_md_session_get_pid(pid);'
p8770
as(I940
I940
tp8771
(lp8772
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8773
as(I920
I920
tp8774
(lp8775
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p8776
as(I978
I979
tp8777
(lp8778
S'\tmutex_unlock(&driver->md_session_lock);'
p8779
aS'\tif (diag_check_update(APPS_DATA, pid))'
p8780
as(I946
I946
tp8781
(lp8782
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8783
as(I935
I936
tp8784
(lp8785
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p8786
aS'\t\t(src_len < sizeof(struct diag_msg_config_rsp_t))) {'
p8787
as(I961
I961
tp8788
(lp8789
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8790
asss(g7793
S'diag_process_apps_masks'
p8791
I2295
tp8792
(dp8793
g27
(dp8794
(I2299
I2300
tp8795
(lp8796
S'\t\t    unsigned char *dest_buf, int dest_len,'
p8797
aS'\t\t    struct diag_md_session_t *info) = NULL;'
p8798
as(I2295
I2296
tp8799
(lp8800
S'int diag_process_apps_masks(unsigned char *buf, int len,'
p8801
aS'\t\t\t    struct diag_md_session_t *info)'
p8802
as(I2358
I2358
tp8803
(lp8804
S'\t\t\t    DIAG_MAX_RSP_SIZE, info);'
p8805
assg9
(I2295
I2361
tp8806
sg11
I3
sg12
g13
sg14
(dp8807
(I2305
I2306
tp8808
(lp8809
S'\t\tif (len < (2 * sizeof(int)))'
p8810
aS'\t\t\treturn -EINVAL;'
p8811
as(I2317
I2317
tp8812
(lp8813
S'\t\t\tdriver->set_mask_cmd = 1;'
p8814
as(I2358
I2358
tp8815
(lp8816
S'\t\t\t    DIAG_MAX_RSP_SIZE, pid);'
p8817
as(I2324
I2325
tp8818
(lp8819
S'\t\tif (len < (2 * sizeof(uint8_t)))'
p8820
aS'\t\t\treturn -EINVAL;'
p8821
as(I2295
I2295
tp8822
(lp8823
S'int diag_process_apps_masks(unsigned char *buf, int len, int pid)'
p8824
as(I2343
I2343
tp8825
(lp8826
S'\t\t\tdriver->set_mask_cmd = 1;'
p8827
as(I2339
I2339
tp8828
(lp8829
S'\t\t\tdriver->set_mask_cmd = 1;'
p8830
as(I2350
I2350
tp8831
(lp8832
S'\t\tdriver->set_mask_cmd = 1;'
p8833
as(I2353
I2353
tp8834
(lp8835
S'\t\tdriver->set_mask_cmd = 1;'
p8836
as(I2299
I2299
tp8837
(lp8838
S'\t\t    unsigned char *dest_buf, int dest_len, int pid) = NULL;'
p8839
asss(g7793
g8180
I633
tp8840
(dp8841
g27
(dp8842
(I644
I644
tp8843
(lp8844
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0) {'
p8845
as(I634
I635
tp8846
(lp8847
S'\t\t\t\t   unsigned char *dest_buf, int dest_len,'
p8848
aS'\t\t\t\t   struct diag_md_session_t *info)'
p8849
assg9
(I633
I687
tp8850
sg11
I5
sg12
g13
sg14
(dp8851
(I644
I645
tp8852
(lp8853
S'\tif (!src_buf || !dest_buf || dest_len <= 0 ||'
p8854
aS'\t\tsrc_len < sizeof(struct diag_build_mask_req_t)) {'
p8855
as(I663
I664
tp8856
(lp8857
S'\t\tif (!build_mask->ptr)'
p8858
aS'\t\t\tcontinue;'
p8859
as(I634
I634
tp8860
(lp8861
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p8862
asss(g7793
g7794
I1187
tp8863
(dp8864
g27
(dp8865
(I1188
I1189
tp8866
(lp8867
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p8868
aS'\t\t\t\t struct diag_md_session_t *info)'
p8869
as(I1207
I1208
tp8870
(lp8871
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p8872
aS'\t    !mask_info) {'
p8873
as(I1222
I1222
tp8874
(lp8875
S'\tif (!diag_apps_responds())'
p8876
assg9
(I1187
I1289
tp8877
sg11
I5
sg12
g13
sg14
(dp8878
(I1188
I1188
tp8879
(lp8880
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p8881
as(I1222
I1223
tp8882
(lp8883
S'\tif (!diag_apps_responds()) {'
p8884
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p8885
as(I1245
I1245
tp8886
(lp8887
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8888
as(I1212
I1212
tp8889
(lp8890
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8891
as(I1225
I1225
tp8892
(lp8893
S'\t}'
p8894
as(I1201
I1204
tp8895
(lp8896
S'\tstruct diag_md_session_t *info = NULL;'
p8897
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p8898
aS'\tinfo = diag_md_session_get_pid(pid);'
p8899
as(I1287
I1287
tp8900
(lp8901
S'\tmutex_unlock(&driver->md_session_lock);'
p8902
as(I1218
I1218
tp8903
(lp8904
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8905
as(I1207
I1208
tp8906
(lp8907
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p8908
aS'\t\tsrc_len < sizeof(struct diag_log_config_req_t)) {'
p8909
asss(g7793
S'diag_cmd_toggle_events'
p8910
I1121
tp8911
(dp8912
g27
(dp8913
(I1133
I1134
tp8914
(lp8915
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p8916
aS'\t    !mask_info) {'
p8917
as(I1122
I1123
tp8918
(lp8919
S'\t\t\t\t  unsigned char *dest_buf, int dest_len,'
p8920
aS'\t\t\t\t  struct diag_md_session_t *info)'
p8921
as(I1171
I1171
tp8922
(lp8923
S'\t\tif (!diag_check_update(i))'
p8924
as(I1158
I1158
tp8925
(lp8926
S'\tif (diag_check_update(APPS_DATA))'
p8927
assg9
(I1121
I1185
tp8928
sg11
I5
sg12
g13
sg14
(dp8929
(I1130
I1131
tp8930
(lp8931
S'\tmutex_lock(&driver->md_session_lock);'
p8932
aS'\tinfo = diag_md_session_get_pid(pid);'
p8933
as(I1171
I1171
tp8934
(lp8935
S'\t\tif (!diag_check_update(i, pid))'
p8936
as(I1128
I1128
tp8937
(lp8938
S'\tstruct diag_md_session_t *info = NULL;'
p8939
as(I1133
I1134
tp8940
(lp8941
S'\tif (!src_buf || !dest_buf || src_len <= sizeof(uint8_t) ||'
p8942
aS'\t\tdest_len <= 0 || !mask_info) {'
p8943
as(I1138
I1138
tp8944
(lp8945
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8946
as(I1144
I1144
tp8947
(lp8948
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8949
as(I1122
I1122
tp8950
(lp8951
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p8952
as(I1158
I1159
tp8953
(lp8954
S'\tmutex_unlock(&driver->md_session_lock);'
p8955
aS'\tif (diag_check_update(APPS_DATA, pid))'
p8956
asss(g7598
S'diag_user_process_userspace_data'
p8957
I3263
tp8958
(dp8959
g27
(dp8960
(I3335
I3335
tp8961
(lp8962
S'\t\t\t\tlen, session_info);'
p8963
as(I3339
I3339
tp8964
(lp8965
S'\t\t\t\t\t\tlen, session_info);'
p8966
as(I3311
I3311
tp8967
(lp8968
S'\t\t\t\t\t   token_offset)) {'
p8969
as(I3321
I3321
tp8970
(lp8971
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8972
assg9
(I3263
I3353
tp8973
sg11
I2
sg12
g13
sg14
(dp8974
(I3331
I3331
tp8975
(lp8976
S'\t\tmutex_unlock(&driver->md_session_lock);'
p8977
as(I3324
I3324
tp8978
(lp8979
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p8980
as(I3339
I3339
tp8981
(lp8982
S'\t\t\t\t\t\tlen, current->tgid);'
p8983
as(I3311
I3311
tp8984
(lp8985
S'\t\t\t\t\t   token_offset, len)) {'
p8986
as(I3335
I3335
tp8987
(lp8988
S'\t\t\t\tlen, current->tgid);'
p8989
asss(g7793
S'diag_cmd_update_event_mask'
p8990
I1046
tp8991
(dp8992
g27
(dp8993
(I1087
I1087
tp8994
(lp8995
S'\tif (diag_check_update(APPS_DATA))'
p8996
as(I1059
I1060
tp8997
(lp8998
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p8999
aS'\t    !mask_info) {'
p9000
as(I1047
I1048
tp9001
(lp9002
S'\t\t\t\t      unsigned char *dest_buf, int dest_len,'
p9003
aS'\t\t\t\t      struct diag_md_session_t *info)'
p9004
as(I1083
I1083
tp9005
(lp9006
S'\tmemcpy(mask_info->ptr, src_buf + header_len, mask_len);'
p9007
as(I1107
I1107
tp9008
(lp9009
S'\t\tif (!diag_check_update(i))'
p9010
assg9
(I1046
I1119
tp9011
sg11
I5
sg12
g13
sg14
(dp9012
(I1056
I1057
tp9013
(lp9014
S'\tmutex_lock(&driver->md_session_lock);'
p9015
aS'\tinfo = diag_md_session_get_pid(pid);'
p9016
as(I1107
I1107
tp9017
(lp9018
S'\t\tif (!diag_check_update(i, pid))'
p9019
as(I1078
I1078
tp9020
(lp9021
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9022
as(I1087
I1088
tp9023
(lp9024
S'\tmutex_unlock(&driver->md_session_lock);'
p9025
aS'\tif (diag_check_update(APPS_DATA, pid))'
p9026
as(I1054
I1054
tp9027
(lp9028
S'\tstruct diag_md_session_t *info = NULL;'
p9029
as(I1047
I1047
tp9030
(lp9031
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9032
as(I1064
I1064
tp9033
(lp9034
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9035
as(I1083
I1084
tp9036
(lp9037
S'\tif (src_len >= header_len + mask_len)'
p9038
aS'\t\tmemcpy(mask_info->ptr, src_buf + header_len, mask_len);'
p9039
as(I1070
I1070
tp9040
(lp9041
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9042
as(I1059
I1060
tp9043
(lp9044
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p9045
aS'\t\tsrc_len < sizeof(struct diag_event_mask_config_t)) {'
p9046
asss(g7793
g8204
I689
tp9047
(dp9048
g27
(dp9049
(I706
I707
tp9050
(lp9051
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p9052
aS'\t    !mask_info) {'
p9053
as(I720
I720
tp9054
(lp9055
S'\tif (!diag_apps_responds())'
p9056
as(I690
I691
tp9057
(lp9058
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p9059
aS'\t\t\t\t struct diag_md_session_t *info)'
p9060
as(I743
I743
tp9061
(lp9062
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p9063
assg9
(I689
I764
tp9064
sg11
I5
sg12
g13
sg14
(dp9065
(I720
I721
tp9066
(lp9067
S'\tif (!diag_apps_responds()) {'
p9068
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p9069
as(I700
I703
tp9070
(lp9071
S'\tstruct diag_md_session_t *info = NULL;'
p9072
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p9073
aS'\tinfo = diag_md_session_get_pid(pid);'
p9074
as(I726
I727
tp9075
(lp9076
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p9077
aS'\t\t\tdriver->msg_mask_tbl_count;'
p9078
as(I717
I717
tp9079
(lp9080
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9081
as(I762
I762
tp9082
(lp9083
S'\tmutex_unlock(&driver->md_session_lock);'
p9084
as(I740
I740
tp9085
(lp9086
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9087
as(I711
I711
tp9088
(lp9089
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9090
as(I695
I695
tp9091
(lp9092
S'\tuint8_t msg_mask_tbl_count = 0;'
p9093
as(I706
I707
tp9094
(lp9095
S'\tif (!src_buf || !dest_buf || dest_len <= 0 ||'
p9096
aS'\t    !mask_info || (src_len < sizeof(struct diag_build_mask_req_t))) {'
p9097
as(I690
I690
tp9098
(lp9099
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9100
as(I743
I745
tp9101
(lp9102
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p9103
aS'\t\tif (!mask->ptr)'
p9104
aS'\t\t\tcontinue;'
p9105
as(I723
I723
tp9106
(lp9107
S'\t}'
p9108
asss(g7793
S'diag_cmd_set_msg_mask'
p9109
I766
tp9110
(dp9111
g27
(dp9112
(I785
I786
tp9113
(lp9114
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p9115
aS'\t    !mask_info) {'
p9116
as(I870
I870
tp9117
(lp9118
S'\t\tmemcpy(mask->ptr + offset, src_buf + header_len, mask_size);'
p9119
as(I812
I813
tp9120
(lp9121
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p9122
aS'\t\tif (i < (driver->msg_mask_tbl_count - 1)) {'
p9123
as(I904
I904
tp9124
(lp9125
S'\t\tif (!diag_check_update(i))'
p9126
as(I767
I768
tp9127
(lp9128
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p9129
aS'\t\t\t\t struct diag_md_session_t *info)'
p9130
as(I879
I879
tp9131
(lp9132
S'\tif (diag_check_update(APPS_DATA))'
p9133
assg9
(I766
I917
tp9134
sg11
I5
sg12
g13
sg14
(dp9135
(I785
I786
tp9136
(lp9137
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p9138
aS'\t\t(src_len < sizeof(struct diag_msg_build_mask_t))) {'
p9139
as(I778
I782
tp9140
(lp9141
S'\tstruct diag_md_session_t *info = NULL;'
p9142
aS'\tuint8_t msg_mask_tbl_count = 0;'
p9143
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p9144
aS'\tinfo = diag_md_session_get_pid(pid);'
p9145
as(I870
I872
tp9146
(lp9147
S'\t\tif (mask_size && src_len >= header_len + mask_size)'
p9148
aS'\t\t\tmemcpy(mask->ptr + offset, src_buf + header_len,'
p9149
aS'\t\t\t\tmask_size);'
p9150
as(I790
I790
tp9151
(lp9152
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9153
as(I796
I796
tp9154
(lp9155
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9156
as(I809
I809
tp9157
(lp9158
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9159
as(I904
I904
tp9160
(lp9161
S'\t\tif (!diag_check_update(i, pid))'
p9162
as(I856
I856
tp9163
(lp9164
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p9165
as(I812
I817
tp9166
(lp9167
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p9168
aS'\t\t\tdriver->msg_mask_tbl_count;'
p9169
aS'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p9170
aS'\t\tif (!mask->ptr)'
p9171
aS'\t\t\tcontinue;'
p9172
aS'\t\tif (i < (msg_mask_tbl_count - 1)) {'
p9173
as(I879
I880
tp9174
(lp9175
S'\tmutex_unlock(&driver->md_session_lock);'
p9176
aS'\tif (diag_check_update(APPS_DATA, pid))'
p9177
as(I767
I767
tp9178
(lp9179
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9180
assssS'5292b59169c0_sdm845-perf'
p9181
(dp9182
(g7793
g8791
I2214
tp9183
(dp9184
g27
(dp9185
(I2218
I2219
tp9186
(lp9187
S'\t\t    unsigned char *dest_buf, int dest_len,'
p9188
aS'\t\t    struct diag_md_session_t *info) = NULL;'
p9189
as(I2214
I2215
tp9190
(lp9191
S'int diag_process_apps_masks(unsigned char *buf, int len,'
p9192
aS'\t\t\t    struct diag_md_session_t *info)'
p9193
as(I2273
I2273
tp9194
(lp9195
S'\t\t\t    DIAG_MAX_RSP_SIZE, info);'
p9196
assg9
(I2214
I2276
tp9197
sg11
I3
sg12
g13
sg14
(dp9198
(I2234
I2234
tp9199
(lp9200
S'\t\t\tdriver->set_mask_cmd = 1;'
p9201
as(I2218
I2218
tp9202
(lp9203
S'\t\t    unsigned char *dest_buf, int dest_len, int pid) = NULL;'
p9204
as(I2268
I2268
tp9205
(lp9206
S'\t\tdriver->set_mask_cmd = 1;'
p9207
as(I2265
I2265
tp9208
(lp9209
S'\t\tdriver->set_mask_cmd = 1;'
p9210
as(I2254
I2254
tp9211
(lp9212
S'\t\t\tdriver->set_mask_cmd = 1;'
p9213
as(I2214
I2214
tp9214
(lp9215
S'int diag_process_apps_masks(unsigned char *buf, int len, int pid)'
p9216
as(I2258
I2258
tp9217
(lp9218
S'\t\t\tdriver->set_mask_cmd = 1;'
p9219
as(I2273
I2273
tp9220
(lp9221
S'\t\t\t    DIAG_MAX_RSP_SIZE, pid);'
p9222
assssS'd7461eb53ce1_sdm845-perf'
p9223
(dp9224
(g7793
S'diag_cmd_get_ssid_range'
p9225
I572
tp9226
(dp9227
g27
(dp9228
(I573
I574
tp9229
(lp9230
S'\t\t\t\t   unsigned char *dest_buf, int dest_len,'
p9231
aS'\t\t\t\t   struct diag_md_session_t *info)'
p9232
as(I617
I617
tp9233
(lp9234
S'\tfor (i = 0; i <  driver->msg_mask_tbl_count; i++, mask_ptr++) {'
p9235
as(I613
I613
tp9236
(lp9237
S'\trsp.count = driver->msg_mask_tbl_count;'
p9238
as(I602
I602
tp9239
(lp9240
S'\tif (!diag_apps_responds())'
p9241
assg9
(I572
I631
tp9242
sg11
I5
sg12
g13
sg14
(dp9243
(I592
I592
tp9244
(lp9245
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9246
as(I602
I603
tp9247
(lp9248
S'\tif (!diag_apps_responds()) {'
p9249
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p9250
as(I605
I605
tp9251
(lp9252
S'\t}'
p9253
as(I582
I582
tp9254
(lp9255
S'\tstruct diag_md_session_t *info = NULL;'
p9256
as(I598
I598
tp9257
(lp9258
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9259
as(I617
I617
tp9260
(lp9261
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask_ptr++) {'
p9262
as(I584
I585
tp9263
(lp9264
S'\tmutex_lock(&driver->md_session_lock);'
p9265
aS'\tinfo = diag_md_session_get_pid(pid);'
p9266
as(I613
I613
tp9267
(lp9268
S'\trsp.count = msg_mask_tbl_count;'
p9269
as(I629
I629
tp9270
(lp9271
S'\tmutex_unlock(&driver->md_session_lock);'
p9272
as(I607
I608
tp9273
(lp9274
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p9275
aS'\t\tdriver->msg_mask_tbl_count;'
p9276
as(I577
I577
tp9277
(lp9278
S'\tuint8_t msg_mask_tbl_count = 0;'
p9279
as(I573
I573
tp9280
(lp9281
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9282
asss(g7793
g8722
I916
tp9283
(dp9284
g27
(dp9285
(I917
I918
tp9286
(lp9287
S'\t\t\t\t     unsigned char *dest_buf, int dest_len,'
p9288
aS'\t\t\t\t     struct diag_md_session_t *info)'
p9289
as(I965
I969
tp9290
(lp9291
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p9292
aS'\t\tmutex_lock(&mask->lock);'
p9293
aS'\t\tmemset(mask->ptr, req->rt_mask,'
p9294
aS'\t\t       mask->range * sizeof(uint32_t));'
p9295
aS'\t\tmutex_unlock(&mask->lock);'
p9296
as(I975
I976
tp9297
(lp9298
g119
aS'\tif (diag_check_update(APPS_DATA))'
p9299
as(I994
I994
tp9300
(lp9301
S'\t\tif (!diag_check_update(i))'
p9302
assg9
(I916
I1006
tp9303
sg11
I5
sg12
g13
sg14
(dp9304
(I961
I962
tp9305
(lp9306
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p9307
aS'\t\t\tdriver->msg_mask_tbl_count;'
p9308
as(I917
I917
tp9309
(lp9310
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9311
as(I965
I971
tp9312
(lp9313
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p9314
aS'\t\tif (mask && mask->ptr) {'
p9315
aS'\t\t\tmutex_lock(&mask->lock);'
p9316
aS'\t\t\tmemset(mask->ptr, req->rt_mask,'
p9317
aS'\t\t\t       mask->range * sizeof(uint32_t));'
p9318
aS'\t\t\tmutex_unlock(&mask->lock);'
p9319
aS'\t\t}'
p9320
as(I994
I994
tp9321
(lp9322
S'\t\tif (!diag_check_update(i, pid))'
p9323
as(I937
I937
tp9324
(lp9325
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9326
as(I925
I929
tp9327
(lp9328
S'\tstruct diag_md_session_t *info = NULL;'
p9329
aS'\tuint8_t msg_mask_tbl_count = 0;'
p9330
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p9331
aS'\tinfo = diag_md_session_get_pid(pid);'
p9332
as(I958
I958
tp9333
(lp9334
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9335
as(I975
I976
tp9336
(lp9337
S'\tmutex_unlock(&driver->md_session_lock);'
p9338
aS'\tif (diag_check_update(APPS_DATA, pid))'
p9339
as(I943
I943
tp9340
(lp9341
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9342
asss(g7793
g8204
I688
tp9343
(dp9344
g27
(dp9345
(I689
I690
tp9346
(lp9347
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p9348
aS'\t\t\t\t struct diag_md_session_t *info)'
p9349
as(I719
I719
tp9350
(lp9351
S'\tif (!diag_apps_responds())'
p9352
as(I742
I742
tp9353
(lp9354
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p9355
assg9
(I688
I763
tp9356
sg11
I5
sg12
g13
sg14
(dp9357
(I739
I739
tp9358
(lp9359
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9360
as(I710
I710
tp9361
(lp9362
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9363
as(I725
I726
tp9364
(lp9365
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p9366
aS'\t\t\tdriver->msg_mask_tbl_count;'
p9367
as(I716
I716
tp9368
(lp9369
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9370
as(I761
I761
tp9371
(lp9372
S'\tmutex_unlock(&driver->md_session_lock);'
p9373
as(I699
I702
tp9374
(lp9375
S'\tstruct diag_md_session_t *info = NULL;'
p9376
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p9377
aS'\tinfo = diag_md_session_get_pid(pid);'
p9378
as(I722
I722
tp9379
(lp9380
S'\t}'
p9381
as(I694
I694
tp9382
(lp9383
S'\tuint8_t msg_mask_tbl_count = 0;'
p9384
as(I719
I720
tp9385
(lp9386
S'\tif (!diag_apps_responds()) {'
p9387
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p9388
as(I689
I689
tp9389
(lp9390
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9391
as(I742
I744
tp9392
(lp9393
S'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p9394
aS'\t\tif (!mask->ptr)'
p9395
aS'\t\t\tcontinue;'
p9396
asss(g7793
g9109
I765
tp9397
(dp9398
g27
(dp9399
(I811
I812
tp9400
(lp9401
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p9402
aS'\t\tif (i < (driver->msg_mask_tbl_count - 1)) {'
p9403
as(I876
I876
tp9404
(lp9405
S'\tif (diag_check_update(APPS_DATA))'
p9406
as(I766
I767
tp9407
(lp9408
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p9409
aS'\t\t\t\t struct diag_md_session_t *info)'
p9410
as(I901
I901
tp9411
(lp9412
S'\t\tif (!diag_check_update(i))'
p9413
assg9
(I765
I914
tp9414
sg11
I5
sg12
g13
sg14
(dp9415
(I811
I816
tp9416
(lp9417
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p9418
aS'\t\t\tdriver->msg_mask_tbl_count;'
p9419
aS'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p9420
aS'\t\tif (!mask->ptr)'
p9421
aS'\t\t\tcontinue;'
p9422
aS'\t\tif (i < (msg_mask_tbl_count - 1)) {'
p9423
as(I777
I781
tp9424
(lp9425
S'\tstruct diag_md_session_t *info = NULL;'
p9426
aS'\tuint8_t msg_mask_tbl_count = 0;'
p9427
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p9428
aS'\tinfo = diag_md_session_get_pid(pid);'
p9429
as(I789
I789
tp9430
(lp9431
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9432
as(I876
I877
tp9433
(lp9434
S'\tmutex_unlock(&driver->md_session_lock);'
p9435
aS'\tif (diag_check_update(APPS_DATA, pid))'
p9436
as(I855
I855
tp9437
(lp9438
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p9439
as(I795
I795
tp9440
(lp9441
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9442
as(I808
I808
tp9443
(lp9444
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9445
as(I766
I766
tp9446
(lp9447
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9448
as(I901
I901
tp9449
(lp9450
S'\t\tif (!diag_check_update(i, pid))'
p9451
asss(g7598
S'diag_md_session_close'
p9452
I1387
tp9453
(dp9454
g27
(dp9455
(I1387
I1387
tp9456
(lp9457
S'static void diag_md_session_close(struct diag_md_session_t *session_info)'
p9458
as(I1423
I1423
tp9459
(lp9460
S'\tmutex_unlock(&driver->md_session_lock);'
p9461
as(I1397
I1397
tp9462
(lp9463
S'\tmutex_lock(&driver->md_session_lock);'
p9464
as(I1406
I1406
tp9465
(lp9466
S'\tdiag_msg_mask_free(session_info->msg_mask);'
p9467
assg9
(I1387
I1424
tp9468
sg11
I1
sg12
g13
sg14
(dp9469
(I1387
I1387
tp9470
(lp9471
S'static void diag_md_session_close(int pid)'
p9472
as(I1406
I1407
tp9473
(lp9474
S'\tdiag_msg_mask_free(session_info->msg_mask,'
p9475
aS'\t\tsession_info);'
p9476
as(I1391
I1391
tp9477
(lp9478
S'\tstruct diag_md_session_t *session_info = NULL;'
p9479
as(I1393
I1393
tp9480
(lp9481
S'\tsession_info = diag_md_session_get_pid(pid);'
p9482
assssS'c2cff6971db3_sdm845-perf'
p9483
(dp9484
(g7793
g8204
I676
tp9485
(dp9486
g27
(dp9487
(I677
I678
tp9488
(lp9489
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p9490
aS'\t\t\t\t struct diag_md_session_t *info)'
p9491
as(I706
I706
tp9492
(lp9493
S'\tif (!diag_apps_responds())'
p9494
assg9
(I676
I748
tp9495
sg11
I5
sg12
g13
sg14
(dp9496
(I686
I689
tp9497
(lp9498
S'\tstruct diag_md_session_t *info = NULL;'
p9499
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p9500
aS'\tinfo = diag_md_session_get_pid(pid);'
p9501
as(I677
I677
tp9502
(lp9503
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9504
as(I746
I746
tp9505
(lp9506
S'\tmutex_unlock(&driver->md_session_lock);'
p9507
as(I724
I724
tp9508
(lp9509
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9510
as(I697
I697
tp9511
(lp9512
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9513
as(I728
I729
tp9514
(lp9515
S'\t\tif (!mask->ptr)'
p9516
aS'\t\t\tcontinue;'
p9517
as(I706
I707
tp9518
(lp9519
S'\tif (!diag_apps_responds()) {'
p9520
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p9521
as(I703
I703
tp9522
(lp9523
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9524
as(I709
I709
tp9525
(lp9526
S'\t}'
p9527
asss(g7793
g9109
I750
tp9528
(dp9529
g27
(dp9530
(I751
I752
tp9531
(lp9532
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p9533
aS'\t\t\t\t struct diag_md_session_t *info)'
p9534
as(I883
I883
tp9535
(lp9536
S'\t\tif (!diag_check_update(i))'
p9537
as(I858
I858
tp9538
(lp9539
S'\tif (diag_check_update(APPS_DATA))'
p9540
assg9
(I750
I896
tp9541
sg11
I5
sg12
g13
sg14
(dp9542
(I858
I859
tp9543
(lp9544
S'\tmutex_unlock(&driver->md_session_lock);'
p9545
aS'\tif (diag_check_update(APPS_DATA, pid))'
p9546
as(I883
I883
tp9547
(lp9548
S'\t\tif (!diag_check_update(i, pid))'
p9549
as(I796
I797
tp9550
(lp9551
S'\t\tif (!mask->ptr)'
p9552
aS'\t\t\tcontinue;'
p9553
as(I762
I765
tp9554
(lp9555
S'\tstruct diag_md_session_t *info = NULL;'
p9556
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p9557
aS'\tinfo = diag_md_session_get_pid(pid);'
p9558
as(I792
I792
tp9559
(lp9560
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9561
as(I837
I837
tp9562
(lp9563
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p9564
as(I779
I779
tp9565
(lp9566
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9567
as(I751
I751
tp9568
(lp9569
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9570
as(I773
I773
tp9571
(lp9572
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9573
asss(g7793
g8180
I621
tp9574
(dp9575
g27
(dp9576
(I622
I623
tp9577
(lp9578
S'\t\t\t\t   unsigned char *dest_buf, int dest_len,'
p9579
aS'\t\t\t\t   struct diag_md_session_t *info)'
p9580
assg9
(I621
I674
tp9581
sg11
I5
sg12
g13
sg14
(dp9582
(I650
I651
tp9583
(lp9584
S'\t\tif (!build_mask->ptr)'
p9585
aS'\t\t\tcontinue;'
p9586
as(I622
I622
tp9587
(lp9588
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p9589
asss(S'drivers/char/diag/diagfwd_peripheral.c'
p9590
S'diagfwd_data_process_done'
p9591
I318
tp9592
(dp9593
g27
(dp9594
(I357
I362
tp9595
(lp9596
S'\tsession_info ='
p9597
aS'\t\tdiag_md_session_get_peripheral(peripheral);'
p9598
aS'\tif (session_info)'
p9599
aS'\t\thdlc_disabled = session_info->hdlc_disabled;'
p9600
aS'\telse'
p9601
aS'\t\thdlc_disabled = driver->hdlc_disabled;'
p9602
as(I324
I324
tp9603
(lp9604
S'\tstruct diag_md_session_t *session_info = NULL;'
p9605
as(I410
I411
tp9606
(lp9607
S'\tmutex_unlock(&fwd_info->data_mutex);'
p9608
aS'\tmutex_unlock(&driver->hdlc_disable_mutex);'
p9609
as(I407
I407
tp9610
(lp9611
S'\t\t\tgoto end;'
p9612
as(I415
I415
tp9613
(lp9614
S'\tdiag_ws_release();'
p9615
assg9
(I318
I428
tp9616
sg11
I3
sg12
g13
sg14
(dp9617
(I417
I418
tp9618
(lp9619
S'end_write:'
p9620
aS'\tdiag_ws_release();'
p9621
as(I407
I407
tp9622
(lp9623
S'\t\t\tgoto end_write;'
p9624
as(I398
I399
tp9625
(lp9626
S'\tmutex_unlock(&fwd_info->data_mutex);'
p9627
aS'\tmutex_unlock(&driver->hdlc_disable_mutex);'
p9628
as(I357
I357
tp9629
(lp9630
S'\thdlc_disabled = driver->p_hdlc_disabled[peripheral];'
p9631
as(I410
I410
tp9632
(lp9633
g119
asss(g9590
S'diagfwd_data_read_done'
p9634
I614
tp9635
(dp9636
g27
(dp9637
(I717
I718
tp9638
(lp9639
S'\tmutex_unlock(&fwd_info->data_mutex);'
p9640
aS'\tmutex_unlock(&driver->hdlc_disable_mutex);'
p9641
as(I721
I721
tp9642
(lp9643
S'\tdiag_ws_release();'
p9644
as(I642
I646
tp9645
(lp9646
S'\tsession_info = diag_md_session_get_peripheral(fwd_info->peripheral);'
p9647
aS'\tif (session_info)'
p9648
aS'\t\thdlc_disabled = session_info->hdlc_disabled;'
p9649
aS'\telse'
p9650
aS'\t\thdlc_disabled = driver->hdlc_disabled;'
p9651
as(I621
I621
tp9652
(lp9653
S'\tstruct diag_md_session_t *session_info = NULL;'
p9654
as(I714
I714
tp9655
(lp9656
S'\t\t\tgoto end;'
p9657
assg9
(I614
I734
tp9658
sg11
I3
sg12
g13
sg14
(dp9659
(I723
I724
tp9660
(lp9661
S'end_write:'
p9662
aS'\tdiag_ws_release();'
p9663
as(I705
I707
tp9664
(lp9665
S'\tmutex_unlock(&fwd_info->data_mutex);'
p9666
aS'\tmutex_unlock(&driver->hdlc_disable_mutex);'
p9667
ag119
as(I642
I643
tp9668
(lp9669
g119
aS'\thdlc_disabled = driver->p_hdlc_disabled[fwd_info->peripheral];'
p9670
as(I714
I714
tp9671
(lp9672
S'\t\t\tgoto end_write;'
p9673
asss(S'drivers/char/diag/diag_memorydevice.c'
p9674
S'diag_md_write'
p9675
I138
tp9676
(dp9677
g27
(dp9678
(I144
I144
tp9679
(lp9680
S'\tint peripheral;'
p9681
as(I156
I158
tp9682
(lp9683
S'\tsession_info ='
p9684
aS'\t\tdiag_md_session_get_peripheral(peripheral);'
p9685
aS'\tif (!session_info)'
p9686
as(I140
I140
tp9687
(lp9688
S'\tint i;'
p9689
as(I184
I184
tp9690
(lp9691
S'\tif (found)'
p9692
as(I211
I212
tp9693
(lp9694
S'\t\tif ((driver->client_map[i].pid !='
p9695
aS'\t\t     session_info->pid) ||'
p9696
as(I165
I165
tp9697
(lp9698
S'\tif (!ch)'
p9699
assg9
(I138
I229
tp9700
sg11
I4
sg12
g13
sg14
(dp9701
(I161
I162
tp9702
(lp9703
S'\t}'
p9704
aS'\tpid = session_info->pid;'
p9705
as(I156
I159
tp9706
(lp9707
S'\tmutex_lock(&driver->md_session_lock);'
p9708
aS'\tsession_info = diag_md_session_get_peripheral(peripheral);'
p9709
aS'\tif (!session_info) {'
p9710
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p9711
as(I200
I200
tp9712
(lp9713
S'\tmutex_unlock(&driver->md_session_lock);'
p9714
as(I211
I211
tp9715
(lp9716
S'\t\tif ((driver->client_map[i].pid != pid) ||'
p9717
as(I165
I166
tp9718
(lp9719
S'\tif (!ch || !ch->md_info_inited) {'
p9720
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p9721
as(I140
I140
tp9722
(lp9723
S'\tint i, peripheral, pid = 0;'
p9724
as(I209
I209
tp9725
(lp9726
S'\tmutex_lock(&driver->diagchar_mutex);'
p9727
as(I184
I185
tp9728
(lp9729
S'\tif (found) {'
p9730
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p9731
as(I168
I168
tp9732
(lp9733
S'\t}'
p9734
as(I223
I223
tp9735
(lp9736
S'\tmutex_unlock(&driver->diagchar_mutex);'
p9737
as(I187
I187
tp9738
(lp9739
S'\t}'
p9740
assssS'f332617ebb03_sdm845-perf'
p9741
(dp9742
(S'drivers/char/diag/diag_usb.c'
p9743
S'usb_disconnect'
p9744
I220
tp9745
(dp9746
g27
(dp9747
(I222
I228
tp9748
(lp9749
S'\tif (!ch)'
p9750
aS'\t\treturn;'
p9751
ag119
aS'\tif (!atomic_read(&ch->connected) &&'
p9752
aS'\t\tdriver->usb_connected && diag_mask_param())'
p9753
aS'\t\tdiag_clear_masks(NULL);'
p9754
ag119
assg9
(I220
I224
tp9755
sg11
I1
sg12
g13
ss(g7598
S'diagchar_read'
p9756
I3274
tp9757
(dp9758
g27
(dp9759
(I3348
I3348
tp9760
(lp9761
S'\t\t\tif (ret == -EFAULT)'
p9762
as(I3430
I3430
tp9763
(lp9764
S'\t\tif (ret == -EFAULT)'
p9765
as(I3376
I3376
tp9766
(lp9767
S'\t\tif (ret == -EFAULT)'
p9768
as(I3405
I3405
tp9769
(lp9770
S'\t\t\tif (ret == -EFAULT)'
p9771
as(I3322
I3322
tp9772
(lp9773
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9774
as(I3396
I3396
tp9775
(lp9776
S'\t\tif (ret == -EFAULT)'
p9777
as(I3399
I3399
tp9778
(lp9779
g119
as(I3344
I3344
tp9780
(lp9781
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9782
as(I3531
I3531
tp9783
(lp9784
S'\t\t\tif (entry->client->tgid != current->tgid)'
p9785
as(I3413
I3413
tp9786
(lp9787
S'\t\t\tif (ret == -EFAULT)'
p9788
assg9
(I3274
I3583
tp9789
sg11
I4
sg12
g13
sg14
(dp9790
(I3408
I3408
tp9791
(lp9792
S'\t\t\t}'
p9793
as(I3379
I3379
tp9794
(lp9795
S'\t\t}'
p9796
as(I3399
I3399
tp9797
(lp9798
S'\t\t}'
p9799
as(I3351
I3351
tp9800
(lp9801
S'\t\t\t}'
p9802
as(I3437
I3437
tp9803
(lp9804
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9805
as(I3348
I3349
tp9806
(lp9807
S'\t\t\tif (ret == -EFAULT) {'
p9808
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p9809
as(I3324
I3324
tp9810
(lp9811
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9812
as(I3534
I3543
tp9813
(lp9814
S'\t\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p9815
aS'\t\t\tif (!task_s) {'
p9816
aS'\t\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p9817
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p9818
aS'\t\t\t\tentry->tgid);'
p9819
aS'\t\t\t\tcontinue;'
p9820
aS'\t\t\t}'
p9821
aS'\t\t\tif (task_s == entry->client)'
p9822
aS'\t\t\t\tif (entry->client->tgid != current->tgid)'
p9823
aS'\t\t\t\t\tcontinue;'
p9824
as(I3393
I3393
tp9825
(lp9826
S'\t\tmutex_lock(&driver->md_session_lock);'
p9827
as(I3418
I3418
tp9828
(lp9829
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9830
as(I3396
I3397
tp9831
(lp9832
S'\t\tif (ret == -EFAULT) {'
p9833
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p9834
as(I3353
I3353
tp9835
(lp9836
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9837
as(I3416
I3416
tp9838
(lp9839
S'\t\t\t}'
p9840
as(I3531
I3532
tp9841
(lp9842
S'\t\t\tpid_struct = find_get_pid(entry->tgid);'
p9843
aS'\t\t\tif (!pid_struct)'
p9844
as(I3376
I3377
tp9845
(lp9846
S'\t\tif (ret == -EFAULT) {'
p9847
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p9848
as(I3430
I3431
tp9849
(lp9850
S'\t\tif (ret == -EFAULT) {'
p9851
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p9852
as(I3427
I3427
tp9853
(lp9854
S'\t\tmutex_lock(&driver->md_session_lock);'
p9855
as(I3382
I3382
tp9856
(lp9857
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9858
as(I3285
I3286
tp9859
(lp9860
S'\tstruct pid *pid_struct = NULL;'
p9861
aS'\tstruct task_struct *task_s = NULL;'
p9862
as(I3433
I3433
tp9863
(lp9864
S'\t\t}'
p9865
as(I3405
I3406
tp9866
(lp9867
S'\t\t\tif (ret == -EFAULT) {'
p9868
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p9869
as(I3373
I3373
tp9870
(lp9871
S'\t\tmutex_lock(&driver->md_session_lock);'
p9872
as(I3413
I3414
tp9873
(lp9874
S'\t\t\tif (ret == -EFAULT) {'
p9875
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p9876
assssS'e6e1c24faf75_sdm845-perf'
p9877
(dp9878
(g7598
g7768
I3106
tp9879
(dp9880
g27
(dp9881
(I3166
I3170
tp9882
(lp9883
S'\tsession_info = diag_md_session_get_peripheral(APPS_DATA);'
p9884
aS'\tif (session_info)'
p9885
aS'\t\thdlc_disabled = session_info->hdlc_disabled;'
p9886
aS'\telse'
p9887
aS'\t\thdlc_disabled = driver->hdlc_disabled;'
p9888
as(I3113
I3113
tp9889
(lp9890
S'\tstruct diag_md_session_t *session_info = NULL;'
p9891
assg9
(I3106
I3189
tp9892
sg11
I3
sg12
g13
sg14
(dp9893
(I3166
I3166
tp9894
(lp9895
S'\thdlc_disabled = driver->p_hdlc_disabled[APPS_DATA];'
p9896
asss(g7856
S'diag_hdlc_start_recovery'
p9897
I1601
tp9898
(dp9899
g27
(dp9900
(I1604
I1604
tp9901
(lp9902
S'\tint i;'
p9903
as(I1668
I1668
tp9904
(lp9905
S'\t\tdiag_process_non_hdlc_pkt(start_ptr, len - i, info);'
p9906
as(I1611
I1611
tp9907
(lp9908
S'\thdlc_reset_timer_start(info);'
p9909
as(I1602
I1602
tp9910
(lp9911
S'\t\t\t\t     struct diag_md_session_t *info)'
p9912
assg9
(I1601
I1670
tp9913
sg11
I3
sg12
g13
sg14
(dp9914
(I1668
I1668
tp9915
(lp9916
S'\t\tdiag_process_non_hdlc_pkt(start_ptr, len - i, pid);'
p9917
as(I1611
I1611
tp9918
(lp9919
S'\thdlc_reset_timer_start(pid);'
p9920
as(I1604
I1604
tp9921
(lp9922
S'\tint i, peripheral = -EINVAL;'
p9923
as(I1608
I1608
tp9924
(lp9925
S'\tstruct diag_md_session_t *info = NULL;'
p9926
as(I1602
I1602
tp9927
(lp9928
S'\t\t\t\t     int pid)'
p9929
as(I1637
I1655
tp9930
(lp9931
g119
aS'\t\t\tperipheral ='
p9932
aS'\t\t\t\tdiag_md_session_match_pid_peripheral(pid, 0);'
p9933
aS'\t\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p9934
aS'\t\t\t\tif (peripheral > 0 && info) {'
p9935
aS'\t\t\t\t\tif (peripheral & (1 << i))'
p9936
aS'\t\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p9937
aS'\t\t\t\t\t\tinfo->hdlc_disabled;'
p9938
aS'\t\t\t\t\telse if ('
p9939
aS'\t\t\t\t\t!diag_md_session_get_peripheral(i))'
p9940
aS'\t\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p9941
aS'\t\t\t\t\t\tdriver->hdlc_disabled;'
p9942
aS'\t\t\t\t} else {'
p9943
aS'\t\t\t\t\tif (!diag_md_session_get_peripheral(i))'
p9944
aS'\t\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p9945
aS'\t\t\t\t\t\tdriver->hdlc_disabled;'
p9946
aS'\t\t\t\t}'
p9947
aS'\t\t\t}'
p9948
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p9949
as(I1631
I1632
tp9950
(lp9951
S'\t\t\tmutex_lock(&driver->md_session_lock);'
p9952
aS'\t\t\tinfo = diag_md_session_get_pid(pid);'
p9953
asss(g7856
S'hdlc_reset_timer_start'
p9954
I1486
tp9955
(dp9956
g27
(dp9957
(I1486
I1486
tp9958
(lp9959
S'static void hdlc_reset_timer_start(struct diag_md_session_t *info)'
p9960
assg9
(I1486
I1502
tp9961
sg11
I1
sg12
g13
sg14
(dp9962
(I1488
I1489
tp9963
(lp9964
S'\tstruct diag_md_session_t *info = NULL;'
p9965
ag119
as(I1491
I1491
tp9966
(lp9967
S'\tinfo = diag_md_session_get_pid(pid);'
p9968
as(I1486
I1486
tp9969
(lp9970
S'static void hdlc_reset_timer_start(int pid)'
p9971
asss(g7598
S'diag_ioctl_hdlc_toggle'
p9972
I2090
tp9973
(dp9974
g27
(dp9975
(I2101
I2102
tp9976
(lp9977
S'\tif (session_info) {'
p9978
aS'\t\tmutex_lock(&driver->md_session_lock);'
p9979
as(I2105
I2106
tp9980
(lp9981
S'\t\tmutex_unlock(&driver->md_session_lock);'
p9982
aS'\t} else'
p9983
as(I2092
I2092
tp9984
(lp9985
S'\tuint8_t hdlc_support;'
p9986
as(I2095
I2097
tp9987
(lp9988
S'\tmutex_lock(&driver->md_session_lock);'
p9989
aS'\tsession_info = diag_md_session_get_pid(current->tgid);'
p9990
aS'\tmutex_unlock(&driver->md_session_lock);'
p9991
assg9
(I2090
I2131
tp9992
sg11
I1
sg12
g13
sg14
(dp9993
(I2099
I2099
tp9994
(lp9995
g119
as(I2107
I2126
tp9996
(lp9997
g119
aS'\tperipheral ='
p9998
aS'\t\tdiag_md_session_match_pid_peripheral(current->tgid,'
p9999
aS'\t\t0);'
p10000
aS'\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p10001
aS'\t\tif (peripheral > 0 && session_info) {'
p10002
aS'\t\t\tif (peripheral & (1 << i))'
p10003
aS'\t\t\t\tdriver->p_hdlc_disabled[i] ='
p10004
aS'\t\t\t\tsession_info->hdlc_disabled;'
p10005
aS'\t\t\telse if (!diag_md_session_get_peripheral(i))'
p10006
aS'\t\t\t\tdriver->p_hdlc_disabled[i] ='
p10007
aS'\t\t\t\tdriver->hdlc_disabled;'
p10008
aS'\t\t} else {'
p10009
aS'\t\t\tif (!diag_md_session_get_peripheral(i))'
p10010
aS'\t\t\t\tdriver->p_hdlc_disabled[i] ='
p10011
aS'\t\t\t\tdriver->hdlc_disabled;'
p10012
aS'\t\t}'
p10013
aS'\t}'
p10014
ag119
aS'\tmutex_unlock(&driver->md_session_lock);'
p10015
as(I2092
I2093
tp10016
(lp10017
S'\tuint8_t hdlc_support, i;'
p10018
aS'\tint peripheral = -EINVAL;'
p10019
as(I2101
I2103
tp10020
(lp10021
S'\tmutex_lock(&driver->md_session_lock);'
p10022
aS'\tsession_info = diag_md_session_get_pid(current->tgid);'
p10023
aS'\tif (session_info)'
p10024
as(I2105
I2105
tp10025
(lp10026
S'\telse'
p10027
as(I2095
I2095
tp10028
(lp10029
g119
asss(g7598
g7649
I1522
tp10030
(dp10031
g27
(dp10032
(I1601
I1602
tp10033
(lp10034
S'\t\t\tdiag_md_session_close(session_info);'
p10035
ag119
as(I1568
I1568
tp10036
(lp10037
S'\t\tif (!change_mask)'
p10038
as(I1557
I1557
tp10039
(lp10040
g119
as(I1526
I1526
tp10041
(lp10042
S'\tint i, bit = 0, err = 0;'
p10043
as(I1597
I1598
tp10044
(lp10045
S'\t\tif (~change_mask & session_info->peripheral_mask) {'
p10046
aS'\t\t\terr = diag_md_peripheral_switch(session_info,'
p10047
as(I1580
I1580
tp10048
(lp10049
S'\t\tmutex_lock(&driver->md_session_lock);'
p10050
as(I1623
I1623
tp10051
(lp10052
S'\t\t\terr = diag_md_peripheral_switch(session_info,'
p10053
as(I1581
I1582
tp10054
(lp10055
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10056
ag119
as(I1614
I1614
tp10057
(lp10058
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10059
as(I1586
I1586
tp10060
(lp10061
S'\t\tif ((change_mask & session_info->peripheral_mask)'
p10062
as(I1611
I1611
tp10063
(lp10064
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p10065
assg9
(I1522
I1647
tp10066
sg11
I4
sg12
g13
sg14
(dp10067
(I1601
I1602
tp10068
(lp10069
S'\t\t\tdiag_md_session_close(current->tgid);'
p10070
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p10071
as(I1568
I1569
tp10072
(lp10073
S'\t\tif (!change_mask) {'
p10074
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10075
as(I1620
I1620
tp10076
(lp10077
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p10078
as(I1627
I1627
tp10079
(lp10080
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10081
as(I1526
I1526
tp10082
(lp10083
S'\tint i, bit = 0, err = 0, peripheral_mask = 0;'
p10084
as(I1597
I1598
tp10085
(lp10086
S'\t\tif (~change_mask & peripheral_mask) {'
p10087
aS'\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p10088
as(I1554
I1554
tp10089
(lp10090
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10091
as(I1612
I1612
tp10092
(lp10093
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p10094
as(I1591
I1591
tp10095
(lp10096
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10097
as(I1623
I1623
tp10098
(lp10099
S'\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p10100
as(I1635
I1641
tp10101
(lp10102
S'\t\t\tmutex_lock(&driver->hdlc_disable_mutex);'
p10103
aS'\t\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p10104
aS'\t\t\t\tif ((param->peripheral_mask > 0) &&'
p10105
aS'\t\t\t\t\t(param->peripheral_mask & (1 << i)))'
p10106
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] = 0;'
p10107
aS'\t\t\t}'
p10108
aS'\t\t\tmutex_unlock(&driver->hdlc_disable_mutex);'
p10109
as(I1586
I1587
tp10110
(lp10111
S'\t\tperipheral_mask = session_info->peripheral_mask;'
p10112
aS'\t\tif ((change_mask & peripheral_mask)'
p10113
as(I1550
I1550
tp10114
(lp10115
S'\t\tmutex_lock(&driver->md_session_lock);'
p10116
as(I1583
I1583
tp10117
(lp10118
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10119
as(I1625
I1625
tp10120
(lp10121
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10122
as(I1571
I1571
tp10123
(lp10124
S'\t\t}'
p10125
asss(g9590
g9634
I602
tp10126
(dp10127
g27
(dp10128
(I630
I634
tp10129
(lp10130
S'\tsession_info = diag_md_session_get_peripheral(fwd_info->peripheral);'
p10131
aS'\tif (session_info)'
p10132
aS'\t\thdlc_disabled = session_info->hdlc_disabled;'
p10133
aS'\telse'
p10134
aS'\t\thdlc_disabled = driver->hdlc_disabled;'
p10135
as(I609
I609
tp10136
(lp10137
S'\tstruct diag_md_session_t *session_info = NULL;'
p10138
assg9
(I602
I720
tp10139
sg11
I3
sg12
g13
sg14
(dp10140
(I630
I631
tp10141
(lp10142
g119
aS'\thdlc_disabled = driver->p_hdlc_disabled[fwd_info->peripheral];'
p10143
asss(g7598
S'diag_drain_work_fn'
p10144
I239
tp10145
(dp10146
g27
(dp10147
(I245
I250
tp10148
(lp10149
S'\tsession_info = diag_md_session_get_peripheral(APPS_DATA);'
p10150
aS'\tif (session_info)'
p10151
aS'\t\thdlc_disabled = session_info->hdlc_disabled;'
p10152
aS'\telse'
p10153
aS'\t\thdlc_disabled = driver->hdlc_disabled;'
p10154
ag119
as(I241
I241
tp10155
(lp10156
S'\tstruct diag_md_session_t *session_info = NULL;'
p10157
assg9
(I239
I253
tp10158
sg11
I1
sg12
g13
sg14
(dp10159
(I245
I247
tp10160
(lp10161
S'\tmutex_lock(&driver->hdlc_disable_mutex);'
p10162
aS'\thdlc_disabled = driver->p_hdlc_disabled[APPS_DATA];'
p10163
aS'\tmutex_unlock(&driver->hdlc_disable_mutex);'
p10164
asss(g7856
S'diag_send_rsp'
p10165
I450
tp10166
(dp10167
g27
(dp10168
(I451
I451
tp10169
(lp10170
S'\tstruct diag_md_session_t *info)'
p10171
as(I467
I467
tp10172
(lp10173
S'\t\tpack_rsp_and_send(buf, len, session_info);'
p10174
as(I469
I469
tp10175
(lp10176
S'\t\tencode_rsp_and_send(buf, len, session_info);'
p10177
as(I453
I453
tp10178
(lp10179
S'\tstruct diag_md_session_t *session_info = NULL;'
p10180
assg9
(I450
I470
tp10181
sg11
I3
sg12
g13
sg14
(dp10182
(I464
I464
tp10183
(lp10184
S'\tmutex_unlock(&driver->md_session_lock);'
p10185
as(I451
I451
tp10186
(lp10187
S'\tint pid)'
p10188
as(I456
I457
tp10189
(lp10190
S'\tmutex_lock(&driver->md_session_lock);'
p10191
aS'\tinfo = diag_md_session_get_pid(pid);'
p10192
as(I453
I453
tp10193
(lp10194
S'\tstruct diag_md_session_t *session_info = NULL, *info = NULL;'
p10195
as(I469
I469
tp10196
(lp10197
S'\t\tencode_rsp_and_send(buf, len, pid);'
p10198
as(I467
I467
tp10199
(lp10200
S'\t\tpack_rsp_and_send(buf, len, pid);'
p10201
asss(g7856
g7857
I1027
tp10202
(dp10203
g27
(dp10204
(I1116
I1116
tp10205
(lp10206
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, len, info);'
p10207
as(I1227
I1227
tp10208
(lp10209
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 55, info);'
p10210
as(I1158
I1158
tp10211
(lp10212
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 1, info);'
p10213
as(I1085
I1086
tp10214
(lp10215
S'\t\t\t\tinfo->peripheral_mask) ||'
p10216
aS'\t\t\t\t(pd_mask & info->peripheral_mask))'
p10217
as(I1140
I1140
tp10218
(lp10219
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p10220
as(I1129
I1129
tp10221
(lp10222
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p10223
as(I1196
I1196
tp10224
(lp10225
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 6, info);'
p10226
as(I1259
I1259
tp10227
(lp10228
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p10229
as(I1092
I1092
tp10230
(lp10231
S'\t\t\t\tdiag_send_error_rsp(buf, len, info);'
p10232
as(I1029
I1030
tp10233
(lp10234
S'\tint i;'
p10235
aS'\tint mask_ret;'
p10236
as(I1151
I1151
tp10237
(lp10238
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p10239
as(I1068
I1068
tp10240
(lp10241
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p10242
as(I1178
I1178
tp10243
(lp10244
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 16, info);'
p10245
as(I1240
I1240
tp10246
(lp10247
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 14, info);'
p10248
as(I1187
I1187
tp10249
(lp10250
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 5, info);'
p10251
as(I1046
I1046
tp10252
(lp10253
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, mask_ret, info);'
p10254
as(I1110
I1110
tp10255
(lp10256
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 8, info);'
p10257
as(I1207
I1207
tp10258
(lp10259
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p10260
as(I1044
I1044
tp10261
(lp10262
S'\tmask_ret = diag_process_apps_masks(buf, len, info);'
p10263
as(I1298
I1298
tp10264
(lp10265
S'\t\tdiag_send_error_rsp(buf, len, info);'
p10266
as(I1027
I1028
tp10267
(lp10268
S'int diag_process_apps_pkt(unsigned char *buf, int len,'
p10269
aS'\t\t\tstruct diag_md_session_t *info)'
p10270
as(I1247
I1247
tp10271
(lp10272
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p10273
assg9
(I1027
I1301
tp10274
sg11
I3
sg12
g13
sg14
(dp10275
(I1116
I1116
tp10276
(lp10277
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, len, pid);'
p10278
as(I1259
I1259
tp10279
(lp10280
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p10281
as(I1158
I1158
tp10282
(lp10283
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 1, pid);'
p10284
as(I1029
I1030
tp10285
(lp10286
S'\tint i, p_mask = 0;'
p10287
aS'\tint mask_ret, peripheral = -EINVAL;'
p10288
as(I1140
I1140
tp10289
(lp10290
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p10291
as(I1129
I1129
tp10292
(lp10293
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p10294
as(I1088
I1088
tp10295
(lp10296
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10297
as(I1196
I1196
tp10298
(lp10299
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 6, pid);'
p10300
as(I1227
I1227
tp10301
(lp10302
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 55, pid);'
p10303
as(I1027
I1027
tp10304
(lp10305
S'int diag_process_apps_pkt(unsigned char *buf, int len, int pid)'
p10306
as(I1092
I1092
tp10307
(lp10308
S'\t\t\t\tdiag_send_error_rsp(buf, len, pid);'
p10309
as(I1080
I1081
tp10310
(lp10311
S'\t\t\tp_mask = info->peripheral_mask;'
p10312
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10313
as(I1038
I1038
tp10314
(lp10315
S'\tstruct diag_md_session_t *info = NULL;'
p10316
as(I1151
I1151
tp10317
(lp10318
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p10319
as(I1068
I1068
tp10320
(lp10321
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p10322
as(I1178
I1178
tp10323
(lp10324
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 16, pid);'
p10325
as(I1240
I1240
tp10326
(lp10327
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 14, pid);'
p10328
as(I1267
I1268
tp10329
(lp10330
S'\t\tmutex_lock(&driver->md_session_lock);'
p10331
aS'\t\tinfo = diag_md_session_get_pid(pid);'
p10332
as(I1273
I1289
tp10333
(lp10334
S'\t\tperipheral ='
p10335
aS'\t\t\tdiag_md_session_match_pid_peripheral(pid, 0);'
p10336
aS'\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p10337
aS'\t\t\tif (peripheral > 0 && info) {'
p10338
aS'\t\t\t\tif (peripheral & (1 << i))'
p10339
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p10340
aS'\t\t\t\t\tinfo->hdlc_disabled;'
p10341
aS'\t\t\t\telse if (!diag_md_session_get_peripheral(i))'
p10342
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p10343
aS'\t\t\t\t\tdriver->hdlc_disabled;'
p10344
aS'\t\t\t} else {'
p10345
aS'\t\t\t\tif (!diag_md_session_get_peripheral(i))'
p10346
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] ='
p10347
aS'\t\t\t\t\tdriver->hdlc_disabled;'
p10348
aS'\t\t\t}'
p10349
aS'\t\t}'
p10350
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p10351
as(I1085
I1085
tp10352
(lp10353
S'\t\t\t\tp_mask) || (pd_mask & p_mask))'
p10354
as(I1187
I1187
tp10355
(lp10356
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 5, pid);'
p10357
as(I1046
I1046
tp10358
(lp10359
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, mask_ret, pid);'
p10360
as(I1077
I1078
tp10361
(lp10362
S'\t\tmutex_lock(&driver->md_session_lock);'
p10363
aS'\t\tinfo = diag_md_session_get_pid(pid);'
p10364
as(I1110
I1110
tp10365
(lp10366
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 8, pid);'
p10367
as(I1207
I1207
tp10368
(lp10369
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p10370
as(I1044
I1044
tp10371
(lp10372
S'\tmask_ret = diag_process_apps_masks(buf, len, pid);'
p10373
as(I1298
I1298
tp10374
(lp10375
S'\t\tdiag_send_error_rsp(buf, len, pid);'
p10376
as(I1247
I1247
tp10377
(lp10378
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p10379
asss(g9590
g9591
I308
tp10380
(dp10381
g27
(dp10382
(I347
I352
tp10383
(lp10384
S'\tsession_info ='
p10385
aS'\t\tdiag_md_session_get_peripheral(peripheral);'
p10386
aS'\tif (session_info)'
p10387
aS'\t\thdlc_disabled = session_info->hdlc_disabled;'
p10388
aS'\telse'
p10389
aS'\t\thdlc_disabled = driver->hdlc_disabled;'
p10390
as(I314
I314
tp10391
(lp10392
S'\tstruct diag_md_session_t *session_info = NULL;'
p10393
assg9
(I308
I416
tp10394
sg11
I3
sg12
g13
sg14
(dp10395
(I347
I347
tp10396
(lp10397
S'\thdlc_disabled = driver->p_hdlc_disabled[peripheral];'
p10398
assssS'6c6aaf4e8330_sdm845-perf'
p10399
(dp10400
(g7598
g9756
I3311
tp10401
(dp10402
g27
(dp10403
(I3568
I3568
tp10404
(lp10405
S'\t\t\tif (entry->client->tgid != current->tgid)'
p10406
as(I3578
I3578
tp10407
(lp10408
S'\t\t\tif (!entry->in_service)'
p10409
as(I3381
I3381
tp10410
(lp10411
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10412
as(I3450
I3450
tp10413
(lp10414
S'\t\t\tif (ret == -EFAULT)'
p10415
as(I3436
I3436
tp10416
(lp10417
g119
as(I3385
I3385
tp10418
(lp10419
S'\t\t\tif (ret == -EFAULT)'
p10420
as(I3433
I3433
tp10421
(lp10422
S'\t\tif (ret == -EFAULT)'
p10423
as(I3467
I3467
tp10424
(lp10425
S'\t\tif (ret == -EFAULT)'
p10426
as(I3442
I3442
tp10427
(lp10428
S'\t\t\tif (ret == -EFAULT)'
p10429
as(I3359
I3359
tp10430
(lp10431
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10432
as(I3413
I3413
tp10433
(lp10434
S'\t\tif (ret == -EFAULT)'
p10435
assg9
(I3311
I3636
tp10436
sg11
I4
sg12
g13
sg14
(dp10437
(I3445
I3445
tp10438
(lp10439
S'\t\t\t}'
p10440
as(I3590
I3590
tp10441
(lp10442
S'\t\t\t}'
p10443
as(I3436
I3436
tp10444
(lp10445
S'\t\t}'
p10446
as(I3592
I3593
tp10447
(lp10448
S'\t\t\t\tput_task_struct(task_s);'
p10449
aS'\t\t\t\tput_pid(pid_struct);'
p10450
as(I3618
I3619
tp10451
(lp10452
S'\t\t\tput_task_struct(task_s);'
p10453
aS'\t\t\tput_pid(pid_struct);'
p10454
as(I3600
I3601
tp10455
(lp10456
S'\t\t\t\tput_task_struct(task_s);'
p10457
aS'\t\t\t\tput_pid(pid_struct);'
p10458
as(I3322
I3323
tp10459
(lp10460
S'\tstruct pid *pid_struct = NULL;'
p10461
aS'\tstruct task_struct *task_s = NULL;'
p10462
as(I3453
I3453
tp10463
(lp10464
S'\t\t\t}'
p10465
as(I3388
I3388
tp10466
(lp10467
S'\t\t\t}'
p10468
as(I3578
I3588
tp10469
(lp10470
S'\t\t\t}'
p10471
aS'\t\t\tif (task_s == entry->client) {'
p10472
aS'\t\t\t\tif (entry->client->tgid != current->tgid) {'
p10473
aS'\t\t\t\t\tput_task_struct(task_s);'
p10474
aS'\t\t\t\t\tput_pid(pid_struct);'
p10475
aS'\t\t\t\t\tcontinue;'
p10476
aS'\t\t\t\t}'
p10477
aS'\t\t\t}'
p10478
aS'\t\t\tif (!entry->in_service) {'
p10479
aS'\t\t\t\tput_task_struct(task_s);'
p10480
aS'\t\t\t\tput_pid(pid_struct);'
p10481
as(I3390
I3390
tp10482
(lp10483
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10484
as(I3455
I3455
tp10485
(lp10486
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10487
as(I3474
I3474
tp10488
(lp10489
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10490
as(I3430
I3430
tp10491
(lp10492
S'\t\tmutex_lock(&driver->md_session_lock);'
p10493
as(I3613
I3614
tp10494
(lp10495
S'\t\t\t\tput_task_struct(task_s);'
p10496
aS'\t\t\t\tput_pid(pid_struct);'
p10497
as(I3470
I3470
tp10498
(lp10499
S'\t\t}'
p10500
as(I3433
I3434
tp10501
(lp10502
S'\t\tif (ret == -EFAULT) {'
p10503
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10504
as(I3416
I3416
tp10505
(lp10506
S'\t\t}'
p10507
as(I3442
I3443
tp10508
(lp10509
S'\t\t\tif (ret == -EFAULT) {'
p10510
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p10511
as(I3450
I3451
tp10512
(lp10513
S'\t\t\tif (ret == -EFAULT) {'
p10514
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p10515
as(I3568
I3576
tp10516
(lp10517
S'\t\t\tpid_struct = find_get_pid(entry->tgid);'
p10518
aS'\t\t\tif (!pid_struct)'
p10519
aS'\t\t\t\tcontinue;'
p10520
aS'\t\t\ttask_s = get_pid_task(pid_struct, PIDTYPE_PID);'
p10521
aS'\t\t\tif (!task_s) {'
p10522
aS'\t\t\t\tDIAG_LOG(DIAG_DEBUG_DCI,'
p10523
aS'\t\t\t\t"diag: valid task doesn\'t exist for pid = %d\\n",'
p10524
aS'\t\t\t\tentry->tgid);'
p10525
aS'\t\t\t\tput_pid(pid_struct);'
p10526
as(I3467
I3468
tp10527
(lp10528
S'\t\tif (ret == -EFAULT) {'
p10529
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10530
as(I3419
I3419
tp10531
(lp10532
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10533
as(I3413
I3414
tp10534
(lp10535
S'\t\tif (ret == -EFAULT) {'
p10536
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10537
as(I3385
I3386
tp10538
(lp10539
S'\t\t\tif (ret == -EFAULT) {'
p10540
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p10541
as(I3464
I3464
tp10542
(lp10543
S'\t\tmutex_lock(&driver->md_session_lock);'
p10544
as(I3410
I3410
tp10545
(lp10546
S'\t\tmutex_lock(&driver->md_session_lock);'
p10547
as(I3361
I3361
tp10548
(lp10549
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10550
assssS'10171d1032b7_sdm845-perf'
p10551
(dp10552
(g7793
S'diag_cmd_get_log_range'
p10553
I1233
tp10554
(dp10555
g27
(dp10556
(I1247
I1252
tp10557
(lp10558
S'\tmask_info = (!info) ? &log_mask : info->log_mask;'
p10559
aS'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p10560
aS'\t    !mask_info) {'
p10561
aS'\t\tpr_err("diag: Invalid input in %s, src_buf: %pK, src_len: %d, dest_buf: %pK, dest_len: %d, mask_info: %pK\\n",'
p10562
aS'\t\t       __func__, src_buf, src_len, dest_buf, dest_len,'
p10563
aS'\t\t       mask_info);'
p10564
as(I1234
I1235
tp10565
(lp10566
S'\t\t\t\t  unsigned char *dest_buf, int dest_len,'
p10567
aS'\t\t\t\t  struct diag_md_session_t *info)'
p10568
as(I1239
I1239
tp10569
(lp10570
S'\tstruct diag_mask_info *mask_info = NULL;'
p10571
assg9
(I1233
I1268
tp10572
sg11
I5
sg12
g13
sg14
(dp10573
(I1247
I1249
tp10574
(lp10575
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0) {'
p10576
aS'\t\tpr_err("diag: Invalid input in %s, src_buf: %pK, src_len: %d, dest_buf: %pK, dest_len: %d\\n",'
p10577
aS'\t\t       __func__, src_buf, src_len, dest_buf, dest_len);'
p10578
as(I1241
I1243
tp10579
(lp10580
S'\tif (!mask)'
p10581
aS'\t\treturn -EINVAL;'
p10582
ag119
as(I1234
I1234
tp10583
(lp10584
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p10585
asss(g7793
g8910
I1063
tp10586
(dp10587
g27
(dp10588
(I1064
I1065
tp10589
(lp10590
S'\t\t\t\t  unsigned char *dest_buf, int dest_len,'
p10591
aS'\t\t\t\t  struct diag_md_session_t *info)'
p10592
assg9
(I1063
I1127
tp10593
sg11
I5
sg12
g13
sg14
(dp10594
(I1072
I1073
tp10595
(lp10596
S'\tmutex_lock(&driver->md_session_lock);'
p10597
aS'\tinfo = diag_md_session_get_pid(pid);'
p10598
as(I1100
I1100
tp10599
(lp10600
S'\tmutex_unlock(&driver->md_session_lock);'
p10601
as(I1086
I1086
tp10602
(lp10603
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10604
as(I1080
I1080
tp10605
(lp10606
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10607
as(I1070
I1070
tp10608
(lp10609
S'\tstruct diag_md_session_t *info = NULL;'
p10610
as(I1064
I1064
tp10611
(lp10612
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p10613
asss(g7598
S'diag_md_session_get_pid'
p10614
I1434
tp10615
(dp10616
g9
(I1434
I1445
tp10617
sg11
I1
sg12
g13
sg14
(dp10618
(I1437
I1438
tp10619
(lp10620
S'\tif (pid <= 0)'
p10621
aS'\t\treturn NULL;'
p10622
asss(g7793
S'diag_cmd_disable_log_mask'
p10623
I1421
tp10624
(dp10625
g27
(dp10626
(I1422
I1423
tp10627
(lp10628
S'\t\t\t\t     unsigned char *dest_buf, int dest_len,'
p10629
aS'\t\t\t\t     struct diag_md_session_t *info)'
p10630
assg9
(I1421
I1492
tp10631
sg11
I5
sg12
g13
sg14
(dp10632
(I1428
I1431
tp10633
(lp10634
S'\tstruct diag_md_session_t *info = NULL;'
p10635
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p10636
aS'\tinfo = diag_md_session_get_pid(pid);'
p10637
as(I1461
I1461
tp10638
(lp10639
S'\tmutex_unlock(&driver->md_session_lock);'
p10640
as(I1452
I1452
tp10641
(lp10642
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10643
as(I1422
I1422
tp10644
(lp10645
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p10646
as(I1439
I1439
tp10647
(lp10648
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10649
as(I1445
I1445
tp10650
(lp10651
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10652
asss(g7598
g10144
I239
tp10653
(dp10654
g27
(dp10655
(I252
I252
tp10656
(lp10657
g119
assg9
(I239
I258
tp10658
sg11
I1
sg12
g13
sg14
(dp10659
(I252
I252
tp10660
(lp10661
S'\tmutex_unlock(&driver->md_session_lock);'
p10662
as(I246
I246
tp10663
(lp10664
S'\tmutex_lock(&driver->md_session_lock);'
p10665
asss(g7598
g7768
I3050
tp10666
(dp10667
g9
(I3050
I3140
tp10668
sg11
I3
sg12
g13
sg14
(dp10669
(I3117
I3117
tp10670
(lp10671
S'\tmutex_unlock(&driver->md_session_lock);'
p10672
as(I3111
I3111
tp10673
(lp10674
S'\tmutex_lock(&driver->md_session_lock);'
p10675
asss(g7856
S'diag_update_md_clients'
p10676
I524
tp10677
(dp10678
g9
(I524
I548
tp10679
sg11
I1
sg12
g13
sg14
(dp10680
(I529
I529
tp10681
(lp10682
S'\tmutex_lock(&driver->md_session_lock);'
p10683
as(I545
I545
tp10684
(lp10685
S'\tmutex_unlock(&driver->md_session_lock);'
p10686
asss(g7793
g8627
I1270
tp10687
(dp10688
g27
(dp10689
(I1272
I1272
tp10690
(lp10691
S'\t\t\t\t struct diag_md_session_t *info)'
p10692
assg9
(I1270
I1419
tp10693
sg11
I5
sg12
g13
sg14
(dp10694
(I1296
I1296
tp10695
(lp10696
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10697
as(I1302
I1302
tp10698
(lp10699
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10700
as(I1272
I1272
tp10701
(lp10702
S'\t\t\t\t int pid)'
p10703
as(I1312
I1312
tp10704
(lp10705
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10706
as(I1375
I1375
tp10707
(lp10708
S'\tmutex_unlock(&driver->md_session_lock);'
p10709
as(I1285
I1288
tp10710
(lp10711
S'\tstruct diag_md_session_t *info = NULL;'
p10712
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p10713
aS'\tinfo = diag_md_session_get_pid(pid);'
p10714
asss(g7793
g8791
I2208
tp10715
(dp10716
g27
(dp10717
(I2208
I2209
tp10718
(lp10719
S'int diag_process_apps_masks(unsigned char *buf, int len,'
p10720
aS'\t\t\t    struct diag_md_session_t *info)'
p10721
as(I2212
I2213
tp10722
(lp10723
S'\t\t    unsigned char *dest_buf, int dest_len,'
p10724
aS'\t\t    struct diag_md_session_t *info) = NULL;'
p10725
as(I2262
I2262
tp10726
(lp10727
S'\t\t\t    DIAG_MAX_RSP_SIZE, info);'
p10728
assg9
(I2208
I2265
tp10729
sg11
I3
sg12
g13
sg14
(dp10730
(I2212
I2212
tp10731
(lp10732
S'\t\t    unsigned char *dest_buf, int dest_len, int pid) = NULL;'
p10733
as(I2208
I2208
tp10734
(lp10735
S'int diag_process_apps_masks(unsigned char *buf, int len, int pid)'
p10736
as(I2262
I2262
tp10737
(lp10738
S'\t\t\t    DIAG_MAX_RSP_SIZE, pid);'
p10739
asss(g7793
g9109
I721
tp10740
(dp10741
g27
(dp10742
(I722
I723
tp10743
(lp10744
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p10745
aS'\t\t\t\t struct diag_md_session_t *info)'
p10746
assg9
(I721
I865
tp10747
sg11
I5
sg12
g13
sg14
(dp10748
(I763
I763
tp10749
(lp10750
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10751
as(I806
I806
tp10752
(lp10753
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p10754
as(I750
I750
tp10755
(lp10756
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10757
as(I733
I736
tp10758
(lp10759
S'\tstruct diag_md_session_t *info = NULL;'
p10760
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p10761
aS'\tinfo = diag_md_session_get_pid(pid);'
p10762
as(I744
I744
tp10763
(lp10764
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10765
as(I722
I722
tp10766
(lp10767
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p10768
as(I827
I827
tp10769
(lp10770
S'\tmutex_unlock(&driver->md_session_lock);'
p10771
asss(g7856
S'pack_rsp_and_send'
p10772
I244
tp10773
(dp10774
g27
(dp10775
(I312
I312
tp10776
(lp10777
S'\t\t\t\tdriver->logging_mode == DIAG_MULTI_MODE)'
p10778
as(I245
I245
tp10779
(lp10780
S'\t\t\t\tstruct diag_md_session_t *info)'
p10781
assg9
(I244
I342
tp10782
sg11
I3
sg12
g13
sg14
(dp10783
(I288
I288
tp10784
(lp10785
S'\tmutex_unlock(&driver->md_session_lock);'
p10786
as(I245
I245
tp10787
(lp10788
S'\t\t\t\tint pid)'
p10789
as(I264
I268
tp10790
(lp10791
S'\tmutex_lock(&driver->md_session_lock);'
p10792
aS'\tsession_info = diag_md_session_get_pid(pid);'
p10793
aS'\tinfo = (session_info) ? session_info :'
p10794
aS'\t\t\t\tdiag_md_session_get_peripheral(APPS_DATA);'
p10795
ag119
as(I312
I313
tp10796
(lp10797
S'\t\t\t\tdriver->logging_mode == DIAG_MULTI_MODE) {'
p10798
aS'\t\t\tmutex_lock(&driver->md_session_lock);'
p10799
as(I315
I316
tp10800
(lp10801
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10802
aS'\t\t}'
p10803
as(I253
I253
tp10804
(lp10805
S'\tstruct diag_md_session_t *session_info = NULL, *info = NULL;'
p10806
asss(g7793
g7794
I1129
tp10807
(dp10808
g27
(dp10809
(I1164
I1164
tp10810
(lp10811
S'\tif (!diag_apps_responds())'
p10812
as(I1130
I1131
tp10813
(lp10814
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p10815
aS'\t\t\t\t struct diag_md_session_t *info)'
p10816
assg9
(I1129
I1231
tp10817
sg11
I5
sg12
g13
sg14
(dp10818
(I1187
I1187
tp10819
(lp10820
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10821
as(I1130
I1130
tp10822
(lp10823
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p10824
as(I1164
I1165
tp10825
(lp10826
S'\tif (!diag_apps_responds()) {'
p10827
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p10828
as(I1160
I1160
tp10829
(lp10830
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10831
as(I1143
I1146
tp10832
(lp10833
S'\tstruct diag_md_session_t *info = NULL;'
p10834
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p10835
aS'\tinfo = diag_md_session_get_pid(pid);'
p10836
as(I1154
I1154
tp10837
(lp10838
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10839
as(I1167
I1167
tp10840
(lp10841
S'\t}'
p10842
as(I1229
I1229
tp10843
(lp10844
S'\tmutex_unlock(&driver->md_session_lock);'
p10845
asss(g7598
g8684
I2888
tp10846
(dp10847
g27
(dp10848
(I2946
I2949
tp10849
(lp10850
S'\t\tmutex_lock(&driver->md_session_lock);'
p10851
aS'\t\tinfo = diag_md_session_get_pid(current->tgid);'
p10852
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p10853
aS'\t\tret = diag_process_apps_pkt(user_space_data, len, info);'
p10854
as(I2896
I2896
tp10855
(lp10856
S'\tstruct diag_md_session_t *info = NULL;'
p10857
as(I2950
I2950
tp10858
(lp10859
S'\t\t\t\t\t\tinfo);'
p10860
assg9
(I2888
I2956
tp10861
sg11
I2
sg12
g13
sg14
(dp10862
(I2946
I2947
tp10863
(lp10864
S'\t\tret = diag_process_apps_pkt(user_space_data, len,'
p10865
aS'\t\t\tcurrent->tgid);'
p10866
as(I2950
I2950
tp10867
(lp10868
S'\t\t\t\t\t\tcurrent->tgid);'
p10869
asss(g9590
g9591
I308
tp10870
(dp10871
g27
(dp10872
(I353
I353
tp10873
(lp10874
g119
as(I347
I349
tp10875
(lp10876
g119
aS'\tsession_info ='
p10877
aS'\t\tdiag_md_session_get_peripheral(peripheral);'
p10878
assg9
(I308
I421
tp10879
sg11
I3
sg12
g13
sg14
(dp10880
(I347
I348
tp10881
(lp10882
S'\tmutex_lock(&driver->md_session_lock);'
p10883
aS'\tsession_info = diag_md_session_get_peripheral(peripheral);'
p10884
as(I353
I353
tp10885
(lp10886
S'\tmutex_unlock(&driver->md_session_lock);'
p10887
asss(g7598
g8957
I2958
tp10888
(dp10889
g27
(dp10890
(I3034
I3034
tp10891
(lp10892
S'\t\t\t\t\t\tlen, session_info);'
p10893
as(I3016
I3016
tp10894
(lp10895
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10896
as(I3030
I3030
tp10897
(lp10898
S'\t\t\t\tlen, session_info);'
p10899
assg9
(I2958
I3048
tp10900
sg11
I2
sg12
g13
sg14
(dp10901
(I3034
I3034
tp10902
(lp10903
S'\t\t\t\t\t\tlen, current->tgid);'
p10904
as(I3026
I3026
tp10905
(lp10906
S'\t\tmutex_unlock(&driver->md_session_lock);'
p10907
as(I3019
I3019
tp10908
(lp10909
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10910
as(I3030
I3030
tp10911
(lp10912
S'\t\t\t\tlen, current->tgid);'
p10913
asss(g9674
g9675
I130
tp10914
(dp10915
g27
(dp10916
(I136
I136
tp10917
(lp10918
S'\tint peripheral;'
p10919
as(I198
I199
tp10920
(lp10921
S'\t\tif ((driver->client_map[i].pid !='
p10922
aS'\t\t     session_info->pid) ||'
p10923
as(I132
I132
tp10924
(lp10925
S'\tint i;'
p10926
as(I148
I150
tp10927
(lp10928
S'\tsession_info ='
p10929
aS'\t\tdiag_md_session_get_peripheral(peripheral);'
p10930
aS'\tif (!session_info)'
p10931
assg9
(I130
I215
tp10932
sg11
I4
sg12
g13
sg14
(dp10933
(I148
I151
tp10934
(lp10935
S'\tmutex_lock(&driver->md_session_lock);'
p10936
aS'\tsession_info = diag_md_session_get_peripheral(peripheral);'
p10937
aS'\tif (!session_info) {'
p10938
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p10939
as(I153
I155
tp10940
(lp10941
S'\t}'
p10942
aS'\tpid = session_info->pid;'
p10943
aS'\tmutex_unlock(&driver->md_session_lock);'
p10944
as(I132
I132
tp10945
(lp10946
S'\tint i, peripheral, pid = 0;'
p10947
as(I198
I198
tp10948
(lp10949
S'\t\tif ((driver->client_map[i].pid != pid) ||'
p10950
asss(g7856
S'encode_rsp_and_send'
p10951
I344
tp10952
(dp10953
g27
(dp10954
(I387
I387
tp10955
(lp10956
g119
as(I345
I345
tp10957
(lp10958
S'\t\t\t\tstruct diag_md_session_t *info)'
p10959
as(I410
I410
tp10960
(lp10961
S'\t\t\t\tdriver->logging_mode == DIAG_MULTI_MODE)'
p10962
assg9
(I344
I443
tp10963
sg11
I3
sg12
g13
sg14
(dp10964
(I352
I352
tp10965
(lp10966
S'\tstruct diag_md_session_t *session_info = NULL, *info = NULL;'
p10967
as(I410
I411
tp10968
(lp10969
S'\t\t\t\tdriver->logging_mode == DIAG_MULTI_MODE) {'
p10970
aS'\t\t\tmutex_lock(&driver->md_session_lock);'
p10971
as(I387
I387
tp10972
(lp10973
S'\tmutex_unlock(&driver->md_session_lock);'
p10974
as(I413
I414
tp10975
(lp10976
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p10977
aS'\t\t}'
p10978
as(I345
I345
tp10979
(lp10980
S'\t\t\t\tint pid)'
p10981
as(I363
I367
tp10982
(lp10983
S'\tmutex_lock(&driver->md_session_lock);'
p10984
aS'\tsession_info = diag_md_session_get_pid(pid);'
p10985
aS'\tinfo = (session_info) ? session_info :'
p10986
aS'\t\t\t\tdiag_md_session_get_peripheral(APPS_DATA);'
p10987
ag119
asss(g7793
g8990
I989
tp10988
(dp10989
g27
(dp10990
(I990
I991
tp10991
(lp10992
S'\t\t\t\t      unsigned char *dest_buf, int dest_len,'
p10993
aS'\t\t\t\t      struct diag_md_session_t *info)'
p10994
assg9
(I989
I1061
tp10995
sg11
I5
sg12
g13
sg14
(dp10996
(I997
I997
tp10997
(lp10998
S'\tstruct diag_md_session_t *info = NULL;'
p10999
as(I1013
I1013
tp11000
(lp11001
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11002
as(I990
I990
tp11003
(lp11004
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p11005
as(I1021
I1021
tp11006
(lp11007
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11008
as(I999
I1000
tp11009
(lp11010
S'\tmutex_lock(&driver->md_session_lock);'
p11011
aS'\tinfo = diag_md_session_get_pid(pid);'
p11012
as(I1007
I1007
tp11013
(lp11014
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11015
as(I1029
I1029
tp11016
(lp11017
S'\tmutex_unlock(&driver->md_session_lock);'
p11018
asss(g7598
S'diag_clear_masks'
p11019
I426
tp11020
(dp11021
g27
(dp11022
(I438
I438
tp11023
(lp11024
S'\t\t\tsizeof(cmd_disable_log_mask), info);'
p11025
as(I440
I440
tp11026
(lp11027
S'\t\t\tsizeof(cmd_disable_msg_mask), info);'
p11028
as(I442
I442
tp11029
(lp11030
S'\t\t\tsizeof(cmd_disable_event_mask), info);'
p11031
as(I435
I435
tp11032
(lp11033
S'\t((info) ? "ODL exit" : "USB Disconnection"));'
p11034
as(I426
I426
tp11035
(lp11036
S'void diag_clear_masks(struct diag_md_session_t *info)'
p11037
assg9
(I426
I445
tp11038
sg11
I1
sg12
g13
sg14
(dp11039
(I438
I438
tp11040
(lp11041
S'\t\t\tsizeof(cmd_disable_log_mask), pid);'
p11042
as(I440
I440
tp11043
(lp11044
S'\t\t\tsizeof(cmd_disable_msg_mask), pid);'
p11045
as(I442
I442
tp11046
(lp11047
S'\t\t\tsizeof(cmd_disable_event_mask), pid);'
p11048
as(I435
I435
tp11049
(lp11050
S'\t((pid) ? "ODL exit" : "USB Disconnection"));'
p11051
as(I426
I426
tp11052
(lp11053
S'void diag_clear_masks(int pid)'
p11054
asss(g7598
g7599
I447
tp11055
(dp11056
g27
(dp11057
(I472
I474
tp11058
(lp11059
S'\tsession_mask = session_info->peripheral_mask;'
p11060
aS'\tdiag_md_session_close(session_info);'
p11061
ag119
as(I495
I495
tp11062
(lp11063
g119
as(I465
I465
tp11064
(lp11065
S'\t\tdiag_clear_masks(session_info);'
p11066
as(I457
I457
tp11067
(lp11068
S'\tif (!session_info)'
p11069
assg9
(I447
I500
tp11070
sg11
I1
sg12
g13
sg14
(dp11071
(I457
I458
tp11072
(lp11073
S'\tif (!session_info) {'
p11074
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p11075
as(I455
I455
tp11076
(lp11077
S'\tmutex_lock(&driver->md_session_lock);'
p11078
as(I460
I462
tp11079
(lp11080
S'\t}'
p11081
aS'\tsession_mask = session_info->peripheral_mask;'
p11082
aS'\tmutex_unlock(&driver->md_session_lock);'
p11083
as(I465
I465
tp11084
(lp11085
S'\t\tdiag_clear_masks(pid);'
p11086
as(I495
I497
tp11087
(lp11088
S'\tmutex_lock(&driver->md_session_lock);'
p11089
aS'\tdiag_md_session_close(pid);'
p11090
aS'\tmutex_unlock(&driver->md_session_lock);'
p11091
asss(g7598
g9452
I1396
tp11092
(dp11093
g27
(dp11094
(I1396
I1396
tp11095
(lp11096
S'static void diag_md_session_close(struct diag_md_session_t *session_info)'
p11097
as(I1431
I1431
tp11098
(lp11099
S'\tmutex_unlock(&driver->md_session_lock);'
p11100
as(I1406
I1406
tp11101
(lp11102
S'\tmutex_lock(&driver->md_session_lock);'
p11103
assg9
(I1396
I1432
tp11104
sg11
I1
sg12
g13
sg14
(dp11105
(I1396
I1396
tp11106
(lp11107
S'static void diag_md_session_close(int pid)'
p11108
as(I1400
I1400
tp11109
(lp11110
S'\tstruct diag_md_session_t *session_info = NULL;'
p11111
as(I1402
I1402
tp11112
(lp11113
S'\tsession_info = diag_md_session_get_pid(pid);'
p11114
asss(g7793
S'diag_cmd_get_event_mask'
p11115
I954
tp11116
(dp11117
g27
(dp11118
(I955
I956
tp11119
(lp11120
S'\t\t\t\t   unsigned char *dest_buf, int dest_len,'
p11121
aS'\t\t\t\t   struct diag_md_session_t *info)'
p11122
assg9
(I954
I987
tp11123
sg11
I5
sg12
g13
sg14
(dp11124
(I955
I955
tp11125
(lp11126
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p11127
asss(g7598
g9756
I3142
tp11128
(dp11129
g27
(dp11130
(I3296
I3296
tp11131
(lp11132
S'\t\tif (ret == -EFAULT)'
p11133
as(I3242
I3242
tp11134
(lp11135
S'\t\tif (ret == -EFAULT)'
p11136
as(I3188
I3188
tp11137
(lp11138
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11139
as(I3214
I3214
tp11140
(lp11141
S'\t\t\tif (ret == -EFAULT)'
p11142
as(I3271
I3271
tp11143
(lp11144
S'\t\t\tif (ret == -EFAULT)'
p11145
as(I3279
I3279
tp11146
(lp11147
S'\t\t\tif (ret == -EFAULT)'
p11148
as(I3262
I3262
tp11149
(lp11150
S'\t\tif (ret == -EFAULT)'
p11151
as(I3265
I3265
tp11152
(lp11153
g119
as(I3210
I3210
tp11154
(lp11155
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11156
assg9
(I3142
I3438
tp11157
sg11
I4
sg12
g13
sg14
(dp11158
(I3296
I3297
tp11159
(lp11160
S'\t\tif (ret == -EFAULT) {'
p11161
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11162
as(I3248
I3248
tp11163
(lp11164
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11165
as(I3242
I3243
tp11166
(lp11167
S'\t\tif (ret == -EFAULT) {'
p11168
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11169
as(I3259
I3259
tp11170
(lp11171
S'\t\tmutex_lock(&driver->md_session_lock);'
p11172
as(I3190
I3190
tp11173
(lp11174
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11175
as(I3271
I3272
tp11176
(lp11177
S'\t\t\tif (ret == -EFAULT) {'
p11178
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p11179
as(I3284
I3284
tp11180
(lp11181
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11182
as(I3293
I3293
tp11183
(lp11184
S'\t\tmutex_lock(&driver->md_session_lock);'
p11185
as(I3303
I3303
tp11186
(lp11187
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11188
as(I3239
I3239
tp11189
(lp11190
S'\t\tmutex_lock(&driver->md_session_lock);'
p11191
as(I3265
I3265
tp11192
(lp11193
S'\t\t}'
p11194
as(I3299
I3299
tp11195
(lp11196
S'\t\t}'
p11197
as(I3214
I3215
tp11198
(lp11199
S'\t\t\tif (ret == -EFAULT) {'
p11200
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p11201
as(I3245
I3245
tp11202
(lp11203
S'\t\t}'
p11204
as(I3282
I3282
tp11205
(lp11206
S'\t\t\t}'
p11207
as(I3274
I3274
tp11208
(lp11209
S'\t\t\t}'
p11210
as(I3262
I3263
tp11211
(lp11212
S'\t\tif (ret == -EFAULT) {'
p11213
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11214
as(I3279
I3280
tp11215
(lp11216
S'\t\t\tif (ret == -EFAULT) {'
p11217
aS'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p11218
as(I3217
I3217
tp11219
(lp11220
S'\t\t\t}'
p11221
as(I3219
I3219
tp11222
(lp11223
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11224
asss(g7598
g9972
I2056
tp11225
(dp11226
g27
(dp11227
(I2064
I2065
tp11228
(lp11229
S'\tif (session_info) {'
p11230
aS'\t\tmutex_lock(&driver->md_session_lock);'
p11231
as(I2068
I2069
tp11232
(lp11233
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11234
aS'\t} else'
p11235
as(I2060
I2062
tp11236
(lp11237
S'\tmutex_lock(&driver->md_session_lock);'
p11238
aS'\tsession_info = diag_md_session_get_pid(current->tgid);'
p11239
aS'\tmutex_unlock(&driver->md_session_lock);'
p11240
assg9
(I2056
I2075
tp11241
sg11
I1
sg12
g13
sg14
(dp11242
(I2068
I2068
tp11243
(lp11244
S'\telse'
p11245
as(I2064
I2066
tp11246
(lp11247
S'\tmutex_lock(&driver->md_session_lock);'
p11248
aS'\tsession_info = diag_md_session_get_pid(current->tgid);'
p11249
aS'\tif (session_info)'
p11250
as(I2070
I2070
tp11251
(lp11252
S'\tmutex_unlock(&driver->md_session_lock);'
p11253
asss(g7793
g8204
I649
tp11254
(dp11255
g27
(dp11256
(I650
I651
tp11257
(lp11258
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p11259
aS'\t\t\t\t struct diag_md_session_t *info)'
p11260
as(I679
I679
tp11261
(lp11262
S'\tif (!diag_apps_responds())'
p11263
assg9
(I649
I719
tp11264
sg11
I5
sg12
g13
sg14
(dp11265
(I717
I717
tp11266
(lp11267
S'\tmutex_unlock(&driver->md_session_lock);'
p11268
as(I682
I682
tp11269
(lp11270
S'\t}'
p11271
as(I676
I676
tp11272
(lp11273
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11274
as(I697
I697
tp11275
(lp11276
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11277
as(I659
I662
tp11278
(lp11279
S'\tstruct diag_md_session_t *info = NULL;'
p11280
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p11281
aS'\tinfo = diag_md_session_get_pid(pid);'
p11282
as(I670
I670
tp11283
(lp11284
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11285
as(I679
I680
tp11286
(lp11287
S'\tif (!diag_apps_responds()) {'
p11288
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p11289
as(I650
I650
tp11290
(lp11291
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p11292
asss(g7856
S'diag_send_error_rsp'
p11293
I1006
tp11294
(dp11295
g27
(dp11296
(I1017
I1017
tp11297
(lp11298
S'\tdiag_send_rsp(driver->apps_rsp_buf, len + 1, info);'
p11299
as(I1007
I1007
tp11300
(lp11301
S'\t\t\tstruct diag_md_session_t *info)'
p11302
assg9
(I1006
I1018
tp11303
sg11
I3
sg12
g13
sg14
(dp11304
(I1017
I1017
tp11305
(lp11306
S'\tdiag_send_rsp(driver->apps_rsp_buf, len + 1, pid);'
p11307
as(I1007
I1007
tp11308
(lp11309
S'\t\t\tint pid)'
p11310
asss(g7793
g8722
I867
tp11311
(dp11312
g27
(dp11313
(I868
I869
tp11314
(lp11315
S'\t\t\t\t     unsigned char *dest_buf, int dest_len,'
p11316
aS'\t\t\t\t     struct diag_md_session_t *info)'
p11317
as(I921
I921
tp11318
(lp11319
g119
assg9
(I867
I952
tp11320
sg11
I5
sg12
g13
sg14
(dp11321
(I876
I879
tp11322
(lp11323
S'\tstruct diag_md_session_t *info = NULL;'
p11324
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p11325
aS'\tinfo = diag_md_session_get_pid(pid);'
p11326
as(I908
I908
tp11327
(lp11328
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11329
as(I893
I893
tp11330
(lp11331
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11332
as(I868
I868
tp11333
(lp11334
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p11335
as(I887
I887
tp11336
(lp11337
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11338
as(I921
I921
tp11339
(lp11340
S'\tmutex_unlock(&driver->md_session_lock);'
p11341
asss(g7793
g9225
I538
tp11342
(dp11343
g27
(dp11344
(I539
I540
tp11345
(lp11346
S'\t\t\t\t   unsigned char *dest_buf, int dest_len,'
p11347
aS'\t\t\t\t   struct diag_md_session_t *info)'
p11348
as(I567
I567
tp11349
(lp11350
S'\tif (!diag_apps_responds())'
p11351
assg9
(I538
I594
tp11352
sg11
I5
sg12
g13
sg14
(dp11353
(I592
I592
tp11354
(lp11355
S'\tmutex_unlock(&driver->md_session_lock);'
p11356
as(I563
I563
tp11357
(lp11358
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11359
as(I570
I570
tp11360
(lp11361
S'\t}'
p11362
as(I549
I550
tp11363
(lp11364
S'\tmutex_lock(&driver->md_session_lock);'
p11365
aS'\tinfo = diag_md_session_get_pid(pid);'
p11366
as(I557
I557
tp11367
(lp11368
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11369
as(I539
I539
tp11370
(lp11371
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p11372
as(I567
I568
tp11373
(lp11374
S'\tif (!diag_apps_responds()) {'
p11375
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p11376
as(I547
I547
tp11377
(lp11378
S'\tstruct diag_md_session_t *info = NULL;'
p11379
asss(g7856
g9954
I1454
tp11380
(dp11381
g27
(dp11382
(I1454
I1454
tp11383
(lp11384
S'static void hdlc_reset_timer_start(struct diag_md_session_t *info)'
p11385
assg9
(I1454
I1469
tp11386
sg11
I1
sg12
g13
sg14
(dp11387
(I1456
I1456
tp11388
(lp11389
S'\tstruct diag_md_session_t *info = NULL;'
p11390
as(I1454
I1454
tp11391
(lp11392
S'static void hdlc_reset_timer_start(int pid)'
p11393
as(I1458
I1458
tp11394
(lp11395
S'\tinfo = diag_md_session_get_pid(pid);'
p11396
asss(g7856
S'diagfwd_mux_read_done'
p11397
I1679
tp11398
(dp11399
g27
(dp11400
(I1685
I1685
tp11401
(lp11402
S'\t\tdiag_process_hdlc_pkt(buf, len, NULL);'
p11403
as(I1687
I1687
tp11404
(lp11405
S'\t\tdiag_process_non_hdlc_pkt(buf, len, NULL);'
p11406
assg9
(I1679
I1691
tp11407
sg11
I3
sg12
g13
sg14
(dp11408
(I1685
I1685
tp11409
(lp11410
S'\t\tdiag_process_hdlc_pkt(buf, len, 0);'
p11411
as(I1687
I1687
tp11412
(lp11413
S'\t\tdiag_process_non_hdlc_pkt(buf, len, 0);'
p11414
asss(g9590
g9634
I607
tp11415
(dp11416
g27
(dp11417
(I642
I642
tp11418
(lp11419
g119
assg9
(I607
I730
tp11420
sg11
I3
sg12
g13
sg14
(dp11421
(I636
I636
tp11422
(lp11423
S'\tmutex_lock(&driver->md_session_lock);'
p11424
as(I642
I642
tp11425
(lp11426
S'\tmutex_unlock(&driver->md_session_lock);'
p11427
asss(g7793
g8180
I596
tp11428
(dp11429
g27
(dp11430
(I597
I598
tp11431
(lp11432
S'\t\t\t\t   unsigned char *dest_buf, int dest_len,'
p11433
aS'\t\t\t\t   struct diag_md_session_t *info)'
p11434
assg9
(I596
I647
tp11435
sg11
I5
sg12
g13
sg14
(dp11436
(I597
I597
tp11437
(lp11438
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p11439
asss(g7856
S'diag_process_hdlc_pkt'
p11440
I1280
tp11441
(dp11442
g27
(dp11443
(I1280
I1281
tp11444
(lp11445
S'void diag_process_hdlc_pkt(void *data, unsigned int len,'
p11446
aS'\t\t\t   struct diag_md_session_t *info)'
p11447
as(I1340
I1340
tp11448
(lp11449
S'\t\t\t\t\t    driver->hdlc_buf_len, info);'
p11450
as(I1357
I1357
tp11451
(lp11452
S'\tdiag_send_error_rsp(driver->hdlc_buf, driver->hdlc_buf_len, info);'
p11453
assg9
(I1280
I1361
tp11454
sg11
I3
sg12
g13
sg14
(dp11455
(I1340
I1340
tp11456
(lp11457
S'\t\t\t\t\t    driver->hdlc_buf_len, pid);'
p11458
as(I1357
I1357
tp11459
(lp11460
S'\tdiag_send_error_rsp(driver->hdlc_buf, driver->hdlc_buf_len, pid);'
p11461
as(I1280
I1280
tp11462
(lp11463
S'void diag_process_hdlc_pkt(void *data, unsigned int len, int pid)'
p11464
asss(g9743
g9744
I217
tp11465
(dp11466
g27
(dp11467
(I224
I224
tp11468
(lp11469
S'\t\tdiag_clear_masks(NULL);'
p11470
assg9
(I217
I228
tp11471
sg11
I1
sg12
g13
sg14
(dp11472
(I224
I224
tp11473
(lp11474
S'\t\tdiag_clear_masks(0);'
p11475
asss(g7856
g8576
I1552
tp11476
(dp11477
g27
(dp11478
(I1552
I1553
tp11479
(lp11480
S'void diag_process_non_hdlc_pkt(unsigned char *buf, int len,'
p11481
aS'\t\t\t       struct diag_md_session_t *info)'
p11482
as(I1612
I1612
tp11483
(lp11484
S'\t\t\t\t\t    actual_pkt->length, info);'
p11485
as(I1643
I1643
tp11486
(lp11487
S'\t\t\tdiag_hdlc_start_recovery(buf, len, info);'
p11488
as(I1660
I1660
tp11489
(lp11490
S'\t\t\tdiag_hdlc_start_recovery(buf, len, info);'
p11491
as(I1608
I1608
tp11492
(lp11493
S'\t\t\tdiag_hdlc_start_recovery(buf, len, info);'
p11494
as(I1634
I1635
tp11495
(lp11496
S'\t\t\tdiag_hdlc_start_recovery(buf, len, info);'
p11497
aS'\t\t\tdiag_send_error_rsp(buf, len, info);'
p11498
as(I1666
I1666
tp11499
(lp11500
S'\t\t\t\t\t    actual_pkt->length, info);'
p11501
assg9
(I1552
I1677
tp11502
sg11
I3
sg12
g13
sg14
(dp11503
(I1612
I1612
tp11504
(lp11505
S'\t\t\t\t\t    actual_pkt->length, pid);'
p11506
as(I1643
I1643
tp11507
(lp11508
S'\t\t\tdiag_hdlc_start_recovery(buf, len, pid);'
p11509
as(I1660
I1660
tp11510
(lp11511
S'\t\t\tdiag_hdlc_start_recovery(buf, len, pid);'
p11512
as(I1608
I1608
tp11513
(lp11514
S'\t\t\tdiag_hdlc_start_recovery(buf, len, pid);'
p11515
as(I1634
I1635
tp11516
(lp11517
S'\t\t\tdiag_hdlc_start_recovery(buf, len, pid);'
p11518
aS'\t\t\tdiag_send_error_rsp(buf, len, pid);'
p11519
as(I1552
I1552
tp11520
(lp11521
S'void diag_process_non_hdlc_pkt(unsigned char *buf, int len, int pid)'
p11522
as(I1666
I1666
tp11523
(lp11524
S'\t\t\t\t\t    actual_pkt->length, pid);'
p11525
asss(g7856
g10165
I445
tp11526
(dp11527
g27
(dp11528
(I448
I448
tp11529
(lp11530
S'\tstruct diag_md_session_t *session_info = NULL;'
p11531
as(I458
I458
tp11532
(lp11533
g119
as(I450
I450
tp11534
(lp11535
g119
as(I462
I462
tp11536
(lp11537
S'\t\tencode_rsp_and_send(buf, len, session_info);'
p11538
as(I446
I446
tp11539
(lp11540
S'\tstruct diag_md_session_t *info)'
p11541
as(I460
I460
tp11542
(lp11543
S'\t\tpack_rsp_and_send(buf, len, session_info);'
p11544
assg9
(I445
I463
tp11545
sg11
I3
sg12
g13
sg14
(dp11546
(I448
I448
tp11547
(lp11548
S'\tstruct diag_md_session_t *session_info = NULL, *info = NULL;'
p11549
as(I458
I458
tp11550
(lp11551
S'\tmutex_unlock(&driver->md_session_lock);'
p11552
as(I460
I460
tp11553
(lp11554
S'\t\tpack_rsp_and_send(buf, len, pid);'
p11555
as(I450
I451
tp11556
(lp11557
S'\tmutex_lock(&driver->md_session_lock);'
p11558
aS'\tinfo = diag_md_session_get_pid(pid);'
p11559
as(I446
I446
tp11560
(lp11561
S'\tint pid)'
p11562
as(I462
I462
tp11563
(lp11564
S'\t\tencode_rsp_and_send(buf, len, pid);'
p11565
asss(g7856
g7857
I1020
tp11566
(dp11567
g27
(dp11568
(I1180
I1180
tp11569
(lp11570
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 5, info);'
p11571
as(I1078
I1079
tp11572
(lp11573
S'\t\t\t\tinfo->peripheral_mask) ||'
p11574
aS'\t\t\t\t(pd_mask & info->peripheral_mask))'
p11575
as(I1037
I1037
tp11576
(lp11577
S'\tmask_ret = diag_process_apps_masks(buf, len, info);'
p11578
as(I1133
I1133
tp11579
(lp11580
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p11581
as(I1103
I1103
tp11582
(lp11583
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 8, info);'
p11584
as(I1144
I1144
tp11585
(lp11586
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p11587
as(I1171
I1171
tp11588
(lp11589
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 16, info);'
p11590
as(I1275
I1275
tp11591
(lp11592
S'\t\tdiag_send_error_rsp(buf, len, info);'
p11593
as(I1109
I1109
tp11594
(lp11595
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, len, info);'
p11596
as(I1220
I1220
tp11597
(lp11598
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 55, info);'
p11599
as(I1022
I1022
tp11600
(lp11601
S'\tint i;'
p11602
as(I1151
I1151
tp11603
(lp11604
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 1, info);'
p11605
as(I1200
I1200
tp11606
(lp11607
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p11608
as(I1020
I1021
tp11609
(lp11610
S'int diag_process_apps_pkt(unsigned char *buf, int len,'
p11611
aS'\t\t\tstruct diag_md_session_t *info)'
p11612
as(I1240
I1240
tp11613
(lp11614
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p11615
as(I1085
I1085
tp11616
(lp11617
S'\t\t\t\tdiag_send_error_rsp(buf, len, info);'
p11618
as(I1061
I1061
tp11619
(lp11620
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p11621
as(I1252
I1252
tp11622
(lp11623
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p11624
as(I1039
I1039
tp11625
(lp11626
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, mask_ret, info);'
p11627
as(I1122
I1122
tp11628
(lp11629
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, info);'
p11630
as(I1189
I1189
tp11631
(lp11632
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 6, info);'
p11633
as(I1233
I1233
tp11634
(lp11635
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 14, info);'
p11636
assg9
(I1020
I1278
tp11637
sg11
I3
sg12
g13
sg14
(dp11638
(I1220
I1220
tp11639
(lp11640
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 55, pid);'
p11641
as(I1133
I1133
tp11642
(lp11643
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p11644
as(I1081
I1081
tp11645
(lp11646
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11647
as(I1144
I1144
tp11648
(lp11649
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p11650
as(I1070
I1071
tp11651
(lp11652
S'\t\tmutex_lock(&driver->md_session_lock);'
p11653
aS'\t\tinfo = diag_md_session_get_pid(pid);'
p11654
as(I1180
I1180
tp11655
(lp11656
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 5, pid);'
p11657
as(I1171
I1171
tp11658
(lp11659
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 16, pid);'
p11660
as(I1073
I1074
tp11661
(lp11662
S'\t\t\tp_mask = info->peripheral_mask;'
p11663
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11664
as(I1275
I1275
tp11665
(lp11666
S'\t\tdiag_send_error_rsp(buf, len, pid);'
p11667
as(I1260
I1261
tp11668
(lp11669
S'\t\tmutex_lock(&driver->md_session_lock);'
p11670
aS'\t\tinfo = diag_md_session_get_pid(pid);'
p11671
as(I1020
I1020
tp11672
(lp11673
S'int diag_process_apps_pkt(unsigned char *buf, int len, int pid)'
p11674
as(I1022
I1022
tp11675
(lp11676
S'\tint i, p_mask = 0;'
p11677
as(I1151
I1151
tp11678
(lp11679
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 1, pid);'
p11680
as(I1200
I1200
tp11681
(lp11682
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p11683
as(I1266
I1266
tp11684
(lp11685
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11686
as(I1031
I1031
tp11687
(lp11688
S'\tstruct diag_md_session_t *info = NULL;'
p11689
as(I1109
I1109
tp11690
(lp11691
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, len, pid);'
p11692
as(I1240
I1240
tp11693
(lp11694
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p11695
as(I1061
I1061
tp11696
(lp11697
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p11698
as(I1189
I1189
tp11699
(lp11700
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 6, pid);'
p11701
as(I1078
I1078
tp11702
(lp11703
S'\t\t\t\tp_mask) || (pd_mask & p_mask))'
p11704
as(I1085
I1085
tp11705
(lp11706
S'\t\t\t\tdiag_send_error_rsp(buf, len, pid);'
p11707
as(I1252
I1252
tp11708
(lp11709
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p11710
as(I1037
I1037
tp11711
(lp11712
S'\tmask_ret = diag_process_apps_masks(buf, len, pid);'
p11713
as(I1103
I1103
tp11714
(lp11715
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, 8, pid);'
p11716
as(I1122
I1122
tp11717
(lp11718
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, write_len, pid);'
p11719
as(I1039
I1039
tp11720
(lp11721
S'\t\tdiag_send_rsp(driver->apps_rsp_buf, mask_ret, pid);'
p11722
as(I1233
I1233
tp11723
(lp11724
S'\t\t\tdiag_send_rsp(driver->apps_rsp_buf, 14, pid);'
p11725
asss(g7856
g9897
I1499
tp11726
(dp11727
g27
(dp11728
(I1548
I1548
tp11729
(lp11730
S'\t\tdiag_process_non_hdlc_pkt(start_ptr, len - i, info);'
p11731
as(I1500
I1500
tp11732
(lp11733
S'\t\t\t\t     struct diag_md_session_t *info)'
p11734
as(I1509
I1509
tp11735
(lp11736
S'\thdlc_reset_timer_start(info);'
p11737
assg9
(I1499
I1550
tp11738
sg11
I3
sg12
g13
sg14
(dp11739
(I1500
I1500
tp11740
(lp11741
S'\t\t\t\t     int pid)'
p11742
as(I1509
I1509
tp11743
(lp11744
S'\thdlc_reset_timer_start(pid);'
p11745
as(I1548
I1548
tp11746
(lp11747
S'\t\tdiag_process_non_hdlc_pkt(start_ptr, len - i, pid);'
p11748
as(I1529
I1530
tp11749
(lp11750
S'\t\t\tmutex_lock(&driver->md_session_lock);'
p11751
aS'\t\t\tinfo = diag_md_session_get_pid(pid);'
p11752
as(I1506
I1506
tp11753
(lp11754
S'\tstruct diag_md_session_t *info = NULL;'
p11755
as(I1535
I1535
tp11756
(lp11757
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11758
asss(g7598
g7649
I1495
tp11759
(dp11760
g27
(dp11761
(I1584
I1584
tp11762
(lp11763
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p11764
as(I1574
I1575
tp11765
(lp11766
S'\t\t\tdiag_md_session_close(session_info);'
p11767
ag119
as(I1587
I1587
tp11768
(lp11769
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11770
as(I1530
I1530
tp11771
(lp11772
g119
as(I1596
I1596
tp11773
(lp11774
S'\t\t\terr = diag_md_peripheral_switch(session_info,'
p11775
as(I1559
I1559
tp11776
(lp11777
S'\t\tif ((change_mask & session_info->peripheral_mask)'
p11778
as(I1499
I1499
tp11779
(lp11780
S'\tint i, bit = 0, err = 0;'
p11781
as(I1570
I1571
tp11782
(lp11783
S'\t\tif (~change_mask & session_info->peripheral_mask) {'
p11784
aS'\t\t\terr = diag_md_peripheral_switch(session_info,'
p11785
as(I1554
I1555
tp11786
(lp11787
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11788
ag119
as(I1553
I1553
tp11789
(lp11790
S'\t\tmutex_lock(&driver->md_session_lock);'
p11791
as(I1541
I1541
tp11792
(lp11793
S'\t\tif (!change_mask)'
p11794
assg9
(I1495
I1613
tp11795
sg11
I4
sg12
g13
sg14
(dp11796
(I1596
I1596
tp11797
(lp11798
S'\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p11799
as(I1574
I1575
tp11800
(lp11801
S'\t\t\tdiag_md_session_close(current->tgid);'
p11802
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p11803
as(I1523
I1523
tp11804
(lp11805
S'\t\tmutex_lock(&driver->md_session_lock);'
p11806
as(I1541
I1542
tp11807
(lp11808
S'\t\tif (!change_mask) {'
p11809
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11810
as(I1564
I1564
tp11811
(lp11812
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11813
as(I1527
I1527
tp11814
(lp11815
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11816
as(I1544
I1544
tp11817
(lp11818
S'\t\t}'
p11819
as(I1556
I1556
tp11820
(lp11821
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11822
as(I1600
I1600
tp11823
(lp11824
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11825
as(I1570
I1571
tp11826
(lp11827
S'\t\tif (~change_mask & peripheral_mask) {'
p11828
aS'\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p11829
as(I1598
I1598
tp11830
(lp11831
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p11832
as(I1593
I1593
tp11833
(lp11834
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p11835
as(I1559
I1560
tp11836
(lp11837
S'\t\tperipheral_mask = session_info->peripheral_mask;'
p11838
aS'\t\tif ((change_mask & peripheral_mask)'
p11839
as(I1585
I1585
tp11840
(lp11841
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p11842
as(I1499
I1499
tp11843
(lp11844
S'\tint i, bit = 0, err = 0, peripheral_mask = 0;'
p11845
assssS'1770a10903e9_sdm845-perf'
p11846
(dp11847
(g9674
g9675
I138
tp11848
(dp11849
g27
(dp11850
(I140
I140
tp11851
(lp11852
S'\tint i;'
p11853
as(I144
I144
tp11854
(lp11855
S'\tint peripheral;'
p11856
as(I206
I207
tp11857
(lp11858
S'\t\tif ((driver->client_map[i].pid !='
p11859
aS'\t\t     session_info->pid) ||'
p11860
as(I156
I158
tp11861
(lp11862
S'\tsession_info ='
p11863
aS'\t\tdiag_md_session_get_peripheral(peripheral);'
p11864
aS'\tif (!session_info)'
p11865
as(I166
I166
tp11866
(lp11867
S'\tif (!ch)'
p11868
assg9
(I138
I223
tp11869
sg11
I4
sg12
g13
sg14
(dp11870
(I140
I140
tp11871
(lp11872
S'\tint i, peripheral, pid = 0;'
p11873
as(I166
I166
tp11874
(lp11875
S'\tif (!ch || !ch->md_info_inited)'
p11876
as(I156
I159
tp11877
(lp11878
S'\tmutex_lock(&driver->md_session_lock);'
p11879
aS'\tsession_info = diag_md_session_get_peripheral(peripheral);'
p11880
aS'\tif (!session_info) {'
p11881
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p11882
as(I161
I163
tp11883
(lp11884
S'\t}'
p11885
aS'\tpid = session_info->pid;'
p11886
aS'\tmutex_unlock(&driver->md_session_lock);'
p11887
as(I206
I206
tp11888
(lp11889
S'\t\tif ((driver->client_map[i].pid != pid) ||'
p11890
assssS'7dca8885b04d_sdm845-perf'
p11891
(dp11892
(g7793
g9109
I766
tp11893
(dp11894
g27
(dp11895
(I785
I786
tp11896
(lp11897
S'\tif (!src_buf || !dest_buf || src_len <= 0 || dest_len <= 0 ||'
p11898
aS'\t    !mask_info) {'
p11899
as(I899
I899
tp11900
(lp11901
S'\tmemcpy(dest_buf + write_len, src_buf + header_len, mask_size);'
p11902
as(I870
I870
tp11903
(lp11904
S'\t\tmemcpy(mask->ptr + offset, src_buf + header_len, mask_size);'
p11905
as(I812
I813
tp11906
(lp11907
S'\tfor (i = 0; i < driver->msg_mask_tbl_count; i++, mask++) {'
p11908
aS'\t\tif (i < (driver->msg_mask_tbl_count - 1)) {'
p11909
as(I905
I905
tp11910
(lp11911
S'\t\tif (!diag_check_update(i))'
p11912
as(I767
I768
tp11913
(lp11914
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p11915
aS'\t\t\t\t struct diag_md_session_t *info)'
p11916
as(I879
I879
tp11917
(lp11918
S'\tif (diag_check_update(APPS_DATA))'
p11919
assg9
(I766
I918
tp11920
sg11
I5
sg12
g13
sg14
(dp11921
(I785
I786
tp11922
(lp11923
S'\tif (!src_buf || !dest_buf || dest_len <= 0 || !mask_info ||'
p11924
aS'\t\t(src_len < sizeof(struct diag_msg_build_mask_t))) {'
p11925
as(I778
I782
tp11926
(lp11927
S'\tstruct diag_md_session_t *info = NULL;'
p11928
aS'\tuint8_t msg_mask_tbl_count = 0;'
p11929
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p11930
aS'\tinfo = diag_md_session_get_pid(pid);'
p11931
as(I870
I872
tp11932
(lp11933
S'\t\tif (mask_size && src_len >= header_len + mask_size)'
p11934
aS'\t\t\tmemcpy(mask->ptr + offset, src_buf + header_len,'
p11935
aS'\t\t\t\tmask_size);'
p11936
as(I790
I790
tp11937
(lp11938
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11939
as(I879
I880
tp11940
(lp11941
S'\tmutex_unlock(&driver->md_session_lock);'
p11942
aS'\tif (diag_check_update(APPS_DATA, pid))'
p11943
as(I796
I796
tp11944
(lp11945
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11946
as(I809
I809
tp11947
(lp11948
S'\t\tmutex_unlock(&driver->md_session_lock);'
p11949
as(I905
I905
tp11950
(lp11951
S'\t\tif (!diag_check_update(i, pid))'
p11952
as(I856
I856
tp11953
(lp11954
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p11955
as(I812
I817
tp11956
(lp11957
S'\tmsg_mask_tbl_count = (info) ? info->msg_mask_tbl_count :'
p11958
aS'\t\t\tdriver->msg_mask_tbl_count;'
p11959
aS'\tfor (i = 0; i < msg_mask_tbl_count; i++, mask++) {'
p11960
aS'\t\tif (!mask->ptr)'
p11961
aS'\t\t\tcontinue;'
p11962
aS'\t\tif (i < (msg_mask_tbl_count - 1)) {'
p11963
as(I899
I900
tp11964
(lp11965
S'\tif (mask_size && src_len >= header_len + mask_size)'
p11966
aS'\t\tmemcpy(dest_buf + write_len, src_buf + header_len, mask_size);'
p11967
as(I767
I767
tp11968
(lp11969
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p11970
assssS'f81979164388_sdm845-perf'
p11971
(dp11972
(g7856
g10951
I344
tp11973
(dp11974
g27
(dp11975
(I404
I404
tp11976
(lp11977
S'\t\t\t\tdriver->logging_mode == DIAG_MULTI_MODE)'
p11978
as(I381
I381
tp11979
(lp11980
g119
as(I388
I388
tp11981
(lp11982
S'\twhile (retry_count < UINT_MAX) {'
p11983
as(I345
I345
tp11984
(lp11985
S'\t\t\t\tstruct diag_md_session_t *info)'
p11986
as(I384
I384
tp11987
(lp11988
S'\t * take one or two iterations. When this loops till UINT_MAX, it'
p11989
as(I374
I383
tp11990
(lp11991
S'\t\tif (info->peripheral_mask == DIAG_CON_ALL ||'
p11992
aS'\t\t\t(info->peripheral_mask & (1 << APPS_DATA)) ||'
p11993
aS'\t\t\t(info->peripheral_mask & (1 << PERIPHERAL_MODEM))) {'
p11994
aS'\t\t\trsp_ctxt = SET_BUF_CTXT(APPS_DATA, TYPE_CMD, 1);'
p11995
aS'\t\t} else {'
p11996
aS'\t\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p11997
aS'\t\t\t\tif (info->peripheral_mask & (1 << i))'
p11998
aS'\t\t\t\t\tbreak;'
p11999
aS'\t\t\t}'
p12000
aS'\t\trsp_ctxt = SET_BUF_CTXT(i, TYPE_CMD, 1);'
p12001
assg9
(I344
I437
tp12002
sg11
I3
sg12
g13
sg14
(dp12003
(I384
I384
tp12004
(lp12005
S'\t * take one or two iterations. When this loops till RETRY_MAX_COUNT, it'
p12006
as(I381
I381
tp12007
(lp12008
S'\tmutex_unlock(&driver->md_session_lock);'
p12009
as(I378
I378
tp12010
(lp12011
S'\t\trsp_ctxt = SET_BUF_CTXT(i, TYPE_CMD, TYPE_CMD);'
p12012
as(I404
I405
tp12013
(lp12014
S'\t\t\t\tdriver->logging_mode == DIAG_MULTI_MODE) {'
p12015
aS'\t\t\tmutex_lock(&driver->md_session_lock);'
p12016
as(I388
I388
tp12017
(lp12018
S'\twhile (retry_count < RETRY_MAX_COUNT) {'
p12019
as(I345
I345
tp12020
(lp12021
S'\t\t\t\tint pid)'
p12022
as(I352
I352
tp12023
(lp12024
S'\tstruct diag_md_session_t *session_info = NULL, *info = NULL;'
p12025
as(I363
I367
tp12026
(lp12027
S'\tmutex_lock(&driver->md_session_lock);'
p12028
aS'\tsession_info = diag_md_session_get_pid(pid);'
p12029
aS'\tinfo = (session_info) ? session_info :'
p12030
aS'\t\t\t\tdiag_md_session_get_peripheral(APPS_DATA);'
p12031
ag119
as(I407
I408
tp12032
(lp12033
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12034
aS'\t\t}'
p12035
as(I374
I376
tp12036
(lp12037
S'\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p12038
aS'\t\t\tif (info->peripheral_mask & (1 << i))'
p12039
aS'\t\t\t\tbreak;'
p12040
asss(g7856
g10772
I250
tp12041
(dp12042
g27
(dp12043
(I281
I290
tp12044
(lp12045
S'\t\tif (info->peripheral_mask == DIAG_CON_ALL ||'
p12046
aS'\t\t\t(info->peripheral_mask & (1 << APPS_DATA)) ||'
p12047
aS'\t\t\t(info->peripheral_mask & (1 << PERIPHERAL_MODEM))) {'
p12048
aS'\t\t\trsp_ctxt = SET_BUF_CTXT(APPS_DATA, TYPE_CMD, 1);'
p12049
aS'\t\t} else {'
p12050
aS'\t\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p12051
aS'\t\t\t\tif (info->peripheral_mask & (1 << i))'
p12052
aS'\t\t\t\t\tbreak;'
p12053
aS'\t\t\t}'
p12054
aS'\t\trsp_ctxt = SET_BUF_CTXT(i, TYPE_CMD, 1);'
p12055
as(I292
I292
tp12056
(lp12057
S'\t * take one or two iterations. When this loops till UINT_MAX, it'
p12058
as(I251
I251
tp12059
(lp12060
S'\t\t\t\tstruct diag_md_session_t *info)'
p12061
as(I296
I296
tp12062
(lp12063
S'\twhile (retry_count < UINT_MAX) {'
p12064
as(I312
I312
tp12065
(lp12066
S'\t\t\t\tdriver->logging_mode == DIAG_MULTI_MODE)'
p12067
assg9
(I250
I342
tp12068
sg11
I3
sg12
g13
sg14
(dp12069
(I288
I288
tp12070
(lp12071
S'\tmutex_unlock(&driver->md_session_lock);'
p12072
as(I285
I285
tp12073
(lp12074
S'\t\trsp_ctxt = SET_BUF_CTXT(i, TYPE_CMD, TYPE_CMD);'
p12075
as(I270
I274
tp12076
(lp12077
S'\tmutex_lock(&driver->md_session_lock);'
p12078
aS'\tsession_info = diag_md_session_get_pid(pid);'
p12079
aS'\tinfo = (session_info) ? session_info :'
p12080
aS'\t\t\t\tdiag_md_session_get_peripheral(APPS_DATA);'
p12081
ag119
as(I312
I313
tp12082
(lp12083
S'\t\t\t\tdriver->logging_mode == DIAG_MULTI_MODE) {'
p12084
aS'\t\t\tmutex_lock(&driver->md_session_lock);'
p12085
as(I281
I283
tp12086
(lp12087
S'\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p12088
aS'\t\t\tif (info->peripheral_mask & (1 << i))'
p12089
aS'\t\t\t\tbreak;'
p12090
as(I296
I296
tp12091
(lp12092
S'\twhile (retry_count < RETRY_MAX_COUNT) {'
p12093
as(I292
I292
tp12094
(lp12095
S'\t * take one or two iterations. When this loops till RETRY_MAX_COUNT, it'
p12096
as(I315
I316
tp12097
(lp12098
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12099
aS'\t\t}'
p12100
as(I251
I251
tp12101
(lp12102
S'\t\t\t\tint pid)'
p12103
as(I259
I259
tp12104
(lp12105
S'\tstruct diag_md_session_t *session_info = NULL, *info = NULL;'
p12106
assssS'da65e2d8778e_sdm845-perf'
p12107
(dp12108
(g7598
g7649
I1559
tp12109
(dp12110
g27
(dp12111
(I1632
I1632
tp12112
(lp12113
S'\t\tif ((change_mask & session_info->peripheral_mask)'
p12114
as(I1603
I1603
tp12115
(lp12116
g119
as(I1626
I1626
tp12117
(lp12118
S'\t\tmutex_lock(&driver->md_session_lock);'
p12119
as(I1647
I1648
tp12120
(lp12121
S'\t\t\tdiag_md_session_close(session_info);'
p12122
ag119
as(I1660
I1660
tp12123
(lp12124
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12125
as(I1669
I1669
tp12126
(lp12127
S'\t\t\terr = diag_md_peripheral_switch(session_info,'
p12128
as(I1563
I1563
tp12129
(lp12130
S'\tint i, bit = 0, err = 0;'
p12131
as(I1657
I1657
tp12132
(lp12133
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p12134
as(I1614
I1614
tp12135
(lp12136
S'\t\tif (!change_mask)'
p12137
as(I1582
I1582
tp12138
(lp12139
S'\tif (req_mode != DIAG_USB_MODE && req_mode != DIAG_MEMORY_DEVICE_MODE)'
p12140
as(I1627
I1628
tp12141
(lp12142
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12143
ag119
as(I1586
I1588
tp12144
(lp12145
S'\tif (req_mode == DIAG_USB_MODE) {'
p12146
aS'\t\tif (curr_mode == DIAG_USB_MODE)'
p12147
aS'\t\t\treturn 0;'
p12148
as(I1643
I1645
tp12149
(lp12150
S'\t\tif (~change_mask & session_info->peripheral_mask) {'
p12151
aS'\t\t\terr = diag_md_peripheral_switch(session_info,'
p12152
aS'\t\t\t\t\tchange_mask, DIAG_USB_MODE);'
p12153
assg9
(I1559
I1697
tp12154
sg11
I4
sg12
g13
sg14
(dp12155
(I1632
I1633
tp12156
(lp12157
S'\t\tperipheral_mask = session_info->peripheral_mask;'
p12158
aS'\t\tif ((change_mask & peripheral_mask)'
p12159
as(I1669
I1673
tp12160
(lp12161
S'\t\t\tif (driver->pcie_transport_def == DIAG_ROUTE_TO_PCIE)'
p12162
aS'\t\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p12163
aS'\t\t\t\t\tchange_mask, DIAG_PCIE_MODE);'
p12164
aS'\t\t\telse'
p12165
aS'\t\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p12166
as(I1600
I1600
tp12167
(lp12168
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12169
as(I1563
I1563
tp12170
(lp12171
S'\tint i, bit = 0, err = 0, peripheral_mask = 0;'
p12172
as(I1685
I1691
tp12173
(lp12174
S'\t\t\tmutex_lock(&driver->hdlc_disable_mutex);'
p12175
aS'\t\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p12176
aS'\t\t\t\tif ((param->peripheral_mask > 0) &&'
p12177
aS'\t\t\t\t\t(param->peripheral_mask & (1 << i)))'
p12178
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] = 0;'
p12179
aS'\t\t\t}'
p12180
aS'\t\t\tmutex_unlock(&driver->hdlc_disable_mutex);'
p12181
as(I1658
I1658
tp12182
(lp12183
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p12184
as(I1575
I1575
tp12185
(lp12186
S'\tcase DIAG_PCIE_MODE:'
p12187
as(I1677
I1677
tp12188
(lp12189
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12190
as(I1637
I1637
tp12191
(lp12192
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12193
as(I1675
I1675
tp12194
(lp12195
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12196
as(I1582
I1583
tp12197
(lp12198
S'\tif (req_mode != DIAG_USB_MODE && req_mode != DIAG_MEMORY_DEVICE_MODE &&'
p12199
aS'\t\treq_mode != DIAG_PCIE_MODE)'
p12200
as(I1586
I1596
tp12201
(lp12202
S'\tif (curr_mode == req_mode)'
p12203
aS'\t\treturn 0;'
p12204
ag119
aS'\tif ((req_mode ==  DIAG_USB_MODE && curr_mode == DIAG_PCIE_MODE) ||'
p12205
aS'\t\t(req_mode == DIAG_PCIE_MODE && curr_mode == DIAG_USB_MODE)) {'
p12206
aS'\t\t*change_mode = 1;'
p12207
aS'\t\treturn 0;'
p12208
aS'\t} else if ((req_mode == DIAG_USB_MODE || req_mode == DIAG_PCIE_MODE)'
p12209
aS'\t\t&& (curr_mode == DIAG_MEMORY_DEVICE_MODE ||'
p12210
aS'\t\tcurr_mode == DIAG_MULTI_MODE)) {'
p12211
aS'\t\tmutex_lock(&driver->md_session_lock);'
p12212
as(I1666
I1666
tp12213
(lp12214
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p12215
as(I1614
I1615
tp12216
(lp12217
S'\t\tif (!change_mask) {'
p12218
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12219
as(I1643
I1645
tp12220
(lp12221
S'\t\tif (~change_mask & peripheral_mask) {'
p12222
aS'\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p12223
aS'\t\t\t\t\tchange_mask, req_mode);'
p12224
as(I1647
I1648
tp12225
(lp12226
S'\t\t\tdiag_md_session_close(current->tgid);'
p12227
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p12228
as(I1617
I1617
tp12229
(lp12230
S'\t\t}'
p12231
as(I1629
I1629
tp12232
(lp12233
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12234
assssS'a42d482efe49_sdm845-perf'
p12235
(dp12236
(g7598
g7599
I451
tp12237
(dp12238
g27
(dp12239
(I480
I481
tp12240
(lp12241
S'\tif (diag_mask_clear_param)'
p12242
aS'\t\tdiag_clear_masks(session_info);'
p12243
as(I461
I461
tp12244
(lp12245
S'\tif (!session_info)'
p12246
as(I514
I514
tp12247
(lp12248
g119
as(I494
I494
tp12249
(lp12250
S'\tparams.req_mode = USB_MODE;'
p12251
as(I487
I489
tp12252
(lp12253
S'\tsession_mask = session_info->peripheral_mask;'
p12254
aS'\tdiag_md_session_close(session_info);'
p12255
ag119
as(I483
I485
tp12256
(lp12257
S'\tmutex_lock(&driver->diag_maskclear_mutex);'
p12258
aS'\tdriver->mask_clear = 1;'
p12259
aS'\tmutex_unlock(&driver->diag_maskclear_mutex);'
p12260
assg9
(I451
I519
tp12261
sg11
I1
sg12
g13
sg14
(dp12262
(I480
I481
tp12263
(lp12264
S'\tsession_mask = session_info->peripheral_mask;'
p12265
aS'\tmutex_unlock(&driver->md_session_lock);'
p12266
as(I459
I459
tp12267
(lp12268
S'\tmutex_lock(&driver->md_session_lock);'
p12269
as(I494
I498
tp12270
(lp12271
S'\tif (driver->transport_set == DIAG_ROUTE_TO_PCIE)'
p12272
aS'\t\tparams.req_mode = PCIE_MODE;'
p12273
aS'\telse'
p12274
aS'\t\tparams.req_mode = USB_MODE;'
p12275
ag119
as(I461
I476
tp12276
(lp12277
S'\tif (!session_info) {'
p12278
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p12279
aS'\t\tmutex_lock(&driver->diagchar_mutex);'
p12280
aS'\t\tif (driver->pcie_switch_pid == pid) {'
p12281
aS'\t\t\tif (driver->pcie_transport_def =='
p12282
aS'\t\t\t\tDIAG_ROUTE_TO_PCIE)'
p12283
aS'\t\t\t\tparams.req_mode = PCIE_MODE;'
p12284
aS'\t\t\telse'
p12285
aS'\t\t\t\tparams.req_mode = USB_MODE;'
p12286
aS'\t\t\tparams.mode_param = 0;'
p12287
aS'\t\t\tparams.pd_mask = 0;'
p12288
aS'\t\t\tparams.peripheral_mask = DIAG_CON_ALL;'
p12289
aS'\t\t\tdiag_switch_logging(&params);'
p12290
aS'\t\t\tdriver->pcie_switch_pid = 0;'
p12291
aS'\t\t}'
p12292
aS'\t\tmutex_unlock(&driver->diagchar_mutex);'
p12293
as(I478
I478
tp12294
(lp12295
S'\t}'
p12296
as(I483
I484
tp12297
(lp12298
S'\tif (diag_mask_clear_param)'
p12299
aS'\t\tdiag_clear_masks(pid);'
p12300
as(I514
I516
tp12301
(lp12302
S'\tmutex_lock(&driver->md_session_lock);'
p12303
aS'\tdiag_md_session_close(pid);'
p12304
aS'\tmutex_unlock(&driver->md_session_lock);'
p12305
assssS'd21da4213c13_sdm845-perf'
p12306
(dp12307
(g7793
g10623
I1436
tp12308
(dp12309
g27
(dp12310
(I1437
I1438
tp12311
(lp12312
S'\t\t\t\t     unsigned char *dest_buf, int dest_len,'
p12313
aS'\t\t\t\t     struct diag_md_session_t *info)'
p12314
as(I1471
I1473
tp12315
(lp12316
S'\t\tmutex_lock(&mask->lock);'
p12317
aS'\t\tmemset(mask->ptr, 0, mask->range);'
p12318
aS'\t\tmutex_unlock(&mask->lock);'
p12319
as(I1497
I1497
tp12320
(lp12321
S'\t\tif (!diag_check_update(i))'
p12322
as(I1478
I1478
tp12323
(lp12324
S'\tif (diag_check_update(APPS_DATA))'
p12325
assg9
(I1436
I1509
tp12326
sg11
I5
sg12
g13
sg14
(dp12327
(I1478
I1479
tp12328
(lp12329
S'\tmutex_unlock(&driver->md_session_lock);'
p12330
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12331
as(I1467
I1467
tp12332
(lp12333
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12334
as(I1460
I1460
tp12335
(lp12336
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12337
as(I1497
I1497
tp12338
(lp12339
S'\t\tif (!diag_check_update(i, pid))'
p12340
as(I1443
I1446
tp12341
(lp12342
S'\tstruct diag_md_session_t *info = NULL;'
p12343
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p12344
aS'\tinfo = diag_md_session_get_pid(pid);'
p12345
as(I1454
I1454
tp12346
(lp12347
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12348
as(I1471
I1475
tp12349
(lp12350
S'\t\tif (mask && mask->ptr) {'
p12351
aS'\t\t\tmutex_lock(&mask->lock);'
p12352
aS'\t\t\tmemset(mask->ptr, 0, mask->range);'
p12353
aS'\t\t\tmutex_unlock(&mask->lock);'
p12354
aS'\t\t}'
p12355
as(I1437
I1437
tp12356
(lp12357
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p12358
asss(g7793
g8627
I1283
tp12359
(dp12360
g27
(dp12361
(I1422
I1422
tp12362
(lp12363
S'\t\tif (!diag_check_update(i))'
p12364
as(I1285
I1285
tp12365
(lp12366
S'\t\t\t\t struct diag_md_session_t *info)'
p12367
as(I1390
I1390
tp12368
(lp12369
S'\tif (diag_check_update(APPS_DATA))'
p12370
assg9
(I1283
I1434
tp12371
sg11
I5
sg12
g13
sg14
(dp12372
(I1309
I1309
tp12373
(lp12374
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12375
as(I1342
I1343
tp12376
(lp12377
S'\t\tif (!mask || !mask->ptr)'
p12378
aS'\t\t\tcontinue;'
p12379
as(I1422
I1422
tp12380
(lp12381
S'\t\tif (!diag_check_update(i, pid))'
p12382
as(I1315
I1315
tp12383
(lp12384
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12385
as(I1390
I1391
tp12386
(lp12387
S'\tmutex_unlock(&driver->md_session_lock);'
p12388
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12389
as(I1298
I1301
tp12390
(lp12391
S'\tstruct diag_md_session_t *info = NULL;'
p12392
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p12393
aS'\tinfo = diag_md_session_get_pid(pid);'
p12394
as(I1325
I1325
tp12395
(lp12396
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12397
as(I1285
I1285
tp12398
(lp12399
S'\t\t\t\t int pid)'
p12400
asss(g7793
g8722
I878
tp12401
(dp12402
g27
(dp12403
(I879
I880
tp12404
(lp12405
S'\t\t\t\t     unsigned char *dest_buf, int dest_len,'
p12406
aS'\t\t\t\t     struct diag_md_session_t *info)'
p12407
as(I934
I935
tp12408
(lp12409
g119
aS'\tif (diag_check_update(APPS_DATA))'
p12410
as(I953
I953
tp12411
(lp12412
S'\t\tif (!diag_check_update(i))'
p12413
as(I925
I928
tp12414
(lp12415
S'\t\tmutex_lock(&mask->lock);'
p12416
aS'\t\tmemset(mask->ptr, req->rt_mask,'
p12417
aS'\t\t       mask->range * sizeof(uint32_t));'
p12418
aS'\t\tmutex_unlock(&mask->lock);'
p12419
assg9
(I878
I965
tp12420
sg11
I5
sg12
g13
sg14
(dp12421
(I934
I935
tp12422
(lp12423
S'\tmutex_unlock(&driver->md_session_lock);'
p12424
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12425
as(I919
I919
tp12426
(lp12427
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12428
as(I953
I953
tp12429
(lp12430
S'\t\tif (!diag_check_update(i, pid))'
p12431
as(I904
I904
tp12432
(lp12433
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12434
as(I925
I930
tp12435
(lp12436
S'\t\tif (mask && mask->ptr) {'
p12437
aS'\t\t\tmutex_lock(&mask->lock);'
p12438
aS'\t\t\tmemset(mask->ptr, req->rt_mask,'
p12439
aS'\t\t\t       mask->range * sizeof(uint32_t));'
p12440
aS'\t\t\tmutex_unlock(&mask->lock);'
p12441
aS'\t\t}'
p12442
as(I887
I890
tp12443
(lp12444
S'\tstruct diag_md_session_t *info = NULL;'
p12445
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p12446
aS'\tinfo = diag_md_session_get_pid(pid);'
p12447
as(I898
I898
tp12448
(lp12449
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12450
as(I879
I879
tp12451
(lp12452
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p12453
assssS'c36d54c34fef_sdm845-perf'
p12454
(dp12455
(g7598
g7599
I445
tp12456
(dp12457
g27
(dp12458
(I484
I484
tp12459
(lp12460
S'\tparams.req_mode = USB_MODE;'
p12461
as(I470
I471
tp12462
(lp12463
S'\tif (diag_mask_clear_param)'
p12464
aS'\t\tdiag_clear_masks(session_info);'
p12465
as(I473
I475
tp12466
(lp12467
S'\tmutex_lock(&driver->diag_maskclear_mutex);'
p12468
aS'\tdriver->mask_clear = 1;'
p12469
aS'\tmutex_unlock(&driver->diag_maskclear_mutex);'
p12470
as(I477
I479
tp12471
(lp12472
S'\tsession_mask = session_info->peripheral_mask;'
p12473
aS'\tdiag_md_session_close(session_info);'
p12474
ag119
as(I455
I455
tp12475
(lp12476
S'\tif (!session_info)'
p12477
as(I504
I504
tp12478
(lp12479
g119
assg9
(I445
I509
tp12480
sg11
I1
sg12
g13
sg14
(dp12481
(I470
I471
tp12482
(lp12483
S'\tsession_mask = session_info->peripheral_mask;'
p12484
aS'\tmutex_unlock(&driver->md_session_lock);'
p12485
as(I453
I453
tp12486
(lp12487
S'\tmutex_lock(&driver->md_session_lock);'
p12488
as(I484
I488
tp12489
(lp12490
S'\tif (driver->transport_set == DIAG_ROUTE_TO_PCIE)'
p12491
aS'\t\tparams.req_mode = PCIE_MODE;'
p12492
aS'\telse'
p12493
aS'\t\tparams.req_mode = USB_MODE;'
p12494
ag119
as(I468
I468
tp12495
(lp12496
S'\t}'
p12497
as(I504
I506
tp12498
(lp12499
S'\tmutex_lock(&driver->md_session_lock);'
p12500
aS'\tdiag_md_session_close(pid);'
p12501
aS'\tmutex_unlock(&driver->md_session_lock);'
p12502
as(I455
I466
tp12503
(lp12504
S'\tif (!session_info) {'
p12505
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p12506
aS'\t\tif (driver->pcie_transport_def == DIAG_ROUTE_TO_PCIE)'
p12507
aS'\t\t\tparams.req_mode = PCIE_MODE;'
p12508
aS'\t\telse'
p12509
aS'\t\t\tparams.req_mode = USB_MODE;'
p12510
aS'\t\tparams.mode_param = 0;'
p12511
aS'\t\tparams.pd_mask = 0;'
p12512
aS'\t\tparams.peripheral_mask = DIAG_CON_ALL;'
p12513
aS'\t\tmutex_lock(&driver->diagchar_mutex);'
p12514
aS'\t\tdiag_switch_logging(&params);'
p12515
aS'\t\tmutex_unlock(&driver->diagchar_mutex);'
p12516
as(I473
I474
tp12517
(lp12518
S'\tif (diag_mask_clear_param)'
p12519
aS'\t\tdiag_clear_masks(pid);'
p12520
asss(g7598
g7649
I1543
tp12521
(dp12522
g27
(dp12523
(I1652
I1652
tp12524
(lp12525
S'\t\t\terr = diag_md_peripheral_switch(session_info,'
p12526
as(I1610
I1611
tp12527
(lp12528
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12529
ag119
as(I1597
I1597
tp12530
(lp12531
S'\t\tif (!change_mask)'
p12532
as(I1609
I1609
tp12533
(lp12534
S'\t\tmutex_lock(&driver->md_session_lock);'
p12535
as(I1566
I1566
tp12536
(lp12537
S'\tif (req_mode != DIAG_USB_MODE && req_mode != DIAG_MEMORY_DEVICE_MODE)'
p12538
as(I1547
I1547
tp12539
(lp12540
S'\tint i, bit = 0, err = 0;'
p12541
as(I1626
I1628
tp12542
(lp12543
S'\t\tif (~change_mask & session_info->peripheral_mask) {'
p12544
aS'\t\t\terr = diag_md_peripheral_switch(session_info,'
p12545
aS'\t\t\t\t\tchange_mask, DIAG_USB_MODE);'
p12546
as(I1570
I1572
tp12547
(lp12548
S'\tif (req_mode == DIAG_USB_MODE) {'
p12549
aS'\t\tif (curr_mode == DIAG_USB_MODE)'
p12550
aS'\t\t\treturn 0;'
p12551
as(I1640
I1640
tp12552
(lp12553
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p12554
as(I1630
I1631
tp12555
(lp12556
S'\t\t\tdiag_md_session_close(session_info);'
p12557
ag119
as(I1586
I1586
tp12558
(lp12559
g119
as(I1615
I1615
tp12560
(lp12561
S'\t\tif ((change_mask & session_info->peripheral_mask)'
p12562
as(I1643
I1643
tp12563
(lp12564
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12565
assg9
(I1543
I1680
tp12566
sg11
I4
sg12
g13
sg14
(dp12567
(I1668
I1674
tp12568
(lp12569
S'\t\t\tmutex_lock(&driver->hdlc_disable_mutex);'
p12570
aS'\t\t\tfor (i = 0; i < NUM_MD_SESSIONS; i++) {'
p12571
aS'\t\t\t\tif ((param->peripheral_mask > 0) &&'
p12572
aS'\t\t\t\t\t(param->peripheral_mask & (1 << i)))'
p12573
aS'\t\t\t\t\tdriver->p_hdlc_disabled[i] = 0;'
p12574
aS'\t\t\t}'
p12575
aS'\t\t\tmutex_unlock(&driver->hdlc_disable_mutex);'
p12576
as(I1600
I1600
tp12577
(lp12578
S'\t\t}'
p12579
as(I1620
I1620
tp12580
(lp12581
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12582
as(I1547
I1547
tp12583
(lp12584
S'\tint i, bit = 0, err = 0, peripheral_mask = 0;'
p12585
as(I1658
I1658
tp12586
(lp12587
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12588
as(I1597
I1598
tp12589
(lp12590
S'\t\tif (!change_mask) {'
p12591
aS'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12592
as(I1612
I1612
tp12593
(lp12594
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12595
as(I1570
I1579
tp12596
(lp12597
S'\tif (curr_mode == req_mode)'
p12598
aS'\t\treturn 0;'
p12599
ag119
aS'\tif ((req_mode ==  DIAG_USB_MODE && curr_mode == DIAG_PCIE_MODE) ||'
p12600
aS'\t\t(req_mode == DIAG_PCIE_MODE && curr_mode == DIAG_USB_MODE)) {'
p12601
aS'\t\t*change_mode = 1;'
p12602
aS'\t\treturn 0;'
p12603
aS'\t} else if ((req_mode == DIAG_USB_MODE || req_mode == DIAG_PCIE_MODE)'
p12604
aS'\t\t&& curr_mode == DIAG_MEMORY_DEVICE_MODE) {'
p12605
aS'\t\tmutex_lock(&driver->md_session_lock);'
p12606
as(I1626
I1628
tp12607
(lp12608
S'\t\tif (~change_mask & peripheral_mask) {'
p12609
aS'\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p12610
aS'\t\t\t\t\tchange_mask, req_mode);'
p12611
as(I1583
I1583
tp12612
(lp12613
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12614
as(I1641
I1641
tp12615
(lp12616
S'\t\tchange_mask = driver->md_session_mask & param->peripheral_mask;'
p12617
as(I1566
I1567
tp12618
(lp12619
S'\tif (req_mode != DIAG_USB_MODE && req_mode != DIAG_MEMORY_DEVICE_MODE &&'
p12620
aS'\t\treq_mode != DIAG_PCIE_MODE)'
p12621
as(I1660
I1660
tp12622
(lp12623
S'\t\t\tmutex_unlock(&driver->md_session_lock);'
p12624
as(I1630
I1631
tp12625
(lp12626
S'\t\t\tdiag_md_session_close(current->tgid);'
p12627
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p12628
as(I1559
I1559
tp12629
(lp12630
S'\tcase DIAG_PCIE_MODE:'
p12631
as(I1615
I1616
tp12632
(lp12633
S'\t\tperipheral_mask = session_info->peripheral_mask;'
p12634
aS'\t\tif ((change_mask & peripheral_mask)'
p12635
as(I1649
I1649
tp12636
(lp12637
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p12638
as(I1652
I1656
tp12639
(lp12640
S'\t\t\tif (driver->pcie_transport_def == DIAG_ROUTE_TO_PCIE)'
p12641
aS'\t\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p12642
aS'\t\t\t\t\tchange_mask, DIAG_PCIE_MODE);'
p12643
aS'\t\t\telse'
p12644
aS'\t\t\t\terr = diag_md_peripheral_switch(current->tgid,'
p12645
assssS'c287f849c93a_sdm845-perf'
p12646
(dp12647
(g7793
g8910
I1074
tp12648
(dp12649
g27
(dp12650
(I1124
I1124
tp12651
(lp12652
S'\t\tif (!diag_check_update(i))'
p12653
as(I1075
I1076
tp12654
(lp12655
S'\t\t\t\t  unsigned char *dest_buf, int dest_len,'
p12656
aS'\t\t\t\t  struct diag_md_session_t *info)'
p12657
as(I1111
I1111
tp12658
(lp12659
S'\tif (diag_check_update(APPS_DATA))'
p12660
assg9
(I1074
I1138
tp12661
sg11
I5
sg12
g13
sg14
(dp12662
(I1075
I1075
tp12663
(lp12664
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p12665
as(I1083
I1084
tp12666
(lp12667
S'\tmutex_lock(&driver->md_session_lock);'
p12668
aS'\tinfo = diag_md_session_get_pid(pid);'
p12669
as(I1124
I1124
tp12670
(lp12671
S'\t\tif (!diag_check_update(i, pid))'
p12672
as(I1097
I1097
tp12673
(lp12674
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12675
as(I1081
I1081
tp12676
(lp12677
S'\tstruct diag_md_session_t *info = NULL;'
p12678
as(I1111
I1112
tp12679
(lp12680
S'\tmutex_unlock(&driver->md_session_lock);'
p12681
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12682
as(I1091
I1091
tp12683
(lp12684
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12685
asss(g7793
g8722
I878
tp12686
(dp12687
g27
(dp12688
(I932
I933
tp12689
(lp12690
g119
aS'\tif (diag_check_update(APPS_DATA))'
p12691
as(I879
I880
tp12692
(lp12693
S'\t\t\t\t     unsigned char *dest_buf, int dest_len,'
p12694
aS'\t\t\t\t     struct diag_md_session_t *info)'
p12695
as(I951
I951
tp12696
(lp12697
S'\t\tif (!diag_check_update(i))'
p12698
assg9
(I878
I963
tp12699
sg11
I5
sg12
g13
sg14
(dp12700
(I932
I933
tp12701
(lp12702
S'\tmutex_unlock(&driver->md_session_lock);'
p12703
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12704
as(I919
I919
tp12705
(lp12706
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12707
as(I951
I951
tp12708
(lp12709
S'\t\tif (!diag_check_update(i, pid))'
p12710
as(I904
I904
tp12711
(lp12712
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12713
as(I887
I890
tp12714
(lp12715
S'\tstruct diag_md_session_t *info = NULL;'
p12716
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p12717
aS'\tinfo = diag_md_session_get_pid(pid);'
p12718
as(I898
I898
tp12719
(lp12720
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12721
as(I879
I879
tp12722
(lp12723
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p12724
asss(g7793
g8627
I1281
tp12725
(dp12726
g27
(dp12727
(I1418
I1418
tp12728
(lp12729
S'\t\tif (!diag_check_update(i))'
p12730
as(I1283
I1283
tp12731
(lp12732
S'\t\t\t\t struct diag_md_session_t *info)'
p12733
as(I1386
I1386
tp12734
(lp12735
S'\tif (diag_check_update(APPS_DATA))'
p12736
assg9
(I1281
I1430
tp12737
sg11
I5
sg12
g13
sg14
(dp12738
(I1386
I1387
tp12739
(lp12740
S'\tmutex_unlock(&driver->md_session_lock);'
p12741
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12742
as(I1283
I1283
tp12743
(lp12744
S'\t\t\t\t int pid)'
p12745
as(I1418
I1418
tp12746
(lp12747
S'\t\tif (!diag_check_update(i, pid))'
p12748
as(I1323
I1323
tp12749
(lp12750
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12751
as(I1296
I1299
tp12752
(lp12753
S'\tstruct diag_md_session_t *info = NULL;'
p12754
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p12755
aS'\tinfo = diag_md_session_get_pid(pid);'
p12756
as(I1313
I1313
tp12757
(lp12758
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12759
as(I1307
I1307
tp12760
(lp12761
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12762
asss(g7793
g9109
I732
tp12763
(dp12764
g27
(dp12765
(I733
I734
tp12766
(lp12767
S'\t\t\t\t unsigned char *dest_buf, int dest_len,'
p12768
aS'\t\t\t\t struct diag_md_session_t *info)'
p12769
as(I863
I863
tp12770
(lp12771
S'\t\tif (!diag_check_update(i))'
p12772
as(I838
I838
tp12773
(lp12774
S'\tif (diag_check_update(APPS_DATA))'
p12775
assg9
(I732
I876
tp12776
sg11
I5
sg12
g13
sg14
(dp12777
(I838
I839
tp12778
(lp12779
S'\tmutex_unlock(&driver->md_session_lock);'
p12780
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12781
as(I755
I755
tp12782
(lp12783
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12784
as(I774
I774
tp12785
(lp12786
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12787
as(I744
I747
tp12788
(lp12789
S'\tstruct diag_md_session_t *info = NULL;'
p12790
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p12791
aS'\tinfo = diag_md_session_get_pid(pid);'
p12792
as(I761
I761
tp12793
(lp12794
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12795
as(I817
I817
tp12796
(lp12797
S'\t\t\t\tmutex_unlock(&driver->md_session_lock);'
p12798
as(I863
I863
tp12799
(lp12800
S'\t\tif (!diag_check_update(i, pid))'
p12801
as(I733
I733
tp12802
(lp12803
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p12804
asss(g7793
g10623
I1432
tp12805
(dp12806
g27
(dp12807
(I1433
I1434
tp12808
(lp12809
S'\t\t\t\t     unsigned char *dest_buf, int dest_len,'
p12810
aS'\t\t\t\t     struct diag_md_session_t *info)'
p12811
as(I1472
I1472
tp12812
(lp12813
S'\tif (diag_check_update(APPS_DATA))'
p12814
as(I1491
I1491
tp12815
(lp12816
S'\t\tif (!diag_check_update(i))'
p12817
assg9
(I1432
I1503
tp12818
sg11
I5
sg12
g13
sg14
(dp12819
(I1472
I1473
tp12820
(lp12821
S'\tmutex_unlock(&driver->md_session_lock);'
p12822
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12823
as(I1456
I1456
tp12824
(lp12825
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12826
as(I1491
I1491
tp12827
(lp12828
S'\t\tif (!diag_check_update(i, pid))'
p12829
as(I1450
I1450
tp12830
(lp12831
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12832
as(I1463
I1463
tp12833
(lp12834
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12835
as(I1433
I1433
tp12836
(lp12837
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p12838
as(I1439
I1442
tp12839
(lp12840
S'\tstruct diag_md_session_t *info = NULL;'
p12841
ag119
aS'\tmutex_lock(&driver->md_session_lock);'
p12842
aS'\tinfo = diag_md_session_get_pid(pid);'
p12843
asss(g7598
g7599
I442
tp12844
(dp12845
g27
(dp12846
(I452
I452
tp12847
(lp12848
S'\tif (!session_info)'
p12849
as(I486
I486
tp12850
(lp12851
g119
as(I463
I465
tp12852
(lp12853
S'\tsession_mask = session_info->peripheral_mask;'
p12854
aS'\tdiag_md_session_close(session_info);'
p12855
ag119
as(I460
I464
tp12856
(lp12857
S'\t\tdiag_clear_masks(session_info);'
p12858
ag119
aS'\tmutex_lock(&driver->diag_maskclear_mutex);'
p12859
aS'\tdriver->mask_clear = 1;'
p12860
aS'\tmutex_unlock(&driver->diag_maskclear_mutex);'
p12861
assg9
(I442
I491
tp12862
sg11
I1
sg12
g13
sg14
(dp12863
(I452
I453
tp12864
(lp12865
S'\tif (!session_info) {'
p12866
aS'\t\tmutex_unlock(&driver->md_session_lock);'
p12867
as(I450
I450
tp12868
(lp12869
S'\tmutex_lock(&driver->md_session_lock);'
p12870
as(I460
I460
tp12871
(lp12872
S'\t\tdiag_clear_masks(pid);'
p12873
as(I486
I488
tp12874
(lp12875
S'\tmutex_lock(&driver->md_session_lock);'
p12876
aS'\tdiag_md_session_close(pid);'
p12877
aS'\tmutex_unlock(&driver->md_session_lock);'
p12878
as(I455
I457
tp12879
(lp12880
S'\t}'
p12881
aS'\tsession_mask = session_info->peripheral_mask;'
p12882
aS'\tmutex_unlock(&driver->md_session_lock);'
p12883
asss(g7793
g8990
I1000
tp12884
(dp12885
g27
(dp12886
(I1001
I1002
tp12887
(lp12888
S'\t\t\t\t      unsigned char *dest_buf, int dest_len,'
p12889
aS'\t\t\t\t      struct diag_md_session_t *info)'
p12890
as(I1040
I1040
tp12891
(lp12892
S'\tif (diag_check_update(APPS_DATA))'
p12893
as(I1060
I1060
tp12894
(lp12895
S'\t\tif (!diag_check_update(i))'
p12896
assg9
(I1000
I1072
tp12897
sg11
I5
sg12
g13
sg14
(dp12898
(I1040
I1041
tp12899
(lp12900
S'\tmutex_unlock(&driver->md_session_lock);'
p12901
aS'\tif (diag_check_update(APPS_DATA, pid))'
p12902
as(I1008
I1008
tp12903
(lp12904
S'\tstruct diag_md_session_t *info = NULL;'
p12905
as(I1018
I1018
tp12906
(lp12907
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12908
as(I1060
I1060
tp12909
(lp12910
S'\t\tif (!diag_check_update(i, pid))'
p12911
as(I1001
I1001
tp12912
(lp12913
S'\t\t\tunsigned char *dest_buf, int dest_len, int pid)'
p12914
as(I1032
I1032
tp12915
(lp12916
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12917
as(I1024
I1024
tp12918
(lp12919
S'\t\tmutex_unlock(&driver->md_session_lock);'
p12920
as(I1010
I1011
tp12921
(lp12922
S'\tmutex_lock(&driver->md_session_lock);'
p12923
aS'\tinfo = diag_md_session_get_pid(pid);'
p12924
asssssS'CVE-2019-10529'
p12925
(dp12926
S'a77c16d4981b_sdm845-perf'
p12927
(dp12928
(S'drivers/gpu/msm/kgsl.c'
p12929
S'kgsl_mem_entry_destroy'
p12930
I289
tp12931
(dp12932
g27
(dp12933
(I330
I330
tp12934
(lp12935
S'\t\t\t\tset_page_dirty(nth_page(page, j));'
p12936
assg9
(I289
I345
tp12937
sg11
I1
sg12
g13
sg14
(dp12938
(I330
I330
tp12939
(lp12940
S'\t\t\t\tset_page_dirty_lock(nth_page(page, j));'
p12941
asssssS'CVE-2019-10614'
p12942
(dp12943
S'da65e2d8778e_sdm845-perf'
p12944
(dp12945
(S'drivers/media/platform/msm/vidc/hfi_response_handler.c'
p12946
S'hfi_process_sess_evt_seq_changed'
p12947
I116
tp12948
(dp12949
g27
(dp12950
(I138
I138
tp12951
(lp12952
S'\t}'
p12953
as(I129
I129
tp12954
(lp12955
S'\tu32 entropy_mode = 0;'
p12956
as(I121
I121
tp12957
(lp12958
S'\tint num_properties_changed;'
p12959
as(I135
I137
tp12960
(lp12961
S'\tif (sizeof(struct hfi_msg_event_notify_packet) > pkt->size) {'
p12962
aS'\t\tdprintk(VIDC_ERR,'
p12963
aS'\t\t\t\t"hal_process_session_init_done: bad_pkt_size\\n");'
p12964
as(I266
I266
tp12965
(lp12966
S'\t\t\t\t\tsizeof(struct hfi_pic_struct);'
p12967
assg9
(I116
I356
tp12968
sg11
I3
sg12
g13
sg14
(dp12969
(I266
I267
tp12970
(lp12971
S'\t\t\t\t\tsizeof(struct hfi_dpb_counts);'
p12972
aS'\t\t\t\trem_size -= sizeof(struct hfi_dpb_counts);'
p12973
as(I179
I179
tp12974
(lp12975
S'\t\t\t\trem_size -= sizeof(struct hfi_frame_size);'
p12976
as(I121
I121
tp12977
(lp12978
S'\tu32 num_properties_changed;'
p12979
as(I298
I300
tp12980
(lp12981
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(struct'
p12982
aS'\t\t\t\t\thfi_buffer_requirements)))'
p12983
aS'\t\t\t\t\treturn -E2BIG;'
p12984
as(I158
I159
tp12985
(lp12986
S'\t\trem_size = pkt->size - sizeof(struct'
p12987
aS'\t\t\t\thfi_msg_event_notify_packet) + sizeof(u32);'
p12988
as(I167
I169
tp12989
(lp12990
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(struct'
p12991
aS'\t\t\t\t\thfi_frame_size)))'
p12992
aS'\t\t\t\t\treturn -E2BIG;'
p12993
as(I195
I195
tp12994
(lp12995
S'\t\t\t\trem_size -= sizeof(struct hfi_profile_level);'
p12996
as(I234
I236
tp12997
(lp12998
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(struct'
p12999
aS'\t\t\t\t\thfi_pic_struct)))'
p13000
aS'\t\t\t\t\treturn -E2BIG;'
p13001
as(I283
I283
tp13002
(lp13003
S'\t\t\t\trem_size -= sizeof(struct hfi_colour_space);'
p13004
as(I312
I313
tp13005
(lp13006
S'\t\t\t\trem_size -='
p13007
aS'\t\t\t\t\tsizeof(struct hfi_buffer_requirements);'
p13008
as(I129
I129
tp13009
(lp13010
S'\tu32 rem_size, entropy_mode = 0;'
p13011
as(I182
I184
tp13012
(lp13013
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(struct'
p13014
aS'\t\t\t\t\thfi_profile_level)))'
p13015
aS'\t\t\t\t\treturn -E2BIG;'
p13016
as(I295
I295
tp13017
(lp13018
S'\t\t\t\trem_size -= sizeof(u32);'
p13019
as(I231
I231
tp13020
(lp13021
S'\t\t\t\trem_size -= sizeof(struct hfi_bit_depth);'
p13022
as(I249
I251
tp13023
(lp13024
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(struct'
p13025
aS'\t\t\t\t\thfi_dpb_counts)))'
p13026
aS'\t\t\t\t\treturn -E2BIG;'
p13027
as(I270
I272
tp13028
(lp13029
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(struct'
p13030
aS'\t\t\t\t\thfi_colour_space)))'
p13031
aS'\t\t\t\t\treturn -E2BIG;'
p13032
as(I339
I340
tp13033
(lp13034
S'\t\t\t\trem_size -= sizeof(struct'
p13035
aS'\t\t\t\t\thfi_index_extradata_input_crop_payload);'
p13036
as(I198
I200
tp13037
(lp13038
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(struct'
p13039
aS'\t\t\t\t\thfi_bit_depth)))'
p13040
aS'\t\t\t\t\treturn -E2BIG;'
p13041
as(I161
I162
tp13042
(lp13043
S'\t\t\tif (!validate_pkt_size(rem_size, sizeof(u32)))'
p13044
aS'\t\t\t\treturn -E2BIG;'
p13045
as(I316
I318
tp13046
(lp13047
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(struct'
p13048
aS'\t\t\t\t     hfi_index_extradata_input_crop_payload)))'
p13049
aS'\t\t\t\t\treturn -E2BIG;'
p13050
as(I246
I246
tp13051
(lp13052
S'\t\t\t\trem_size -= sizeof(struct hfi_pic_struct);'
p13053
as(I164
I164
tp13054
(lp13055
S'\t\t\trem_size -= sizeof(u32);'
p13056
as(I286
I287
tp13057
(lp13058
S'\t\t\t\tif (!validate_pkt_size(rem_size, sizeof(u32)))'
p13059
aS'\t\t\t\t\treturn -E2BIG;'
p13060
as(I135
I136
tp13061
(lp13062
S'\tif (!validate_pkt_size(pkt->size,'
p13063
aS'\t\t\t       sizeof(struct hfi_msg_event_notify_packet)))'
p13064
asss(g12946
S'hfi_process_sys_init_done_prop_read'
p13065
I1228
tp13066
(dp13067
g27
(dp13068
(I1233
I1233
tp13069
(lp13070
S'\tu32 rem_bytes, bytes_read, num_properties;'
p13071
as(I1274
I1274
tp13072
(lp13073
S'\tbytes_read = hfi_fill_codec_info(data_ptr, sys_init_done);'
p13074
assg9
(I1228
I1292
tp13075
sg11
I2
sg12
g13
sg14
(dp13076
(I1233
I1234
tp13077
(lp13078
S'\tint bytes_read;'
p13079
aS'\tu32 rem_bytes, num_properties;'
p13080
as(I1242
I1246
tp13081
(lp13082
S'\tif (pkt->size < sizeof(struct hfi_msg_sys_init_done_packet)) {'
p13083
aS'\t\tdprintk(VIDC_ERR, "%s: bad_packet_size: %d\\n",'
p13084
aS'\t\t\t__func__, pkt->size);'
p13085
aS'\t\treturn VIDC_ERR_FAIL;'
p13086
aS'\t}'
p13087
as(I1274
I1276
tp13088
(lp13089
S'\tbytes_read = hfi_fill_codec_info(data_ptr, sys_init_done, rem_bytes);'
p13090
aS'\tif (bytes_read < 0)'
p13091
aS'\t\treturn VIDC_ERR_FAIL;'
p13092
asss(g12946
S'hfi_fill_codec_info'
p13093
I799
tp13094
(dp13095
g27
(dp13096
(I800
I800
tp13097
(lp13098
S'\t\tstruct vidc_hal_sys_init_done *sys_init_done) {'
p13099
as(I866
I867
tp13100
(lp13101
S'\t\tstruct hfi_max_sessions_supported *prop ='
p13102
aS'\t\t\t(struct hfi_max_sessions_supported *)'
p13103
assg9
(I799
I882
tp13104
sg11
I3
sg12
g13
sg14
(dp13105
(I866
I871
tp13106
(lp13107
S'\t\tstruct hfi_max_sessions_supported *prop;'
p13108
ag119
aS'\t\tif (!validate_pkt_size(rem_size - sizeof(u32), sizeof(struct'
p13109
aS'\t\t\t\thfi_max_sessions_supported)))'
p13110
aS'\t\t\treturn -E2BIG;'
p13111
aS'\t\tprop = (struct hfi_max_sessions_supported *)'
p13112
as(I800
I800
tp13113
(lp13114
S'\t\tstruct vidc_hal_sys_init_done *sys_init_done, u32 rem_size) {'
p13115
as(I820
I821
tp13116
(lp13117
S'\t\trem_size -='
p13118
aS'\t\t\tsizeof(struct hfi_codec_supported) + sizeof(u32);'
p13119
as(I810
I812
tp13120
(lp13121
S'\t\tif (!validate_pkt_size(rem_size - sizeof(u32),'
p13122
aS'\t\t\t\t       sizeof(struct hfi_codec_supported)))'
p13123
aS'\t\t\treturn -E2BIG;'
p13124
as(I876
I877
tp13125
(lp13126
S'\t\trem_size -='
p13127
aS'\t\t\tsizeof(struct hfi_max_sessions_supported) + sizeof(u32);'
p13128
as(I862
I863
tp13129
(lp13130
S'\tif (!validate_pkt_size(rem_size, sizeof(u32)))'
p13131
aS'\t\treturn -E2BIG;'
p13132
asssssS'CVE-2019-2323'
p13133
(dp13134
S'de6abb23dc05_sdm845-perf'
p13135
(dp13136
(S'drivers/crypto/msm/ice.c'
p13137
S'qcom_ice_setup_ice_hw'
p13138
I1792
tp13139
(dp13140
g27
(dp13141
(I1801
I1801
tp13142
(lp13143
S'\tif (!ice_dev)'
p13144
assg9
(I1792
I1808
tp13145
sg11
I2
sg12
g13
sg14
(dp13146
(I1801
I1801
tp13147
(lp13148
S'\tif (!ice_dev || (ice_dev->is_ice_enabled == false))'
p13149
asssssS'CVE-2019-14055'
p13150
(dp13151
S'c36d54c34fef_sdm845-perf'
p13152
(dp13153
(S'drivers/char/diag/diag_masks.c'
p13154
S'__diag_mask_init'
p13155
I1756
tp13156
(dp13157
g9
(I1756
I1781
tp13158
sg11
I3
sg12
g13
sg14
(dp13159
(I1775
I1775
tp13160
(lp13161
S'\t\t\tmask_info->ptr = NULL;'
p13162
asssssS'CVE-2019-11599'
p13163
(dp13164
S'7bb76790999d_sdm845-perf'
p13165
(dp13166
(S'mm/mmap.c'
p13167
S'find_extend_vma'
p13168
I2555
tp13169
(dp13170
g27
(dp13171
(I2563
I2563
tp13172
(lp13173
S'\tif (!prev || expand_stack(prev, addr))'
p13174
assg9
(I2555
I2569
tp13175
sg11
I2
sg12
g13
sg14
(dp13176
(I2563
I2564
tp13177
(lp13178
S"\t/* don't alter vm_end if the coredump is running */"
p13179
aS'\tif (!prev || !mmget_still_valid(mm) || expand_stack(prev, addr))'
p13180
asss(S'fs/proc/task_mmu.c'
p13181
S'clear_refs_write'
p13182
I1143
tp13183
(dp13184
g9
(I1143
I1247
tp13185
sg11
I4
sg12
g13
sg14
(dp13186
(I1206
I1223
tp13187
(lp13188
S'\t\t\t\t/*'
p13189
aS'\t\t\t\t * Avoid to modify vma->vm_flags'
p13190
aS'\t\t\t\t * without locked ops while the'
p13191
aS'\t\t\t\t * coredump reads the vm_flags.'
p13192
aS'\t\t\t\t */'
p13193
aS'\t\t\t\tif (!mmget_still_valid(mm)) {'
p13194
aS'\t\t\t\t\t/*'
p13195
aS'\t\t\t\t\t * Silently return "count"'
p13196
aS'\t\t\t\t\t * like if get_task_mm()'
p13197
aS'\t\t\t\t\t * failed. FIXME: should this'
p13198
aS'\t\t\t\t\t * function have returned'
p13199
aS'\t\t\t\t\t * -ESRCH if get_task_mm()'
p13200
aS'\t\t\t\t\t * failed like if'
p13201
aS'\t\t\t\t\t * get_proc_task() fails?'
p13202
aS'\t\t\t\t\t */'
p13203
aS'\t\t\t\t\tup_write(&mm->mmap_sem);'
p13204
aS'\t\t\t\t\tgoto out_mm;'
p13205
aS'\t\t\t\t}'
p13206
asssssS'CVE-2019-10538'
p13207
(dp13208
S'0c755962c9cc_sdm845-perf'
p13209
(dp13210
(S'drivers/soc/qcom/icnss.c'
p13211
S'wlfw_msa_mem_info_send_sync_msg'
p13212
I1345
tp13213
(dp13214
g9
(I1345
I1436
tp13215
sg11
I1
sg12
g13
sg14
(dp13216
(I1403
I1415
tp13217
(lp13218
g119
aS'\t\tif (resp.mem_region_info[i].size > penv->msa_mem_size ||'
p13219
aS'\t\t    resp.mem_region_info[i].region_addr >= max_mapped_addr ||'
p13220
aS'\t\t    resp.mem_region_info[i].region_addr < penv->msa_pa ||'
p13221
aS'\t\t    resp.mem_region_info[i].size +'
p13222
aS'\t\t    resp.mem_region_info[i].region_addr > max_mapped_addr) {'
p13223
aS'\t\t\ticnss_pr_dbg("Received out of range Addr: 0x%llx Size: 0x%x\\n",'
p13224
aS'\t\t\t\t\tresp.mem_region_info[i].region_addr,'
p13225
aS'\t\t\t\t\tresp.mem_region_info[i].size);'
p13226
aS'\t\t\tret = -EINVAL;'
p13227
aS'\t\t\tgoto fail_unwind;'
p13228
aS'\t\t}'
p13229
ag119
as(I1352
I1352
tp13230
(lp13231
S'\tuint64_t max_mapped_addr;'
p13232
as(I1430
I1431
tp13233
(lp13234
S'fail_unwind:'
p13235
aS'\tmemset(&penv->mem_region[0], 0, sizeof(penv->mem_region[0]) * i);'
p13236
as(I1399
I1399
tp13237
(lp13238
S'\tmax_mapped_addr = penv->msa_pa + penv->msa_mem_size;'
p13239
assssS'a77c16d4981b_sdm845-perf'
p13240
(dp13241
(g13211
g13212
I1334
tp13242
(dp13243
g9
(I1334
I1425
tp13244
sg11
I1
sg12
g13
sg14
(dp13245
(I1388
I1388
tp13246
(lp13247
S'\tmax_mapped_addr = penv->msa_pa + penv->msa_mem_size;'
p13248
as(I1419
I1420
tp13249
(lp13250
S'fail_unwind:'
p13251
aS'\tmemset(&penv->mem_region[0], 0, sizeof(penv->mem_region[0]) * i);'
p13252
as(I1341
I1341
tp13253
(lp13254
S'\tuint64_t max_mapped_addr;'
p13255
as(I1392
I1404
tp13256
(lp13257
g119
aS'\t\tif (resp.mem_region_info[i].size > penv->msa_mem_size ||'
p13258
aS'\t\t    resp.mem_region_info[i].region_addr > max_mapped_addr ||'
p13259
aS'\t\t    resp.mem_region_info[i].region_addr < penv->msa_pa ||'
p13260
aS'\t\t    resp.mem_region_info[i].size +'
p13261
aS'\t\t    resp.mem_region_info[i].region_addr > max_mapped_addr) {'
p13262
aS'\t\t\ticnss_pr_dbg("Received out of range Addr: 0x%llx Size: 0x%x\\n",'
p13263
aS'\t\t\t\t\tresp.mem_region_info[i].region_addr,'
p13264
aS'\t\t\t\t\tresp.mem_region_info[i].size);'
p13265
aS'\t\t\tret = -EINVAL;'
p13266
aS'\t\t\tgoto fail_unwind;'
p13267
aS'\t\t}'
p13268
ag119
asssssS'CVE-2019-10530'
p13269
(dp13270
S'de6abb23dc05_sdm845-perf'
p13271
(dp13272
(S'drivers/iommu/dma-mapping-fast.c'
p13273
S'fast_smmu_alloc'
p13274
I538
tp13275
(dp13276
g27
(dp13277
(I549
I549
tp13278
(lp13279
S'\tunsigned int count = ALIGN(size, SZ_4K) >> PAGE_SHIFT;'
p13280
assg9
(I538
I645
tp13281
sg11
I5
sg12
g13
sg14
(dp13282
(I555
I564
tp13283
(lp13284
S'\t/*'
p13285
aS'\t * sg_alloc_table_from_pages accepts unsigned int value for count'
p13286
aS"\t * so check count doesn't exceed UINT_MAX."
p13287
aS'\t */'
p13288
ag119
aS'\tif (count > UINT_MAX) {'
p13289
aS'\t\tdev_err(dev, "count: %zx exceeds UNIT_MAX\\n", count);'
p13290
aS'\t\treturn NULL;'
p13291
aS'\t}'
p13292
ag119
as(I549
I549
tp13293
(lp13294
S'\tsize_t count = ALIGN(size, SZ_4K) >> PAGE_SHIFT;'
p13295
asssssS'CVE-2019-11833'
p13296
(dp13297
S'a42d482efe49_sdm845-perf'
p13298
(dp13299
(S'fs/ext4/extents.c'
p13300
S'ext4_ext_split'
p13301
I1036
tp13302
(dp13303
g9
(I1036
I1277
tp13304
sg11
I6
sg12
g13
sg14
(dp13305
(I1225
I1229
tp13306
(lp13307
S'\t\t/* zero out unused area in the extent block */'
p13308
aS'\t\text_size = sizeof(struct ext4_extent_header) +'
p13309
aS'\t\t   (sizeof(struct ext4_extent) * le16_to_cpu(neh->eh_entries));'
p13310
aS'\t\tmemset(bh->b_data + ext_size, 0,'
p13311
aS'\t\t\tinode->i_sb->s_blocksize - ext_size);'
p13312
as(I1142
I1145
tp13313
(lp13314
S'\t/* zero out unused area in the extent block */'
p13315
aS'\text_size = sizeof(struct ext4_extent_header) +'
p13316
aS'\t\tsizeof(struct ext4_extent) * le16_to_cpu(neh->eh_entries);'
p13317
aS'\tmemset(bh->b_data + ext_size, 0, inode->i_sb->s_blocksize - ext_size);'
p13318
as(I1050
I1050
tp13319
(lp13320
S'\tsize_t ext_size = 0;'
p13321
asss(g13300
S'ext4_ext_grow_indepth'
p13322
I1287
tp13323
(dp13324
g27
(dp13325
(I1323
I1324
tp13326
(lp13327
S'\tmemmove(bh->b_data, EXT4_I(inode)->i_data,'
p13328
aS'\t\tsizeof(EXT4_I(inode)->i_data));'
p13329
assg9
(I1287
I1365
tp13330
sg11
I3
sg12
g13
sg14
(dp13331
(I1321
I1321
tp13332
(lp13333
S'\text_size = sizeof(EXT4_I(inode)->i_data);'
p13334
as(I1295
I1295
tp13335
(lp13336
S'\tsize_t ext_size = 0;'
p13337
as(I1323
I1325
tp13338
(lp13339
S'\tmemmove(bh->b_data, EXT4_I(inode)->i_data, ext_size);'
p13340
aS'\t/* zero out unused area in the extent block */'
p13341
aS'\tmemset(bh->b_data + ext_size, 0, inode->i_sb->s_blocksize - ext_size);'
p13342
asssssS'CVE-2018-11823'
p13343
(dp13344
S'3f308e403e30_sdm845-perf'
p13345
(dp13346
(S'drivers/cpuidle/lpm-levels-of.c'
p13347
S'parse_cluster'
p13348
I797
tp13349
(dp13350
g27
(dp13351
(I828
I828
tp13352
(lp13353
S'\t\t\tif (parse_cluster_level(n, c))'
p13354
as(I856
I856
tp13355
(lp13356
S'\t\t\tif (parse_cpu_levels(n, c))'
p13357
as(I841
I841
tp13358
(lp13359
S'\t\t\tif (!child)'
p13360
as(I890
I890
tp13361
(lp13362
S'\tc->parent = NULL;'
p13363
assg9
(I797
I892
tp13364
sg11
I2
sg12
g13
sg14
(dp13365
(I841
I842
tp13366
(lp13367
S'\t\t\tif (!child) {'
p13368
aS'\t\t\t\tof_node_put(n);'
p13369
as(I859
I859
tp13370
(lp13371
S'\t\t\t}'
p13372
as(I828
I829
tp13373
(lp13374
S'\t\t\tif (parse_cluster_level(n, c)) {'
p13375
aS'\t\t\t\tof_node_put(n);'
p13376
as(I844
I844
tp13377
(lp13378
S'\t\t\t}'
p13379
as(I856
I857
tp13380
(lp13381
S'\t\t\tif (parse_cpu_levels(n, c)) {'
p13382
aS'\t\t\t\tof_node_put(n);'
p13383
as(I862
I862
tp13384
(lp13385
S'\t\t\tof_node_put(n);'
p13386
as(I850
I850
tp13387
(lp13388
S'\t\t\tof_node_put(n);'
p13389
as(I831
I832
tp13390
(lp13391
S'\t\t\t}'
p13392
aS'\t\t\tof_node_put(n);'
p13393
assssS'9856d84237c1_sdm845-perf'
p13394
(dp13395
(g13347
S'parse_cpu_levels'
p13396
I709
tp13397
(dp13398
g27
(dp13399
(I767
I773
tp13400
(lp13401
S'failed_parse_cpu:'
p13402
aS'\tfor (i = 0; i < cpu->nlevels; i++) {'
p13403
aS'\t\tkfree(cpu->levels[i].name);'
p13404
aS'\t\tcpu->levels[i].name = NULL;'
p13405
aS'\t}'
p13406
ag119
aS'failed_parse_params:'
p13407
as(I732
I732
tp13408
(lp13409
S'\t\tgoto failed_parse_params;'
p13410
as(I760
I760
tp13411
(lp13412
S'\t\tgoto failed_parse_cpu;'
p13413
as(I711
I711
tp13414
(lp13415
S'\tint ret, i;'
p13416
as(I727
I727
tp13417
(lp13418
S'\t\tgoto failed_parse_params;'
p13419
assg9
(I709
I770
tp13420
sg11
I2
sg12
g13
sg14
(dp13421
(I711
I711
tp13422
(lp13423
S'\tint ret;'
p13424
as(I732
I732
tp13425
(lp13426
S'\t\tgoto failed;'
p13427
as(I760
I760
tp13428
(lp13429
S'\t\tgoto failed;'
p13430
as(I727
I727
tp13431
(lp13432
S'\t\tgoto failed;'
p13433
as(I767
I767
tp13434
(lp13435
S'failed:'
p13436
asss(g13347
S'free_cluster_node'
p13437
I772
tp13438
(dp13439
g27
(dp13440
(I782
I784
tp13441
(lp13442
S'\tlist_for_each_entry_safe(cpu, n, &cluster->cpu, list) {'
p13443
aS'\t\tint i;'
p13444
ag119
as(I784
I788
tp13445
(lp13446
S'\t\tfor (i = 0; i < cpu->nlevels; i++) {'
p13447
aS'\t\t\tkfree(cpu->levels[i].name);'
p13448
aS'\t\t\tcpu->levels[i].name = NULL;'
p13449
aS'\t\t}'
p13450
aS'\t}'
p13451
assg9
(I772
I784
tp13452
sg11
I1
sg12
g13
sg14
(dp13453
(I782
I782
tp13454
(lp13455
S'\tlist_for_each_entry_safe(cpu, n, &cluster->cpu, list)'
p13456
asss(g13347
g13348
I792
tp13457
(dp13458
g27
(dp13459
(I876
I876
tp13460
(lp13461
S'\tc->parent = NULL;'
p13462
assg9
(I792
I878
tp13463
sg11
I2
sg12
g13
ssssS'CVE-2019-19537'
p13464
(dp13465
S'7bb76790999d_sdm845-perf'
p13466
(dp13467
(S'drivers/usb/core/file.c'
p13468
S'usb_register_dev'
p13469
I154
tp13470
(dp13471
g27
(dp13472
(I194
I195
tp13473
(lp13474
S'\tup_write(&minor_rwsem);'
p13475
aS'\tif (intf->minor < 0)'
p13476
as(I205
I205
tp13477
(lp13478
S'\t\tdown_write(&minor_rwsem);'
p13479
as(I207
I207
tp13480
(lp13481
S'\t\tup_write(&minor_rwsem);'
p13482
assg9
(I154
I211
tp13483
sg11
I2
sg12
g13
sg14
(dp13484
(I194
I195
tp13485
(lp13486
S'\tif (intf->minor < 0) {'
p13487
aS'\t\tup_write(&minor_rwsem);'
p13488
as(I209
I209
tp13489
(lp13490
S'\tup_write(&minor_rwsem);'
p13491
as(I197
I197
tp13492
(lp13493
S'\t}'
p13494
asss(g13468
S'usb_deregister_dev'
p13495
I228
tp13496
(dp13497
g27
(dp13498
(I241
I241
tp13499
(lp13500
S'\tdevice_destroy(usb_class->class, MKDEV(USB_MAJOR, intf->minor));'
p13501
assg9
(I228
I244
tp13502
sg11
I2
sg12
g13
sg14
(dp13503
(I235
I235
tp13504
(lp13505
S'\tdevice_destroy(usb_class->class, MKDEV(USB_MAJOR, intf->minor));'
p13506
asssssS'CVE-2019-14283'
p13507
(dp13508
S'7bb76790999d_sdm845-perf'
p13509
(dp13510
(S'drivers/block/floppy.c'
p13511
S'set_geometry'
p13512
I3234
tp13513
(dp13514
g27
(dp13515
(I3240
I3241
tp13516
(lp13517
S'\tif (g->sect <= 0 ||'
p13518
aS'\t    g->head <= 0 ||'
p13519
assg9
(I3234
I3306
tp13520
sg11
I5
sg12
g13
sg14
(dp13521
(I3240
I3245
tp13522
(lp13523
S'\tif ((int)g->sect <= 0 ||'
p13524
aS'\t    (int)g->head <= 0 ||'
p13525
aS'\t    /* check for overflow in max_sector */'
p13526
aS'\t    (int)(g->sect * g->head) <= 0 ||'
p13527
aS'\t    /* check for zero in F_SECT_PER_TRACK */'
p13528
aS'\t    (unsigned char)((g->sect << 2) >> FD_SIZECODE(g)) == 0 ||'
p13529
asssssS'CVE-2019-14044'
p13530
(dp13531
S'679b010b8fa6_sdm845-perf'
p13532
(dp13533
(S'drivers/media/platform/msm/camera/cam_icp/icp_hw/icp_hw_mgr/cam_icp_hw_mgr.c'
p13534
S'cam_icp_deinit_idle_clk'
p13535
I248
tp13536
(dp13537
g27
(dp13538
(I274
I274
tp13539
(lp13540
S'\t\tif ((ctx_data->state != CAM_ICP_CTX_STATE_FREE) &&'
p13541
as(I263
I265
tp13542
(lp13543
S'\tipe0_dev_intf = hw_mgr->devices[CAM_ICP_DEV_IPE][0];'
p13544
aS'\tipe1_dev_intf = hw_mgr->devices[CAM_ICP_DEV_IPE][1];'
p13545
aS'\tbps_dev_intf = hw_mgr->devices[CAM_ICP_DEV_BPS][0];'
p13546
assg9
(I248
I312
tp13547
sg11
I2
sg12
g13
sg14
(dp13548
(I274
I274
tp13549
(lp13550
S'\t\tif ((ctx_data->state == CAM_ICP_CTX_STATE_ACQUIRED) &&'
p13551
as(I263
I265
tp13552
(lp13553
S'\tipe0_dev_intf = hw_mgr->ipe0_dev_intf;'
p13554
aS'\tipe1_dev_intf = hw_mgr->ipe1_dev_intf;'
p13555
aS'\tbps_dev_intf = hw_mgr->bps_dev_intf;'
p13556
assssS'56c91ae1aa57_sdm845-perf'
p13557
(dp13558
(g13534
g13535
I247
tp13559
(dp13560
g27
(dp13561
(I262
I264
tp13562
(lp13563
S'\tipe0_dev_intf = hw_mgr->devices[CAM_ICP_DEV_IPE][0];'
p13564
aS'\tipe1_dev_intf = hw_mgr->devices[CAM_ICP_DEV_IPE][1];'
p13565
aS'\tbps_dev_intf = hw_mgr->devices[CAM_ICP_DEV_BPS][0];'
p13566
assg9
(I247
I311
tp13567
sg11
I2
sg12
g13
sg14
(dp13568
(I262
I264
tp13569
(lp13570
S'\tipe0_dev_intf = hw_mgr->ipe0_dev_intf;'
p13571
aS'\tipe1_dev_intf = hw_mgr->ipe1_dev_intf;'
p13572
aS'\tbps_dev_intf = hw_mgr->bps_dev_intf;'
p13573
asss(g13534
S'cam_icp_supported_clk_rates'
p13574
I191
tp13575
(dp13576
g27
(dp13577
(I200
I200
tp13578
(lp13579
S'\t\tdev_intf = hw_mgr->devices[CAM_ICP_DEV_BPS][0];'
p13580
as(I202
I202
tp13581
(lp13582
S'\t\tdev_intf = hw_mgr->devices[CAM_ICP_DEV_IPE][0];'
p13583
assg9
(I191
I219
tp13584
sg11
I2
sg12
g13
sg14
(dp13585
(I200
I200
tp13586
(lp13587
S'\t\tdev_intf = hw_mgr->bps_dev_intf;'
p13588
as(I202
I202
tp13589
(lp13590
S'\t\tdev_intf = hw_mgr->ipe0_dev_intf;'
p13591
assssS'c287f849c93a_sdm845-perf'
p13592
(dp13593
(g13534
g13535
I282
tp13594
(dp13595
g27
(dp13596
(I363
I363
tp13597
(lp13598
S'\treturn 0;'
p13599
as(I346
I346
tp13600
(lp13601
S'\t\treturn 0;'
p13602
as(I334
I334
tp13603
(lp13604
S'\t\treturn -EINVAL;'
p13605
as(I312
I314
tp13606
(lp13607
S'\t\tif ((ctx_data->state != CAM_ICP_CTX_STATE_FREE) &&'
p13608
aS'\t\t\t(ICP_DEV_TYPE_TO_CLK_TYPE(ctx_data->'
p13609
aS'\t\t\ticp_dev_acquire_info->dev_type) == clk_info->hw_type))'
p13610
as(I299
I301
tp13611
(lp13612
S'\tipe0_dev_intf = hw_mgr->devices[CAM_ICP_DEV_IPE][0];'
p13613
aS'\tipe1_dev_intf = hw_mgr->devices[CAM_ICP_DEV_IPE][1];'
p13614
aS'\tbps_dev_intf = hw_mgr->devices[CAM_ICP_DEV_BPS][0];'
p13615
assg9
(I282
I366
tp13616
sg11
I2
sg12
g13
sg14
(dp13617
(I346
I346
tp13618
(lp13619
S'\t\tgoto done;'
p13620
as(I326
I331
tp13621
(lp13622
S'\tif (busy) {'
p13623
aS'\t\tcam_icp_device_timer_reset(hw_mgr, clk_info->hw_type);'
p13624
aS'\t\trc = -EBUSY;'
p13625
aS'\t\tgoto done;'
p13626
aS'\t}'
p13627
ag119
as(I296
I297
tp13628
(lp13629
S'\tint rc = 0;'
p13630
aS'\tbool busy = false;'
p13631
as(I334
I335
tp13632
(lp13633
S'\t\trc = -EINVAL;'
p13634
aS'\t\tgoto done;'
p13635
as(I363
I365
tp13636
(lp13637
S'done:'
p13638
aS'\tmutex_unlock(&hw_mgr->hw_mgr_mutex);'
p13639
aS'\treturn rc;'
p13640
as(I322
I322
tp13641
(lp13642
S'\t\t}'
p13643
as(I312
I320
tp13644
(lp13645
S'\t\tif ((ctx_data->state == CAM_ICP_CTX_STATE_ACQUIRED) &&'
p13646
aS'\t\t\t(ICP_DEV_TYPE_TO_CLK_TYPE('
p13647
aS'\t\t\tctx_data->icp_dev_acquire_info->dev_type)'
p13648
aS'\t\t\t== clk_info->hw_type)) {'
p13649
aS'\t\t\tbusy = cam_icp_frame_pending(ctx_data);'
p13650
aS'\t\t\tif (busy) {'
p13651
aS'\t\t\t\tmutex_unlock(&ctx_data->ctx_mutex);'
p13652
aS'\t\t\t\tbreak;'
p13653
aS'\t\t\t}'
p13654
as(I307
I308
tp13655
(lp13656
S'\tmutex_lock(&hw_mgr->hw_mgr_mutex);'
p13657
ag119
as(I299
I301
tp13658
(lp13659
S'\tipe0_dev_intf = hw_mgr->ipe0_dev_intf;'
p13660
aS'\tipe1_dev_intf = hw_mgr->ipe1_dev_intf;'
p13661
aS'\tbps_dev_intf = hw_mgr->bps_dev_intf;'
p13662
asssssS'CVE-2019-10638'
p13663
(dp13664
S'a42d482efe49_sdm845-perf'
p13665
(dp13666
(S'net/core/net_namespace.c'
p13667
S'setup_net'
p13668
I276
tp13669
(dp13670
g9
(I276
I314
tp13671
sg11
I2
sg12
g13
sg14
(dp13672
(I285
I285
tp13673
(lp13674
S'\tget_random_bytes(&net->hash_mix, sizeof(u32));'
p13675
asssssS'CVE-2019-2213'
p13676
(dp13677
S'7bb76790999d_sdm845-perf'
p13678
(dp13679
(S'drivers/android/binder.c'
p13680
S'binder_free_transaction'
p13681
I2136
tp13682
(dp13683
g27
(dp13684
(I2138
I2139
tp13685
(lp13686
S'\tif (t->buffer)'
p13687
aS'\t\tt->buffer->transaction = NULL;'
p13688
assg9
(I2136
I2160
tp13689
sg11
I1
sg12
g13
sg14
(dp13690
(I2138
I2157
tp13691
(lp13692
S'\tstruct binder_proc *target_proc;'
p13693
ag119
aS'\tspin_lock(&t->lock);'
p13694
aS'\ttarget_proc = t->to_proc;'
p13695
aS'\tif (target_proc) {'
p13696
aS'\t\tatomic_inc(&target_proc->tmp_ref);'
p13697
aS'\t\tspin_unlock(&t->lock);'
p13698
ag119
aS'\t\tbinder_inner_proc_lock(target_proc);'
p13699
aS'\t\tif (t->buffer)'
p13700
aS'\t\t\tt->buffer->transaction = NULL;'
p13701
aS'\t\tbinder_inner_proc_unlock(target_proc);'
p13702
aS'\t\tbinder_proc_dec_tmpref(target_proc);'
p13703
aS'\t} else {'
p13704
aS'\t\t/*'
p13705
aS'\t\t * If the transaction has no target_proc, then'
p13706
aS'\t\t * t->buffer->transaction * has already been cleared.'
p13707
aS'\t\t */'
p13708
aS'\t\tspin_unlock(&t->lock);'
p13709
aS'\t}'
p13710
asssss.